

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 21 19:12:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 18/08/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _ADRESL	set	4035
    94   000000                     _ADRESH	set	4036
    95   000000                     _ADCON0bits	set	4034
    96   000000                     _PORTDbits	set	3971
    97   000000                     _PORTBbits	set	3969
    98   000000                     _PORTD	set	3971
    99   000000                     _TRISD	set	3989
   100   000000                     _OSCTUNE	set	3995
   101   000000                     _OSCCON	set	4051
   102   000000                     _TRISEbits	set	3990
   103   000000                     _TRISB	set	3987
   104   000000                     _PORTEbits	set	3972
   105   000000                     _ADCON2	set	4032
   106   000000                     _ADCON1	set	4033
   107   000000                     _ADCON0	set	4034
   108                           
   109                           	psect	smallconst
   110   000600                     __psmallconst:
   111                           	callstack 0
   112   000600  00                 	db	0
   113   000601                     STR_6:
   114   000601  20                 	db	32
   115   000602  41                 	db	65	;'A'
   116   000603  55                 	db	85	;'U'
   117   000604  54                 	db	84	;'T'
   118   000605  4F                 	db	79	;'O'
   119   000606  4D                 	db	77	;'M'
   120   000607  41                 	db	65	;'A'
   121   000608  43                 	db	67	;'C'
   122   000609  41                 	db	65	;'A'
   123   00060A  4F                 	db	79	;'O'
   124   00060B  20                 	db	32
   125   00060C  49                 	db	73	;'I'
   126   00060D  4E                 	db	78	;'N'
   127   00060E  44                 	db	68	;'D'
   128   00060F  20                 	db	32
   129   000610  00                 	db	0
   130   000611                     STR_2:
   131   000611  25                 	db	37
   132   000612  30                 	db	48	;'0'
   133   000613  2E                 	db	46
   134   000614  32                 	db	50	;'2'
   135   000615  66                 	db	102	;'f'
   136   000616  20                 	db	32
   137   000617  56                 	db	86	;'V'
   138   000618  20                 	db	32
   139   000619  20                 	db	32
   140   00061A  20                 	db	32
   141   00061B  20                 	db	32
   142   00061C  20                 	db	32
   143   00061D  20                 	db	32
   144   00061E  20                 	db	32
   145   00061F  00                 	db	0
   146   000620                     STR_1:
   147   000620  25                 	db	37
   148   000621  30                 	db	48	;'0'
   149   000622  31                 	db	49	;'1'
   150   000623  64                 	db	100	;'d'
   151   000624  20                 	db	32
   152   000625  44                 	db	68	;'D'
   153   000626  49                 	db	73	;'I'
   154   000627  47                 	db	71	;'G'
   155   000628  20                 	db	32
   156   000629  20                 	db	32
   157   00062A  20                 	db	32
   158   00062B  20                 	db	32
   159   00062C  20                 	db	32
   160   00062D  20                 	db	32
   161   00062E  00                 	db	0
   162   00062F                     STR_5:
   163   00062F  20                 	db	32
   164   000630  20                 	db	32
   165   000631  41                 	db	65	;'A'
   166   000632  55                 	db	85	;'U'
   167   000633  4C                 	db	76	;'L'
   168   000634  41                 	db	65	;'A'
   169   000635  20                 	db	32
   170   000636  4D                 	db	77	;'M'
   171   000637  49                 	db	73	;'I'
   172   000638  43                 	db	67	;'C'
   173   000639  52                 	db	82	;'R'
   174   00063A  4F                 	db	79	;'O'
   175   00063B  20                 	db	32
   176   00063C  20                 	db	32
   177   00063D  00                 	db	0
   178   00063E                     STR_4:
   179   00063E  56                 	db	86	;'V'
   180   00063F  6F                 	db	111	;'o'
   181   000640  6C                 	db	108	;'l'
   182   000641  74                 	db	116	;'t'
   183   000642  61                 	db	97	;'a'
   184   000643  67                 	db	103	;'g'
   185   000644  65                 	db	101	;'e'
   186   000645  3A                 	db	58	;':'
   187   000646  20                 	db	32
   188   000647  20                 	db	32
   189   000648  20                 	db	32
   190   000649  00                 	db	0
   191   00064A                     STR_3:
   192   00064A  41                 	db	65	;'A'
   193   00064B  2F                 	db	47
   194   00064C  44                 	db	68	;'D'
   195   00064D  3A                 	db	58	;':'
   196   00064E  20                 	db	32
   197   00064F  20                 	db	32
   198   000650  20                 	db	32
   199   000651  00                 	db	0
   200   000652                     STR_7:
   201   000652  69                 	db	105	;'i'
   202   000653  6E                 	db	110	;'n'
   203   000654  66                 	db	102	;'f'
   204   000655  00                 	db	0
   205   000656                     STR_10:
   206   000656  6E                 	db	110	;'n'
   207   000657  61                 	db	97	;'a'
   208   000658  6E                 	db	110	;'n'
   209   000659  00                 	db	0
   210   00065A  00                 	db	0	; dummy byte at the end
   211   000000                     
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215   0038DC                     __pcinit:
   216                           	callstack 0
   217   0038DC                     start_initialization:
   218                           	callstack 0
   219   0038DC                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Clear objects allocated to BANK1 (80 bytes)
   223   0038DC  EE01  F000         	lfsr	0,__pbssBANK1
   224   0038E0  0E50               	movlw	80
   225   0038E2                     clear_0:
   226   0038E2  6AEE               	clrf	postinc0,c
   227   0038E4  06E8               	decf	wreg,f,c
   228   0038E6  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to BANK0 (50 bytes)
   231   0038E8  EE00  F080         	lfsr	0,__pbssBANK0
   232   0038EC  0E32               	movlw	50
   233   0038EE                     clear_1:
   234   0038EE  6AEE               	clrf	postinc0,c
   235   0038F0  06E8               	decf	wreg,f,c
   236   0038F2  E1FD               	bnz	clear_1
   237                           
   238                           ; Clear objects allocated to COMRAM (1 bytes)
   239   0038F4  6A7F               	clrf	__pbssCOMRAM& (0+255),c
   240   0038F6                     end_of_initialization:
   241                           	callstack 0
   242   0038F6                     __end_of__initialization:
   243                           	callstack 0
   244   0038F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245   0038F8  6EF8               	movwf	tblptru,c
   246   0038FA  0100               	movlb	0
   247   0038FC  EF17  F01C         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250   00007F                     __pbssCOMRAM:
   251                           	callstack 0
   252   00007F                     _flags:
   253                           	callstack 0
   254   00007F                     	ds	1
   255                           
   256                           	psect	bssBANK0
   257   000080                     __pbssBANK0:
   258                           	callstack 0
   259   000080                     floorf@F526:
   260                           	callstack 0
   261   000080                     	ds	4
   262   000084                     ___fpclassifyf@F465:
   263                           	callstack 0
   264   000084                     	ds	4
   265   000088                     _Voltage_AN0:
   266                           	callstack 0
   267   000088                     	ds	4
   268   00008C                     _width:
   269                           	callstack 0
   270   00008C                     	ds	2
   271   00008E                     _prec:
   272                           	callstack 0
   273   00008E                     	ds	2
   274   000090                     _VdigADC_AN0:
   275                           	callstack 0
   276   000090                     	ds	2
   277   000092                     _VoltageBuffer:
   278                           	callstack 0
   279   000092                     	ds	16
   280   0000A2                     _VdigBuffer:
   281                           	callstack 0
   282   0000A2                     	ds	16
   283                           
   284                           	psect	bssBANK1
   285   000100                     __pbssBANK1:
   286                           	callstack 0
   287   000100                     _dbuf:
   288                           	callstack 0
   289   000100                     	ds	80
   290                           
   291                           	psect	cstackBANK0
   292   0000B2                     __pcstackBANK0:
   293                           	callstack 0
   294   0000B2                     ?_vfprintf:
   295                           	callstack 0
   296   0000B2                     vfprintf@fp:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x0
   300   0000B2                     	ds	2
   301   0000B4                     vfprintf@fmt:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2
   305   0000B4                     	ds	2
   306   0000B6                     vfprintf@ap:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x4
   310   0000B6                     	ds	2
   311   0000B8                     vfprintf@cfmt:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x6
   315   0000B8                     	ds	2
   316   0000BA                     ?_sprintf:
   317                           	callstack 0
   318   0000BA                     sprintf@s:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322   0000BA                     	ds	2
   323   0000BC                     sprintf@fmt:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0xA
   327   0000BC                     	ds	6
   328   0000C2                     sprintf@ap:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x10
   332   0000C2                     	ds	2
   333   0000C4                     sprintf@f:
   334                           	callstack 0
   335                           
   336                           ; 11 bytes @ 0x12
   337   0000C4                     	ds	11
   338                           
   339                           	psect	cstackCOMRAM
   340   000001                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000001                     ?___fpclassifyf:
   343                           	callstack 0
   344   000001                     ?_isdigit:
   345                           	callstack 0
   346   000001                     ?_isspace:
   347                           	callstack 0
   348   000001                     ?___wmul:
   349                           	callstack 0
   350   000001                     ?___fladd:
   351                           	callstack 0
   352   000001                     ?___fldiv:
   353                           	callstack 0
   354   000001                     ?_labs:
   355                           	callstack 0
   356   000001                     ?___flneg:
   357                           	callstack 0
   358   000001                     ?___fltol:
   359                           	callstack 0
   360   000001                     ?___xxtofl:
   361                           	callstack 0
   362   000001                     ?___aodiv:
   363                           	callstack 0
   364   000001                     ?___aomod:
   365                           	callstack 0
   366   000001                     set_bit@comp:
   367                           	callstack 0
   368   000001                     ___wmul@multiplier:
   369                           	callstack 0
   370   000001                     isdigit@c:
   371                           	callstack 0
   372   000001                     isspace@c:
   373                           	callstack 0
   374   000001                     memcpy@d1:
   375                           	callstack 0
   376   000001                     fputc@c:
   377                           	callstack 0
   378   000001                     strcpy@dest:
   379                           	callstack 0
   380   000001                     ___fleq@ff1:
   381                           	callstack 0
   382   000001                     ___flneg@f1:
   383                           	callstack 0
   384   000001                     ___fltol@f1:
   385                           	callstack 0
   386   000001                     ___fladd@b:
   387                           	callstack 0
   388   000001                     ___fldiv@b:
   389                           	callstack 0
   390   000001                     ___xxtofl@val:
   391                           	callstack 0
   392   000001                     ___fpclassifyf@x:
   393                           	callstack 0
   394   000001                     labs@a:
   395                           	callstack 0
   396   000001                     ___aodiv@dividend:
   397                           	callstack 0
   398   000001                     ___aomod@dividend:
   399                           	callstack 0
   400                           
   401                           ; 8 bytes @ 0x0
   402   000001                     	ds	1
   403   000002                     set_bit@cmd:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x1
   407   000002                     	ds	1
   408   000003                     ??_lcd_cmd:
   409   000003                     ??_isdigit:
   410   000003                     ??_isspace:
   411   000003                     ___wmul@multiplicand:
   412                           	callstack 0
   413   000003                     memcpy@s1:
   414                           	callstack 0
   415   000003                     fputc@fp:
   416                           	callstack 0
   417   000003                     strcpy@src:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421   000003                     	ds	1
   422   000004                     lcd_cmd@cmd:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x3
   426   000004                     	ds	1
   427   000005                     ??_fputc:
   428   000005                     ??___fpclassifyf:
   429   000005                     ??_labs:
   430   000005                     ??_lcd_init:
   431   000005                     ??___fltol:
   432   000005                     ??___xxtofl:
   433   000005                     lcd_send_byte@data:
   434                           	callstack 0
   435   000005                     _isspace$1129:
   436                           	callstack 0
   437   000005                     ___wmul@product:
   438                           	callstack 0
   439   000005                     memcpy@n:
   440                           	callstack 0
   441   000005                     strcpy@s:
   442                           	callstack 0
   443   000005                     ___fleq@ff2:
   444                           	callstack 0
   445   000005                     ___fladd@a:
   446                           	callstack 0
   447   000005                     ___fldiv@a:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x4
   451   000005                     	ds	1
   452   000006                     lcd_init@i:
   453                           	callstack 0
   454   000006                     lcd_send_byte@level:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x5
   458   000006                     	ds	1
   459   000007                     ?_atoi:
   460                           	callstack 0
   461   000007                     lcd_write@col:
   462                           	callstack 0
   463   000007                     atoi@s:
   464                           	callstack 0
   465   000007                     memcpy@d:
   466                           	callstack 0
   467   000007                     strcpy@d:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x6
   471   000007                     	ds	1
   472   000008                     lcd_write@str:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x7
   476   000008                     	ds	1
   477   000009                     ??___fladd:
   478   000009                     ??___fldiv:
   479   000009                     ??_atoi:
   480   000009                     ??___fleq:
   481   000009                     ___fltol@sign1:
   482                           	callstack 0
   483   000009                     ___xxtofl@sign:
   484                           	callstack 0
   485   000009                     ___fpclassifyf@e:
   486                           	callstack 0
   487   000009                     memcpy@s:
   488                           	callstack 0
   489   000009                     ___aodiv@divisor:
   490                           	callstack 0
   491   000009                     ___aomod@divisor:
   492                           	callstack 0
   493                           
   494                           ; 8 bytes @ 0x8
   495   000009                     	ds	1
   496   00000A                     lcd_write@end:
   497                           	callstack 0
   498   00000A                     ___fltol@exp1:
   499                           	callstack 0
   500   00000A                     ___xxtofl@exp:
   501                           	callstack 0
   502   00000A                     fputs@s:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x9
   506   00000A                     	ds	1
   507   00000B                     lcd_write@lin:
   508                           	callstack 0
   509   00000B                     memcpy@tmp:
   510                           	callstack 0
   511   00000B                     ___xxtofl@arg:
   512                           	callstack 0
   513   00000B                     ___fpclassifyf@u:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0xA
   517   00000B                     	ds	1
   518   00000C                     atoi@neg:
   519                           	callstack 0
   520   00000C                     fputs@fp:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xB
   524   00000C                     	ds	1
   525   00000D                     ___fladd@signs:
   526                           	callstack 0
   527   00000D                     ___fldiv@rem:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0xC
   531   00000D                     	ds	1
   532   00000E                     ___fladd@aexp:
   533                           	callstack 0
   534   00000E                     fputs@c:
   535                           	callstack 0
   536   00000E                     atoi@n:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xD
   540   00000E                     	ds	1
   541   00000F                     ?___flmul:
   542                           	callstack 0
   543   00000F                     ___fladd@bexp:
   544                           	callstack 0
   545   00000F                     fputs@i:
   546                           	callstack 0
   547   00000F                     ___flmul@b:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0xE
   551   00000F                     	ds	1
   552   000010                     ___fladd@grs:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0xF
   556   000010                     	ds	1
   557   000011                     ___aodiv@counter:
   558                           	callstack 0
   559   000011                     ___aomod@counter:
   560                           	callstack 0
   561   000011                     ___fldiv@sign:
   562                           	callstack 0
   563   000011                     pad@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x10
   567   000011                     	ds	1
   568   000012                     ___aodiv@sign:
   569                           	callstack 0
   570   000012                     ___aomod@sign:
   571                           	callstack 0
   572   000012                     ___fldiv@new_exp:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x11
   576   000012                     	ds	1
   577   000013                     ?_abs:
   578                           	callstack 0
   579   000013                     pad@buf:
   580                           	callstack 0
   581   000013                     abs@a:
   582                           	callstack 0
   583   000013                     ___flmul@a:
   584                           	callstack 0
   585   000013                     ___aodiv@quotient:
   586                           	callstack 0
   587                           
   588                           ; 8 bytes @ 0x12
   589   000013                     	ds	1
   590   000014                     ___fldiv@grs:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x13
   594   000014                     	ds	1
   595   000015                     ??_abs:
   596   000015                     pad@p:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x14
   600   000015                     	ds	2
   601   000017                     ??___flmul:
   602   000017                     ??_pad:
   603                           
   604                           ; 1 bytes @ 0x16
   605   000017                     	ds	1
   606   000018                     ___fldiv@bexp:
   607                           	callstack 0
   608   000018                     pad@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x17
   612   000018                     	ds	1
   613   000019                     ___fldiv@aexp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x18
   617   000019                     	ds	1
   618   00001A                     ?_floorf:
   619                           	callstack 0
   620   00001A                     pad@w:
   621                           	callstack 0
   622   00001A                     floorf@x:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0x19
   626   00001A                     	ds	1
   627   00001B                     ___flmul@sign:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x1A
   631   00001B                     	ds	1
   632   00001C                     dtoa@fp:
   633                           	callstack 0
   634   00001C                     ___flmul@grs:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x1B
   638   00001C                     	ds	2
   639   00001E                     ??_floorf:
   640   00001E                     dtoa@d:
   641                           	callstack 0
   642                           
   643                           ; 8 bytes @ 0x1D
   644   00001E                     	ds	2
   645   000020                     ___flmul@aexp:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x1F
   649   000020                     	ds	1
   650   000021                     ___flmul@bexp:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x20
   654   000021                     	ds	1
   655   000022                     ___flmul@prod:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x21
   659   000022                     	ds	2
   660   000024                     floorf@m:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x23
   664   000024                     	ds	2
   665   000026                     ??_dtoa:
   666   000026                     ___flmul@temp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x25
   670   000026                     	ds	2
   671   000028                     ??_conv_AN0:
   672   000028                     ?___flsub:
   673                           	callstack 0
   674   000028                     floorf@e:
   675                           	callstack 0
   676   000028                     ___flge@ff1:
   677                           	callstack 0
   678   000028                     ___flsub@b:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x27
   682   000028                     	ds	2
   683   00002A                     floorf@u:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x29
   687   00002A                     	ds	2
   688   00002C                     ___flge@ff2:
   689                           	callstack 0
   690   00002C                     ___flsub@a:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x2B
   694   00002C                     	ds	2
   695   00002E                     _dtoa$1018:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x2D
   699   00002E                     	ds	2
   700   000030                     ??___flge:
   701   000030                     dtoa@p:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x2F
   705   000030                     	ds	2
   706   000032                     dtoa@w:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x31
   710   000032                     	ds	2
   711   000034                     efgtoa@fp:
   712                           	callstack 0
   713   000034                     dtoa@n:
   714                           	callstack 0
   715                           
   716                           ; 8 bytes @ 0x33
   717   000034                     	ds	2
   718   000036                     efgtoa@f:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x35
   722   000036                     	ds	4
   723   00003A                     efgtoa@c:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x39
   727   00003A                     	ds	1
   728   00003B                     ??_efgtoa:
   729                           
   730                           ; 1 bytes @ 0x3A
   731   00003B                     	ds	1
   732   00003C                     dtoa@i:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x3B
   736   00003C                     	ds	1
   737   00003D                     efgtoa@ne:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x3C
   741   00003D                     	ds	1
   742   00003E                     dtoa@s:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x3D
   746   00003E                     	ds	1
   747   00003F                     efgtoa@p:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x3E
   751   00003F                     	ds	2
   752   000041                     efgtoa@t:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x40
   756   000041                     	ds	2
   757   000043                     _efgtoa$1049:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x42
   761   000043                     	ds	2
   762   000045                     efgtoa@pp:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x44
   766   000045                     	ds	1
   767   000046                     efgtoa@mode:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x45
   771   000046                     	ds	1
   772   000047                     efgtoa@nmode:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x46
   776   000047                     	ds	1
   777   000048                     efgtoa@d:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x47
   781   000048                     	ds	2
   782   00004A                     efgtoa@m:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x49
   786   00004A                     	ds	2
   787   00004C                     efgtoa@e:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x4B
   791   00004C                     	ds	2
   792   00004E                     efgtoa@w:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x4D
   796   00004E                     	ds	2
   797   000050                     efgtoa@ou:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x4F
   801   000050                     	ds	4
   802   000054                     efgtoa@h:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x53
   806   000054                     	ds	4
   807   000058                     efgtoa@l:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x57
   811   000058                     	ds	4
   812   00005C                     efgtoa@i:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x5B
   816   00005C                     	ds	2
   817   00005E                     efgtoa@sign:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x5D
   821   00005E                     	ds	1
   822   00005F                     efgtoa@g:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x5E
   826   00005F                     	ds	4
   827   000063                     efgtoa@n:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x62
   831   000063                     	ds	2
   832   000065                     efgtoa@u:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x64
   836   000065                     	ds	4
   837   000069                     vfpfcnvrt@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x68
   841   000069                     	ds	2
   842   00006B                     vfpfcnvrt@fmt:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x6A
   846   00006B                     	ds	2
   847   00006D                     vfpfcnvrt@ap:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x6C
   851   00006D                     	ds	2
   852   00006F                     ??_vfpfcnvrt:
   853                           
   854                           ; 1 bytes @ 0x6E
   855   00006F                     	ds	3
   856   000072                     vfpfcnvrt@done:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x71
   860   000072                     	ds	2
   861   000074                     vfpfcnvrt@convarg:
   862                           	callstack 0
   863                           
   864                           ; 8 bytes @ 0x73
   865   000074                     	ds	8
   866   00007C                     vfpfcnvrt@c:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x7B
   870   00007C                     	ds	1
   871   00007D                     vfpfcnvrt@cp:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x7C
   875   00007D                     	ds	2
   876   00007F                     
   877                           ; 1 bytes @ 0x7E
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 126 in file "Program_main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   897 ;;      Params:         0       0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels required when called: 9
   903 ;; This function calls:
   904 ;;		_config_ADC
   905 ;;		_config_FOSC
   906 ;;		_config_IO
   907 ;;		_conv_AN0
   908 ;;		_lcd_AD
   909 ;;		_lcd_BUTTON
   910 ;;		_lcd_init
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917   00382E                     __ptext0:
   918                           	callstack 0
   919   00382E                     _main:
   920                           	callstack 22
   921   00382E                     
   922                           ;Program_main.c: 128:     config_FOSC();
   923   00382E  ECA6  F01C         	call	_config_FOSC	;wreg free
   924                           
   925                           ;Program_main.c: 129:     config_IO();
   926   003832  ECAB  F01C         	call	_config_IO	;wreg free
   927                           
   928                           ;Program_main.c: 130:     config_ADC();
   929   003836  EC9F  F01C         	call	_config_ADC	;wreg free
   930   00383A                     
   931                           ;Program_main.c: 131:     lcd_init();
   932   00383A  ECD7  F019         	call	_lcd_init	;wreg free
   933   00383E                     l4060:
   934                           
   935                           ;Program_main.c: 133:     {;Program_main.c: 134:         conv_AN0();
   936   00383E  EC6D  F01A         	call	_conv_AN0	;wreg free
   937   003842                     
   938                           ;Program_main.c: 135:         if(PORTBbits.RB0 == 1) lcd_AD();
   939   003842  A081               	btfss	129,0,c	;volatile
   940   003844  EF26  F01C         	goto	u4561
   941   003848  EF28  F01C         	goto	u4560
   942   00384C                     u4561:
   943   00384C  EF2C  F01C         	goto	l4066
   944   003850                     u4560:
   945   003850  EC26  F01A         	call	_lcd_AD	;wreg free
   946   003854  EF1F  F01C         	goto	l4060
   947   003858                     l4066:
   948   003858  EC48  F01C         	call	_lcd_BUTTON	;wreg free
   949   00385C  EF1F  F01C         	goto	l4060
   950   003860  EF00  F000         	goto	start
   951   003864                     __end_of_main:
   952                           	callstack 0
   953                           
   954 ;; *************** function _lcd_init *****************
   955 ;; Defined at:
   956 ;;		line 3 in file "LCD4b_EXSTO.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  i               1    5[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0
   972 ;;      Temps:          1       0       0       0       0       0       0
   973 ;;      Totals:         2       0       0       0       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		_lcd_cmd
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text1
   985   0033AE                     __ptext1:
   986                           	callstack 0
   987   0033AE                     _lcd_init:
   988                           	callstack 28
   989   0033AE                     
   990                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
   991   0033AE  0E00               	movlw	0
   992   0033B0  6E95               	movwf	149,c	;volatile
   993   0033B2                     
   994                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
   995   0033B2  9496               	bcf	150,2,c	;volatile
   996   0033B4                     
   997                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
   998   0033B4  9296               	bcf	150,1,c	;volatile
   999   0033B6                     
  1000                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1001   0033B6  9096               	bcf	150,0,c	;volatile
  1002                           
  1003                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1004   0033B8  0E00               	movlw	0
  1005   0033BA  6E83               	movwf	131,c	;volatile
  1006   0033BC                     
  1007                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1008   0033BC  9084               	bcf	132,0,c	;volatile
  1009   0033BE                     
  1010                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1011   0033BE  9284               	bcf	132,1,c	;volatile
  1012   0033C0                     
  1013                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1014   0033C0  9484               	bcf	132,2,c	;volatile
  1015   0033C2                     
  1016                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1017   0033C2  0E27               	movlw	39
  1018   0033C4  6E05               	movwf	??_lcd_init^0,c
  1019   0033C6  0EF5               	movlw	245
  1020   0033C8                     u4577:
  1021   0033C8  2EE8               	decfsz	wreg,f,c
  1022   0033CA  D7FE               	bra	u4577
  1023   0033CC  2E05               	decfsz	??_lcd_init^0,f,c
  1024   0033CE  D7FC               	bra	u4577
  1025   0033D0  F000               	nop	
  1026   0033D2                     
  1027                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1028   0033D2  0E00               	movlw	0
  1029   0033D4  6E06               	movwf	lcd_init@i^0,c
  1030   0033D6                     l4008:
  1031                           
  1032                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1033   0033D6  0E30               	movlw	48
  1034   0033D8  EC06  F018         	call	_lcd_cmd
  1035   0033DC                     
  1036                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1037   0033DC  0E0D               	movlw	13
  1038   0033DE  6E05               	movwf	??_lcd_init^0,c
  1039   0033E0  0EFC               	movlw	252
  1040   0033E2                     u4587:
  1041   0033E2  2EE8               	decfsz	wreg,f,c
  1042   0033E4  D7FE               	bra	u4587
  1043   0033E6  2E05               	decfsz	??_lcd_init^0,f,c
  1044   0033E8  D7FC               	bra	u4587
  1045   0033EA                     
  1046                           ;LCD4b_EXSTO.c: 22:     }
  1047   0033EA  2A06               	incf	lcd_init@i^0,f,c
  1048   0033EC  0E02               	movlw	2
  1049   0033EE  6406               	cpfsgt	lcd_init@i^0,c
  1050   0033F0  EFFC  F019         	goto	u4541
  1051   0033F4  EFFE  F019         	goto	u4540
  1052   0033F8                     u4541:
  1053   0033F8  EFEB  F019         	goto	l4008
  1054   0033FC                     u4540:
  1055   0033FC                     
  1056                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1057   0033FC  0E02               	movlw	2
  1058   0033FE  EC06  F018         	call	_lcd_cmd
  1059   003402                     
  1060                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1061   003402  0E1A               	movlw	26
  1062   003404                     u4597:
  1063   003404  2EE8               	decfsz	wreg,f,c
  1064   003406  D7FE               	bra	u4597
  1065   003408  D000               	nop2	
  1066   00340A                     
  1067                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1068   00340A  0E28               	movlw	40
  1069   00340C  EC06  F018         	call	_lcd_cmd
  1070                           
  1071                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1072   003410  0E1A               	movlw	26
  1073   003412                     u4607:
  1074   003412  2EE8               	decfsz	wreg,f,c
  1075   003414  D7FE               	bra	u4607
  1076   003416  D000               	nop2	
  1077   003418                     
  1078                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1079   003418  0E01               	movlw	1
  1080   00341A  EC06  F018         	call	_lcd_cmd
  1081   00341E                     
  1082                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1083   00341E  0E06               	movlw	6
  1084   003420  6E05               	movwf	??_lcd_init^0,c
  1085   003422  0E30               	movlw	48
  1086   003424                     u4617:
  1087   003424  2EE8               	decfsz	wreg,f,c
  1088   003426  D7FE               	bra	u4617
  1089   003428  2E05               	decfsz	??_lcd_init^0,f,c
  1090   00342A  D7FC               	bra	u4617
  1091   00342C  D000               	nop2	
  1092                           
  1093                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1094   00342E  0E0C               	movlw	12
  1095   003430  EC06  F018         	call	_lcd_cmd
  1096   003434                     
  1097                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1098   003434  0E1A               	movlw	26
  1099   003436                     u4627:
  1100   003436  2EE8               	decfsz	wreg,f,c
  1101   003438  D7FE               	bra	u4627
  1102   00343A  D000               	nop2	
  1103   00343C                     
  1104                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1105   00343C  0E06               	movlw	6
  1106   00343E  EC06  F018         	call	_lcd_cmd
  1107                           
  1108                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1109   003442  0E1A               	movlw	26
  1110   003444                     u4637:
  1111   003444  2EE8               	decfsz	wreg,f,c
  1112   003446  D7FE               	bra	u4637
  1113   003448  D000               	nop2	
  1114   00344A  0012               	return		;funcret
  1115   00344C                     __end_of_lcd_init:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _lcd_BUTTON *****************
  1119 ;; Defined at:
  1120 ;;		line 119 in file "Program_main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 4
  1141 ;; This function calls:
  1142 ;;		_lcd_write
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text2
  1149   003890                     __ptext2:
  1150                           	callstack 0
  1151   003890                     _lcd_BUTTON:
  1152                           	callstack 26
  1153   003890                     
  1154                           ;Program_main.c: 121:     lcd_write(1,1,"  AULA MICRO  ");
  1155   003890  0E01               	movlw	1
  1156   003892  6E07               	movwf	lcd_write@col^0,c
  1157   003894  0E2F               	movlw	low STR_5
  1158   003896  6E08               	movwf	lcd_write@str^0,c
  1159   003898  0E06               	movlw	high STR_5
  1160   00389A  6E09               	movwf	(lcd_write@str+1)^0,c
  1161   00389C  0E01               	movlw	1
  1162   00389E  EC87  F019         	call	_lcd_write
  1163                           
  1164                           ;Program_main.c: 122:     lcd_write(2,1," AUTOMACAO IND ");
  1165   0038A2  0E01               	movlw	1
  1166   0038A4  6E07               	movwf	lcd_write@col^0,c
  1167   0038A6  0E01               	movlw	low STR_6
  1168   0038A8  6E08               	movwf	lcd_write@str^0,c
  1169   0038AA  0E06               	movlw	high STR_6
  1170   0038AC  6E09               	movwf	(lcd_write@str+1)^0,c
  1171   0038AE  0E02               	movlw	2
  1172   0038B0  EC87  F019         	call	_lcd_write
  1173   0038B4  0012               	return		;funcret
  1174   0038B6                     __end_of_lcd_BUTTON:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _lcd_AD *****************
  1178 ;; Defined at:
  1179 ;;		line 103 in file "Program_main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1193 ;;      Params:         0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 8
  1200 ;; This function calls:
  1201 ;;		_lcd_write
  1202 ;;		_sprintf
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text3
  1209   00344C                     __ptext3:
  1210                           	callstack 0
  1211   00344C                     _lcd_AD:
  1212                           	callstack 22
  1213   00344C                     
  1214                           ;Program_main.c: 105:     sprintf(VdigBuffer,
  1215   00344C  0EA2               	movlw	low _VdigBuffer
  1216   00344E  0100               	movlb	0	; () banked
  1217   003450  6FBA               	movwf	sprintf@s& (0+255),b
  1218   003452  0E00               	movlw	high _VdigBuffer
  1219   003454  6FBB               	movwf	(sprintf@s+1)& (0+255),b
  1220   003456  0E20               	movlw	low STR_1
  1221   003458  6FBC               	movwf	sprintf@fmt& (0+255),b
  1222   00345A  0E06               	movlw	high STR_1
  1223   00345C  6FBD               	movwf	(sprintf@fmt+1)& (0+255),b
  1224   00345E  C090  F0BE         	movff	_VdigADC_AN0,?_sprintf+4
  1225   003462  C091  F0BF         	movff	_VdigADC_AN0+1,?_sprintf+5
  1226   003466  ECDA  F01A         	call	_sprintf	;wreg free
  1227                           
  1228                           ;Program_main.c: 109:     sprintf(VoltageBuffer,
  1229   00346A  0E92               	movlw	low _VoltageBuffer
  1230   00346C  0100               	movlb	0	; () banked
  1231   00346E  6FBA               	movwf	sprintf@s& (0+255),b
  1232   003470  0E00               	movlw	high _VoltageBuffer
  1233   003472  6FBB               	movwf	(sprintf@s+1)& (0+255),b
  1234   003474  0E11               	movlw	low STR_2
  1235   003476  6FBC               	movwf	sprintf@fmt& (0+255),b
  1236   003478  0E06               	movlw	high STR_2
  1237   00347A  6FBD               	movwf	(sprintf@fmt+1)& (0+255),b
  1238   00347C  C088  F0BE         	movff	_Voltage_AN0,?_sprintf+4
  1239   003480  C089  F0BF         	movff	_Voltage_AN0+1,?_sprintf+5
  1240   003484  C08A  F0C0         	movff	_Voltage_AN0+2,?_sprintf+6
  1241   003488  C08B  F0C1         	movff	_Voltage_AN0+3,?_sprintf+7
  1242   00348C  ECDA  F01A         	call	_sprintf	;wreg free
  1243   003490                     
  1244                           ;Program_main.c: 113:     lcd_write(1,1,"A/D:   ");
  1245   003490  0E01               	movlw	1
  1246   003492  6E07               	movwf	lcd_write@col^0,c
  1247   003494  0E4A               	movlw	low STR_3
  1248   003496  6E08               	movwf	lcd_write@str^0,c
  1249   003498  0E06               	movlw	high STR_3
  1250   00349A  6E09               	movwf	(lcd_write@str+1)^0,c
  1251   00349C  0E01               	movlw	1
  1252   00349E  EC87  F019         	call	_lcd_write
  1253   0034A2                     
  1254                           ;Program_main.c: 114:     lcd_write(1,6,VdigBuffer);
  1255   0034A2  0E06               	movlw	6
  1256   0034A4  6E07               	movwf	lcd_write@col^0,c
  1257   0034A6  0EA2               	movlw	low _VdigBuffer
  1258   0034A8  6E08               	movwf	lcd_write@str^0,c
  1259   0034AA  0E00               	movlw	high _VdigBuffer
  1260   0034AC  6E09               	movwf	(lcd_write@str+1)^0,c
  1261   0034AE  0E01               	movlw	1
  1262   0034B0  EC87  F019         	call	_lcd_write
  1263   0034B4                     
  1264                           ;Program_main.c: 115:     lcd_write(2,1,"Voltage:   ");
  1265   0034B4  0E01               	movlw	1
  1266   0034B6  6E07               	movwf	lcd_write@col^0,c
  1267   0034B8  0E3E               	movlw	low STR_4
  1268   0034BA  6E08               	movwf	lcd_write@str^0,c
  1269   0034BC  0E06               	movlw	high STR_4
  1270   0034BE  6E09               	movwf	(lcd_write@str+1)^0,c
  1271   0034C0  0E02               	movlw	2
  1272   0034C2  EC87  F019         	call	_lcd_write
  1273   0034C6                     
  1274                           ;Program_main.c: 116:     lcd_write(2,10,VoltageBuffer);
  1275   0034C6  0E0A               	movlw	10
  1276   0034C8  6E07               	movwf	lcd_write@col^0,c
  1277   0034CA  0E92               	movlw	low _VoltageBuffer
  1278   0034CC  6E08               	movwf	lcd_write@str^0,c
  1279   0034CE  0E00               	movlw	high _VoltageBuffer
  1280   0034D0  6E09               	movwf	(lcd_write@str+1)^0,c
  1281   0034D2  0E02               	movlw	2
  1282   0034D4  EC87  F019         	call	_lcd_write
  1283   0034D8  0012               	return		;funcret
  1284   0034DA                     __end_of_lcd_AD:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _sprintf *****************
  1288 ;; Defined at:
  1289 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  s               2    8[BANK0 ] PTR unsigned char 
  1292 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  1293 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  1294 ;;		 -> STR_2(15), STR_1(15), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  f              11   18[BANK0 ] struct _IO_FILE
  1297 ;;  ap              2   16[BANK0 ] PTR void [1]
  1298 ;;		 -> ?_sprintf(2), 
  1299 ;;  ret             2    0        int 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  2    8[BANK0 ] int 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       8       0       0       0       0       0
  1310 ;;      Locals:         0      13       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0
  1312 ;;      Totals:         0      21       0       0       0       0       0
  1313 ;;Total ram usage:       21 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 7
  1316 ;; This function calls:
  1317 ;;		_vfprintf
  1318 ;; This function is called by:
  1319 ;;		_lcd_AD
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text4
  1324   0035B4                     __ptext4:
  1325                           	callstack 0
  1326   0035B4                     _sprintf:
  1327                           	callstack 22
  1328   0035B4  0EBE               	movlw	low (?_sprintf+4)
  1329   0035B6  0100               	movlb	0	; () banked
  1330   0035B8  6FC2               	movwf	sprintf@ap& (0+255),b
  1331   0035BA  0E00               	movlw	high (?_sprintf+4)
  1332   0035BC  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  1333   0035BE  C0BA  F0C4         	movff	sprintf@s,sprintf@f
  1334   0035C2  C0BB  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1335   0035C6                     
  1336                           ; BSR set to: 0
  1337   0035C6  0E00               	movlw	0
  1338   0035C8  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1339   0035CA  0E00               	movlw	0
  1340   0035CC  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1341   0035CE                     
  1342                           ; BSR set to: 0
  1343   0035CE  0E00               	movlw	0
  1344   0035D0  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  1345   0035D2  0E00               	movlw	0
  1346   0035D4  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  1347   0035D6                     
  1348                           ; BSR set to: 0
  1349   0035D6  0EC4               	movlw	low sprintf@f
  1350   0035D8  6FB2               	movwf	vfprintf@fp& (0+255),b
  1351   0035DA  0E00               	movlw	high sprintf@f
  1352   0035DC  6FB3               	movwf	(vfprintf@fp+1)& (0+255),b
  1353   0035DE  C0BC  F0B4         	movff	sprintf@fmt,vfprintf@fmt
  1354   0035E2  C0BD  F0B5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1355   0035E6  0EC2               	movlw	low sprintf@ap
  1356   0035E8  6FB6               	movwf	vfprintf@ap& (0+255),b
  1357   0035EA  0E00               	movlw	high sprintf@ap
  1358   0035EC  6FB7               	movwf	(vfprintf@ap+1)& (0+255),b
  1359   0035EE  EC03  F01B         	call	_vfprintf	;wreg free
  1360   0035F2  0100               	movlb	0	; () banked
  1361   0035F4  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1362   0035F6  25BA               	addwf	sprintf@s& (0+255),w,b
  1363   0035F8  6ED9               	movwf	fsr2l,c
  1364   0035FA  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  1365   0035FC  21BB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1366   0035FE  6EDA               	movwf	fsr2h,c
  1367   003600  0E00               	movlw	0
  1368   003602  6EDF               	movwf	indf2,c
  1369   003604                     
  1370                           ; BSR set to: 0
  1371   003604  0012               	return		;funcret
  1372   003606                     __end_of_sprintf:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _vfprintf *****************
  1376 ;; Defined at:
  1377 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1380 ;;		 -> sprintf@f(11), 
  1381 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1382 ;;		 -> STR_2(15), STR_1(15), 
  1383 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1384 ;;		 -> sprintf@ap(2), 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  1387 ;;		 -> STR_2(15), STR_1(15), 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    0[BANK0 ] int 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1397 ;;      Params:         0       6       0       0       0       0       0
  1398 ;;      Locals:         0       2       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0
  1400 ;;      Totals:         0       8       0       0       0       0       0
  1401 ;;Total ram usage:        8 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 6
  1404 ;; This function calls:
  1405 ;;		_vfpfcnvrt
  1406 ;; This function is called by:
  1407 ;;		_sprintf
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text5
  1412   003606                     __ptext5:
  1413                           	callstack 0
  1414   003606                     _vfprintf:
  1415                           	callstack 22
  1416   003606                     
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1418   003606  C0B4  F0B8         	movff	vfprintf@fmt,vfprintf@cfmt
  1419   00360A  C0B5  F0B9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1422   00360E  EF17  F01B         	goto	l3906
  1423   003612                     l3904:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1426   003612  C0B2  F069         	movff	vfprintf@fp,vfpfcnvrt@fp
  1427   003616  C0B3  F06A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1428   00361A  0EB8               	movlw	low vfprintf@cfmt
  1429   00361C  6E6B               	movwf	vfpfcnvrt@fmt^0,c
  1430   00361E  0E00               	movlw	high vfprintf@cfmt
  1431   003620  6E6C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1432   003622  C0B6  F06D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1433   003626  C0B7  F06E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1434   00362A  EC4C  F008         	call	_vfpfcnvrt	;wreg free
  1435   00362E                     l3906:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1438   00362E  C0B8  FFF6         	movff	vfprintf@cfmt,tblptrl
  1439   003632  C0B9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1440   003636                     	if	0	;tblptru may be non-zero
  1441   003636                     	endif
  1442   003636                     	if	0	;tblptru may be non-zero
  1443   003636                     	endif
  1444   003636  0008               	tblrd		*
  1445   003638  50F5               	movf	tablat,w,c
  1446   00363A  0900               	iorlw	0
  1447   00363C  A4D8               	btfss	status,2,c
  1448   00363E  EF23  F01B         	goto	u4381
  1449   003642  EF25  F01B         	goto	u4380
  1450   003646                     u4381:
  1451   003646  EF09  F01B         	goto	l3904
  1452   00364A                     u4380:
  1453   00364A                     
  1454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1455   00364A  0E00               	movlw	0
  1456   00364C  0100               	movlb	0	; () banked
  1457   00364E  6FB3               	movwf	(?_vfprintf+1)& (0+255),b
  1458   003650  0E00               	movlw	0
  1459   003652  6FB2               	movwf	?_vfprintf& (0+255),b
  1460   003654                     
  1461                           ; BSR set to: 0
  1462   003654  0012               	return		;funcret
  1463   003656                     __end_of_vfprintf:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _vfpfcnvrt *****************
  1467 ;; Defined at:
  1468 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  fp              2  104[COMRAM] PTR struct _IO_FILE
  1471 ;;		 -> sprintf@f(11), 
  1472 ;;  fmt             2  106[COMRAM] PTR PTR unsigned char 
  1473 ;;		 -> vfprintf@cfmt(2), 
  1474 ;;  ap              2  108[COMRAM] PTR PTR void 
  1475 ;;		 -> sprintf@ap(2), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  convarg         8  115[COMRAM] struct .
  1478 ;;  cp              2  124[COMRAM] PTR unsigned char 
  1479 ;;		 -> STR_2(15), STR_1(15), 
  1480 ;;  done            2  113[COMRAM] int 
  1481 ;;  i               2    0        int 
  1482 ;;  c               1  123[COMRAM] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         6       0       0       0       0       0       0
  1493 ;;      Locals:        13       0       0       0       0       0       0
  1494 ;;      Temps:          3       0       0       0       0       0       0
  1495 ;;      Totals:        22       0       0       0       0       0       0
  1496 ;;Total ram usage:       22 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 5
  1499 ;; This function calls:
  1500 ;;		_atoi
  1501 ;;		_dtoa
  1502 ;;		_efgtoa
  1503 ;;		_fputc
  1504 ;;		_isdigit
  1505 ;; This function is called by:
  1506 ;;		_vfprintf
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text6
  1511   001098                     __ptext6:
  1512                           	callstack 0
  1513   001098                     _vfpfcnvrt:
  1514                           	callstack 22
  1515   001098                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1517   001098  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518   00109C  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519   0010A0  CFDE FFF6          	movff	postinc2,tblptrl
  1520   0010A4  CFDD FFF7          	movff	postdec2,tblptrh
  1521   0010A8                     	if	0	;tblptru may be non-zero
  1522   0010A8                     	endif
  1523   0010A8                     	if	0	;tblptru may be non-zero
  1524   0010A8                     	endif
  1525   0010A8  0008               	tblrd		*
  1526   0010AA  50F5               	movf	tablat,w,c
  1527   0010AC  0A25               	xorlw	37
  1528   0010AE  A4D8               	btfss	status,2,c
  1529   0010B0  EF5C  F008         	goto	u4261
  1530   0010B4  EF5E  F008         	goto	u4260
  1531   0010B8                     u4261:
  1532   0010B8  EFD2  F00A         	goto	l3872
  1533   0010BC                     u4260:
  1534   0010BC                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1536   0010BC  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1537   0010C0  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1538   0010C4  2ADE               	incf	postinc2,f,c
  1539   0010C6  0E00               	movlw	0
  1540   0010C8  22DD               	addwfc	postdec2,f,c
  1541   0010CA                     
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1543   0010CA  0E00               	movlw	0
  1544   0010CC  0100               	movlb	0	; () banked
  1545   0010CE  6F8D               	movwf	(_width+1)& (0+255),b
  1546   0010D0  0E00               	movlw	0
  1547   0010D2  6F8C               	movwf	_width& (0+255),b
  1548   0010D4  C08C  F07F         	movff	_width,_flags
  1549   0010D8                     
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1552   0010D8  698E               	setf	_prec& (0+255),b
  1553   0010DA  698F               	setf	(_prec+1)& (0+255),b
  1554   0010DC                     
  1555                           ; BSR set to: 0
  1556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1557   0010DC  0E00               	movlw	0
  1558   0010DE  6E73               	movwf	(vfpfcnvrt@done+1)^0,c
  1559   0010E0  0E00               	movlw	0
  1560   0010E2  6E72               	movwf	vfpfcnvrt@done^0,c
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1563   0010E4  EF9E  F008         	goto	l3786
  1564   0010E8                     l3776:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1567   0010E8  827F               	bsf	_flags^0,1,c
  1568   0010EA                     
  1569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1570   0010EA  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1571   0010EE  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1572   0010F2  2ADE               	incf	postinc2,f,c
  1573   0010F4  0E00               	movlw	0
  1574   0010F6  22DD               	addwfc	postdec2,f,c
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1577   0010F8  EF9E  F008         	goto	l3786
  1578   0010FC                     l3780:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1581   0010FC  0E00               	movlw	0
  1582   0010FE  6E73               	movwf	(vfpfcnvrt@done+1)^0,c
  1583   001100  0E01               	movlw	1
  1584   001102  6E72               	movwf	vfpfcnvrt@done^0,c
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1587   001104  EF9E  F008         	goto	l3786
  1588   001108                     l3784:
  1589   001108  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1590   00110C  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1591   001110  CFDE FFF6          	movff	postinc2,tblptrl
  1592   001114  CFDD FFF7          	movff	postdec2,tblptrh
  1593   001118                     	if	0	;tblptru may be non-zero
  1594   001118                     	endif
  1595   001118                     	if	0	;tblptru may be non-zero
  1596   001118                     	endif
  1597   001118  0008               	tblrd		*
  1598   00111A  50F5               	movf	tablat,w,c
  1599   00111C  6E6F               	movwf	??_vfpfcnvrt^0,c
  1600   00111E  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  1601                           
  1602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 1, Range of values is 0 to 0
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte            4     3 (average)
  1608                           ;	Chosen strategy is simple_byte
  1609   001120  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  1610   001122  0A00               	xorlw	0	; case 0
  1611   001124  B4D8               	btfsc	status,2,c
  1612   001126  EF97  F008         	goto	l4168
  1613   00112A  EF7E  F008         	goto	l3780
  1614   00112E                     l4168:
  1615                           
  1616                           ; Switch size 1, requested type "simple"
  1617                           ; Number of cases is 1, Range of values is 48 to 48
  1618                           ; switch strategies available:
  1619                           ; Name         Instructions Cycles
  1620                           ; simple_byte            4     3 (average)
  1621                           ;	Chosen strategy is simple_byte
  1622   00112E  506F               	movf	??_vfpfcnvrt^0,w,c
  1623   001130  0A30               	xorlw	48	; case 48
  1624   001132  B4D8               	btfsc	status,2,c
  1625   001134  EF74  F008         	goto	l3776
  1626   001138  EF7E  F008         	goto	l3780
  1627   00113C                     l3786:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1630   00113C  5072               	movf	vfpfcnvrt@done^0,w,c
  1631   00113E  1073               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1632   001140  B4D8               	btfsc	status,2,c
  1633   001142  EFA5  F008         	goto	u4271
  1634   001146  EFA7  F008         	goto	u4270
  1635   00114A                     u4271:
  1636   00114A  EF84  F008         	goto	l3784
  1637   00114E                     u4270:
  1638   00114E                     
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1640   00114E  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1641   001152  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1642   001156  CFDE FFF6          	movff	postinc2,tblptrl
  1643   00115A  CFDD FFF7          	movff	postdec2,tblptrh
  1644   00115E                     	if	0	;tblptru may be non-zero
  1645   00115E                     	endif
  1646   00115E                     	if	0	;tblptru may be non-zero
  1647   00115E                     	endif
  1648   00115E  0008               	tblrd		*
  1649   001160  50F5               	movf	tablat,w,c
  1650   001162  0A2A               	xorlw	42
  1651   001164  A4D8               	btfss	status,2,c
  1652   001166  EFB7  F008         	goto	u4281
  1653   00116A  EFB9  F008         	goto	u4280
  1654   00116E                     u4281:
  1655   00116E  EFE3  F008         	goto	l3796
  1656   001172                     u4280:
  1657   001172                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1659   001172  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1660   001176  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1661   00117A  2ADE               	incf	postinc2,f,c
  1662   00117C  0E00               	movlw	0
  1663   00117E  22DD               	addwfc	postdec2,f,c
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1666   001180  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1667   001184  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1668   001188  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1669   00118C  0E02               	movlw	2
  1670   00118E  26DE               	addwf	postinc2,f,c
  1671   001190  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1672   001194  0E00               	movlw	0
  1673   001196  22DD               	addwfc	postdec2,f,c
  1674   001198  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1675   00119C  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1676   0011A0  CFDE F08C          	movff	postinc2,_width
  1677   0011A4  CFDD F08D          	movff	postdec2,_width+1
  1678   0011A8                     
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1680   0011A8  0100               	movlb	0	; () banked
  1681   0011AA  BF8D               	btfsc	(_width+1)& (0+255),7,b
  1682   0011AC  EFDC  F008         	goto	u4290
  1683   0011B0  EFDA  F008         	goto	u4291
  1684   0011B4                     u4291:
  1685   0011B4  EF16  F009         	goto	l3804
  1686   0011B8                     u4290:
  1687   0011B8                     
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1690   0011B8  807F               	bsf	_flags^0,0,c
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1693   0011BA  6D8C               	negf	_width& (0+255),b
  1694   0011BC  1F8D               	comf	(_width+1)& (0+255),f,b
  1695   0011BE  B0D8               	btfsc	status,0,c
  1696   0011C0  2B8D               	incf	(_width+1)& (0+255),f,b
  1697   0011C2  EF16  F009         	goto	l3804
  1698   0011C6                     l3796:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1701   0011C6  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702   0011CA  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703   0011CE  CFDE F007          	movff	postinc2,atoi@s
  1704   0011D2  CFDD F008          	movff	postdec2,atoi@s+1
  1705   0011D6  ECDD  F015         	call	_atoi	;wreg free
  1706   0011DA  C007  F08C         	movff	?_atoi,_width
  1707   0011DE  C008  F08D         	movff	?_atoi+1,_width+1
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1710   0011E2  EFFA  F008         	goto	l3802
  1711   0011E6                     l3798:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1714   0011E6  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1715   0011EA  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1716   0011EE  2ADE               	incf	postinc2,f,c
  1717   0011F0  0E00               	movlw	0
  1718   0011F2  22DD               	addwfc	postdec2,f,c
  1719   0011F4                     l3802:
  1720   0011F4  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721   0011F8  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722   0011FC  CFDE FFF6          	movff	postinc2,tblptrl
  1723   001200  CFDD FFF7          	movff	postdec2,tblptrh
  1724   001204                     	if	0	;tblptru may be non-zero
  1725   001204                     	endif
  1726   001204                     	if	0	;tblptru may be non-zero
  1727   001204                     	endif
  1728   001204  0008               	tblrd		*
  1729   001206  CFF5 F06F          	movff	tablat,??_vfpfcnvrt
  1730   00120A  0ED0               	movlw	208
  1731   00120C  246F               	addwf	??_vfpfcnvrt^0,w,c
  1732   00120E  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1733   001210  6A71               	clrf	(??_vfpfcnvrt+2)^0,c
  1734   001212  0EFF               	movlw	255
  1735   001214  2271               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1736   001216  5071               	movf	(??_vfpfcnvrt+2)^0,w,c
  1737   001218  E109               	bnz	u4300
  1738   00121A  0E0A               	movlw	10
  1739   00121C  5C70               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1740   00121E  A0D8               	btfss	status,0,c
  1741   001220  EF14  F009         	goto	u4301
  1742   001224  EF16  F009         	goto	u4300
  1743   001228                     u4301:
  1744   001228  EFF3  F008         	goto	l3798
  1745   00122C                     u4300:
  1746   00122C                     l3804:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1749   00122C  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750   001230  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751   001234  CFDE FFF6          	movff	postinc2,tblptrl
  1752   001238  CFDD FFF7          	movff	postdec2,tblptrh
  1753   00123C                     	if	0	;tblptru may be non-zero
  1754   00123C                     	endif
  1755   00123C                     	if	0	;tblptru may be non-zero
  1756   00123C                     	endif
  1757   00123C  0008               	tblrd		*
  1758   00123E  50F5               	movf	tablat,w,c
  1759   001240  0A2E               	xorlw	46
  1760   001242  A4D8               	btfss	status,2,c
  1761   001244  EF26  F009         	goto	u4311
  1762   001248  EF28  F009         	goto	u4310
  1763   00124C                     u4311:
  1764   00124C  EF96  F009         	goto	l3822
  1765   001250                     u4310:
  1766   001250                     
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1768   001250  0E00               	movlw	0
  1769   001252  0100               	movlb	0	; () banked
  1770   001254  6F8F               	movwf	(_prec+1)& (0+255),b
  1771   001256  0E00               	movlw	0
  1772   001258  6F8E               	movwf	_prec& (0+255),b
  1773   00125A                     
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1776   00125A  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777   00125E  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778   001262  2ADE               	incf	postinc2,f,c
  1779   001264  0E00               	movlw	0
  1780   001266  22DD               	addwfc	postdec2,f,c
  1781   001268                     
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1784   001268  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1785   00126C  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1786   001270  CFDE FFF6          	movff	postinc2,tblptrl
  1787   001274  CFDD FFF7          	movff	postdec2,tblptrh
  1788   001278                     	if	0	;tblptru may be non-zero
  1789   001278                     	endif
  1790   001278                     	if	0	;tblptru may be non-zero
  1791   001278                     	endif
  1792   001278  0008               	tblrd		*
  1793   00127A  50F5               	movf	tablat,w,c
  1794   00127C  0A2A               	xorlw	42
  1795   00127E  A4D8               	btfss	status,2,c
  1796   001280  EF44  F009         	goto	u4321
  1797   001284  EF46  F009         	goto	u4320
  1798   001288                     u4321:
  1799   001288  EF63  F009         	goto	l3814
  1800   00128C                     u4320:
  1801   00128C                     
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1804   00128C  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805   001290  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806   001294  2ADE               	incf	postinc2,f,c
  1807   001296  0E00               	movlw	0
  1808   001298  22DD               	addwfc	postdec2,f,c
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1811   00129A  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1812   00129E  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1813   0012A2  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1814   0012A6  0E02               	movlw	2
  1815   0012A8  26DE               	addwf	postinc2,f,c
  1816   0012AA  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1817   0012AE  0E00               	movlw	0
  1818   0012B0  22DD               	addwfc	postdec2,f,c
  1819   0012B2  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1820   0012B6  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1821   0012BA  CFDE F08E          	movff	postinc2,_prec
  1822   0012BE  CFDD F08F          	movff	postdec2,_prec+1
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1825   0012C2  EF96  F009         	goto	l3822
  1826   0012C6                     l3814:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1830   0012C6  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1831   0012CA  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1832   0012CE  CFDE F007          	movff	postinc2,atoi@s
  1833   0012D2  CFDD F008          	movff	postdec2,atoi@s+1
  1834   0012D6  ECDD  F015         	call	_atoi	;wreg free
  1835   0012DA  C007  F08E         	movff	?_atoi,_prec
  1836   0012DE  C008  F08F         	movff	?_atoi+1,_prec+1
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1839   0012E2  EF7A  F009         	goto	l3820
  1840   0012E6                     l3816:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1843   0012E6  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844   0012EA  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845   0012EE  2ADE               	incf	postinc2,f,c
  1846   0012F0  0E00               	movlw	0
  1847   0012F2  22DD               	addwfc	postdec2,f,c
  1848   0012F4                     l3820:
  1849   0012F4  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850   0012F8  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851   0012FC  CFDE FFF6          	movff	postinc2,tblptrl
  1852   001300  CFDD FFF7          	movff	postdec2,tblptrh
  1853   001304                     	if	0	;tblptru may be non-zero
  1854   001304                     	endif
  1855   001304                     	if	0	;tblptru may be non-zero
  1856   001304                     	endif
  1857   001304  0008               	tblrd		*
  1858   001306  CFF5 F06F          	movff	tablat,??_vfpfcnvrt
  1859   00130A  0ED0               	movlw	208
  1860   00130C  246F               	addwf	??_vfpfcnvrt^0,w,c
  1861   00130E  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1862   001310  6A71               	clrf	(??_vfpfcnvrt+2)^0,c
  1863   001312  0EFF               	movlw	255
  1864   001314  2271               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1865   001316  5071               	movf	(??_vfpfcnvrt+2)^0,w,c
  1866   001318  E109               	bnz	u4330
  1867   00131A  0E0A               	movlw	10
  1868   00131C  5C70               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1869   00131E  A0D8               	btfss	status,0,c
  1870   001320  EF94  F009         	goto	u4331
  1871   001324  EF96  F009         	goto	u4330
  1872   001328                     u4331:
  1873   001328  EF73  F009         	goto	l3816
  1874   00132C                     u4330:
  1875   00132C                     l3822:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1878   00132C  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1879   001330  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1880   001334  CFDE F07D          	movff	postinc2,vfpfcnvrt@cp
  1881   001338  CFDD F07E          	movff	postdec2,vfpfcnvrt@cp+1
  1882   00133C                     
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1884   00133C  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1885   001340  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1886   001344                     	if	0	;tblptru may be non-zero
  1887   001344                     	endif
  1888   001344                     	if	0	;tblptru may be non-zero
  1889   001344                     	endif
  1890   001344  0008               	tblrd		*
  1891   001346  50F5               	movf	tablat,w,c
  1892   001348  0A64               	xorlw	100
  1893   00134A  B4D8               	btfsc	status,2,c
  1894   00134C  EFAA  F009         	goto	u4341
  1895   001350  EFAC  F009         	goto	u4340
  1896   001354                     u4341:
  1897   001354  EFBA  F009         	goto	l3828
  1898   001358                     u4340:
  1899   001358  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1900   00135C  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1901   001360                     	if	0	;tblptru may be non-zero
  1902   001360                     	endif
  1903   001360                     	if	0	;tblptru may be non-zero
  1904   001360                     	endif
  1905   001360  0008               	tblrd		*
  1906   001362  50F5               	movf	tablat,w,c
  1907   001364  0A69               	xorlw	105
  1908   001366  A4D8               	btfss	status,2,c
  1909   001368  EFB8  F009         	goto	u4351
  1910   00136C  EFBA  F009         	goto	u4350
  1911   001370                     u4351:
  1912   001370  EFFD  F009         	goto	l3834
  1913   001374                     u4350:
  1914   001374                     l3828:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1917   001374  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1918   001378  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1919   00137C  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1920   001380  0E02               	movlw	2
  1921   001382  26DE               	addwf	postinc2,f,c
  1922   001384  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1923   001388  0E00               	movlw	0
  1924   00138A  22DD               	addwfc	postdec2,f,c
  1925   00138C  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1926   001390  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1927   001394  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  1928   001398  CFDD F075          	movff	postdec2,vfpfcnvrt@convarg+1
  1929   00139C  0E00               	movlw	0
  1930   00139E  BE75               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1931   0013A0  0EFF               	movlw	-1
  1932   0013A2  6E76               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1933   0013A4  6E77               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1934   0013A6  6E78               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1935   0013A8  6E79               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1936   0013AA  6E7A               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1937   0013AC  6E7B               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1940   0013AE  0E01               	movlw	1
  1941   0013B0  247D               	addwf	vfpfcnvrt@cp^0,w,c
  1942   0013B2  6E6F               	movwf	??_vfpfcnvrt^0,c
  1943   0013B4  0E00               	movlw	0
  1944   0013B6  207E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1945   0013B8  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1946   0013BA  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947   0013BE  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948   0013C2  C06F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1949   0013C6  C070  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1950   0013CA                     
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1952   0013CA  C069  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1953   0013CE  C06A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1954   0013D2  C074  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1955   0013D6  C075  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1956   0013DA  C076  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1957   0013DE  C077  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1958   0013E2  C078  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1959   0013E6  C079  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1960   0013EA  C07A  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1961   0013EE  C07B  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1962   0013F2  EC29  F011         	call	_dtoa	;wreg free
  1963   0013F6  EFE6  F00A         	goto	l942
  1964   0013FA                     l3834:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1967   0013FA  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968   0013FE  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969   001402  CFDE F07D          	movff	postinc2,vfpfcnvrt@cp
  1970   001406  CFDD F07E          	movff	postdec2,vfpfcnvrt@cp+1
  1971   00140A                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1973   00140A  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1974   00140E  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1975   001412                     	if	0	;tblptru may be non-zero
  1976   001412                     	endif
  1977   001412                     	if	0	;tblptru may be non-zero
  1978   001412                     	endif
  1979   001412  0008               	tblrd		*
  1980   001414  CFF5 F07C          	movff	tablat,vfpfcnvrt@c
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1983   001418  EF1A  F00A         	goto	l3846
  1984   00141C                     l3838:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1987   00141C  4A7D               	infsnz	vfpfcnvrt@cp^0,f,c
  1988   00141E  2A7E               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1991   001420  EF33  F00A         	goto	l3848
  1992   001424                     l3840:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1995   001424  0E6C               	movlw	108
  1996   001426  6E7C               	movwf	vfpfcnvrt@c^0,c
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1999   001428  EF33  F00A         	goto	l3848
  2000   00142C                     l3842:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2003   00142C  0E00               	movlw	0
  2004   00142E  6E7C               	movwf	vfpfcnvrt@c^0,c
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2007   001430  EF33  F00A         	goto	l3848
  2008   001434                     l3846:
  2009   001434  507C               	movf	vfpfcnvrt@c^0,w,c
  2010   001436  6E6F               	movwf	??_vfpfcnvrt^0,c
  2011   001438  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  2012                           
  2013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2014                           ; Switch size 1, requested type "simple"
  2015                           ; Number of cases is 1, Range of values is 0 to 0
  2016                           ; switch strategies available:
  2017                           ; Name         Instructions Cycles
  2018                           ; simple_byte            4     3 (average)
  2019                           ;	Chosen strategy is simple_byte
  2020   00143A  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  2021   00143C  0A00               	xorlw	0	; case 0
  2022   00143E  B4D8               	btfsc	status,2,c
  2023   001440  EF24  F00A         	goto	l4170
  2024   001444  EF16  F00A         	goto	l3842
  2025   001448                     l4170:
  2026                           
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 3, Range of values is 76 to 108
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte           10     6 (average)
  2032                           ;	Chosen strategy is simple_byte
  2033   001448  506F               	movf	??_vfpfcnvrt^0,w,c
  2034   00144A  0A4C               	xorlw	76	; case 76
  2035   00144C  B4D8               	btfsc	status,2,c
  2036   00144E  EF0E  F00A         	goto	l3838
  2037   001452  0A2A               	xorlw	42	; case 102
  2038   001454  B4D8               	btfsc	status,2,c
  2039   001456  EF12  F00A         	goto	l3840
  2040   00145A  0A0A               	xorlw	10	; case 108
  2041   00145C  B4D8               	btfsc	status,2,c
  2042   00145E  EF0E  F00A         	goto	l3838
  2043   001462  EF16  F00A         	goto	l3842
  2044   001466                     l3848:
  2045   001466  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2046   00146A  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2047   00146E                     	if	0	;tblptru may be non-zero
  2048   00146E                     	endif
  2049   00146E                     	if	0	;tblptru may be non-zero
  2050   00146E                     	endif
  2051   00146E  0008               	tblrd		*
  2052   001470  50F5               	movf	tablat,w,c
  2053   001472  0A66               	xorlw	102
  2054   001474  A4D8               	btfss	status,2,c
  2055   001476  EF3F  F00A         	goto	u4361
  2056   00147A  EF41  F00A         	goto	u4360
  2057   00147E                     u4361:
  2058   00147E  EFC9  F00A         	goto	l3868
  2059   001482                     u4360:
  2060   001482  EF77  F00A         	goto	l3856
  2061   001486                     l3850:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2064   001486  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2065   00148A  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2066   00148E  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  2067   001492  0E04               	movlw	4
  2068   001494  26DE               	addwf	postinc2,f,c
  2069   001496  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  2070   00149A  0E00               	movlw	0
  2071   00149C  22DD               	addwfc	postdec2,f,c
  2072   00149E  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2073   0014A2  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2074   0014A6  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  2075   0014AA  CFDE F075          	movff	postinc2,vfpfcnvrt@convarg+1
  2076   0014AE  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg+2
  2077   0014B2  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+3
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2080   0014B6  EF8C  F00A         	goto	l3858
  2081   0014BA                     l3852:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2084   0014BA  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2085   0014BE  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2086   0014C2  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  2087   0014C6  0E04               	movlw	4
  2088   0014C8  26DE               	addwf	postinc2,f,c
  2089   0014CA  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  2090   0014CE  0E00               	movlw	0
  2091   0014D0  22DD               	addwfc	postdec2,f,c
  2092   0014D2  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2093   0014D6  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2094   0014DA  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  2095   0014DE  CFDE F075          	movff	postinc2,vfpfcnvrt@convarg+1
  2096   0014E2  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg+2
  2097   0014E6  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+3
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2100   0014EA  EF8C  F00A         	goto	l3858
  2101   0014EE                     l3856:
  2102   0014EE  507C               	movf	vfpfcnvrt@c^0,w,c
  2103   0014F0  6E6F               	movwf	??_vfpfcnvrt^0,c
  2104   0014F2  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  2105                           
  2106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2107                           ; Switch size 1, requested type "simple"
  2108                           ; Number of cases is 1, Range of values is 0 to 0
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; simple_byte            4     3 (average)
  2112                           ;	Chosen strategy is simple_byte
  2113   0014F4  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  2114   0014F6  0A00               	xorlw	0	; case 0
  2115   0014F8  B4D8               	btfsc	status,2,c
  2116   0014FA  EF81  F00A         	goto	l4172
  2117   0014FE  EF8C  F00A         	goto	l3858
  2118   001502                     l4172:
  2119                           
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 2, Range of values is 76 to 108
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            7     4 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126   001502  506F               	movf	??_vfpfcnvrt^0,w,c
  2127   001504  0A4C               	xorlw	76	; case 76
  2128   001506  B4D8               	btfsc	status,2,c
  2129   001508  EF5D  F00A         	goto	l3852
  2130   00150C  0A20               	xorlw	32	; case 108
  2131   00150E  B4D8               	btfsc	status,2,c
  2132   001510  EF43  F00A         	goto	l3850
  2133   001514  EF8C  F00A         	goto	l3858
  2134   001518                     l3858:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2137   001518  0E01               	movlw	1
  2138   00151A  247D               	addwf	vfpfcnvrt@cp^0,w,c
  2139   00151C  6E6F               	movwf	??_vfpfcnvrt^0,c
  2140   00151E  0E00               	movlw	0
  2141   001520  207E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2142   001522  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  2143   001524  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2144   001528  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2145   00152C  C06F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2146   001530  C070  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2149   001534  EFB3  F00A         	goto	l3866
  2150   001538                     l3860:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2153   001538  C069  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2154   00153C  C06A  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2155   001540  C074  F036         	movff	vfpfcnvrt@convarg,efgtoa@f
  2156   001544  C075  F037         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2157   001548  C076  F038         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2158   00154C  C077  F039         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2159   001550  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2160   001554  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2161   001558                     	if	0	;tblptru may be non-zero
  2162   001558                     	endif
  2163   001558                     	if	0	;tblptru may be non-zero
  2164   001558                     	endif
  2165   001558  0008               	tblrd		*
  2166   00155A  CFF5 F03A          	movff	tablat,efgtoa@c
  2167   00155E  EC2E  F003         	call	_efgtoa	;wreg free
  2168   001562  EFE6  F00A         	goto	l942
  2169   001566                     l3866:
  2170   001566  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2171   00156A  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2172   00156E                     	if	0	;tblptru may be non-zero
  2173   00156E                     	endif
  2174   00156E                     	if	0	;tblptru may be non-zero
  2175   00156E                     	endif
  2176   00156E  0008               	tblrd		*
  2177   001570  50F5               	movf	tablat,w,c
  2178   001572  6E6F               	movwf	??_vfpfcnvrt^0,c
  2179   001574  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  2180                           
  2181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 1, Range of values is 0 to 0
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte            4     3 (average)
  2187                           ;	Chosen strategy is simple_byte
  2188   001576  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  2189   001578  0A00               	xorlw	0	; case 0
  2190   00157A  B4D8               	btfsc	status,2,c
  2191   00157C  EFC2  F00A         	goto	l4174
  2192   001580  EFC9  F00A         	goto	l3868
  2193   001584                     l4174:
  2194                           
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 1, Range of values is 102 to 102
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte            4     3 (average)
  2200                           ;	Chosen strategy is simple_byte
  2201   001584  506F               	movf	??_vfpfcnvrt^0,w,c
  2202   001586  0A66               	xorlw	102	; case 102
  2203   001588  B4D8               	btfsc	status,2,c
  2204   00158A  EF9C  F00A         	goto	l3860
  2205   00158E  EFC9  F00A         	goto	l3868
  2206   001592                     l3868:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2209   001592  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210   001596  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211   00159A  2ADE               	incf	postinc2,f,c
  2212   00159C  0E00               	movlw	0
  2213   00159E  22DD               	addwfc	postdec2,f,c
  2214   0015A0  EFE6  F00A         	goto	l942
  2215   0015A4                     l3872:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2218   0015A4  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219   0015A8  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220   0015AC  CFDE FFF6          	movff	postinc2,tblptrl
  2221   0015B0  CFDD FFF7          	movff	postdec2,tblptrh
  2222   0015B4                     	if	0	;tblptru may be non-zero
  2223   0015B4                     	endif
  2224   0015B4                     	if	0	;tblptru may be non-zero
  2225   0015B4                     	endif
  2226   0015B4  0008               	tblrd		*
  2227   0015B6  50F5               	movf	tablat,w,c
  2228   0015B8  6E01               	movwf	fputc@c^0,c
  2229   0015BA  6A02               	clrf	(fputc@c+1)^0,c
  2230   0015BC  C069  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2231   0015C0  C06A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2232   0015C4  EC78  F018         	call	_fputc	;wreg free
  2233   0015C8  EFC9  F00A         	goto	l3868
  2234   0015CC                     l942:
  2235   0015CC  0012               	return		;funcret
  2236   0015CE                     __end_of_vfpfcnvrt:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _efgtoa *****************
  2240 ;; Defined at:
  2241 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2244 ;;		 -> sprintf@f(11), 
  2245 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2246 ;;  c               1   57[COMRAM] unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  u               4  100[COMRAM] struct flui
  2249 ;;  g               4   94[COMRAM] struct flui
  2250 ;;  l               4   87[COMRAM] struct flui
  2251 ;;  h               4   83[COMRAM] struct flui
  2252 ;;  ou              4   79[COMRAM] struct flui
  2253 ;;  n               2   98[COMRAM] int 
  2254 ;;  i               2   91[COMRAM] int 
  2255 ;;  w               2   77[COMRAM] int 
  2256 ;;  e               2   75[COMRAM] int 
  2257 ;;  m               2   73[COMRAM] int 
  2258 ;;  d               2   71[COMRAM] int 
  2259 ;;  t               2   64[COMRAM] int 
  2260 ;;  p               2   62[COMRAM] int 
  2261 ;;  ne              2   60[COMRAM] int 
  2262 ;;  sign            1   93[COMRAM] unsigned char 
  2263 ;;  nmode           1   70[COMRAM] unsigned char 
  2264 ;;  mode            1   69[COMRAM] unsigned char 
  2265 ;;  pp              1   68[COMRAM] unsigned char 
  2266 ;;  esign           1    0        unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2276 ;;      Params:         7       0       0       0       0       0       0
  2277 ;;      Locals:        44       0       0       0       0       0       0
  2278 ;;      Temps:          2       0       0       0       0       0       0
  2279 ;;      Totals:        53       0       0       0       0       0       0
  2280 ;;Total ram usage:       53 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 4
  2283 ;; This function calls:
  2284 ;;		___fladd
  2285 ;;		___fldiv
  2286 ;;		___fleq
  2287 ;;		___flge
  2288 ;;		___flmul
  2289 ;;		___flneg
  2290 ;;		___flsub
  2291 ;;		___fltol
  2292 ;;		___fpclassifyf
  2293 ;;		_floorf
  2294 ;;		_labs
  2295 ;;		_memcpy
  2296 ;;		_pad
  2297 ;;		_strcpy
  2298 ;; This function is called by:
  2299 ;;		_vfpfcnvrt
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text7
  2304   00065C                     __ptext7:
  2305                           	callstack 0
  2306   00065C                     _efgtoa:
  2307                           	callstack 22
  2308   00065C                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2310   00065C  0E00               	movlw	0
  2311   00065E  6E5E               	movwf	efgtoa@sign^0,c
  2312   000660                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2314   000660  C036  F05F         	movff	efgtoa@f,efgtoa@g
  2315   000664  C037  F060         	movff	efgtoa@f+1,efgtoa@g+1
  2316   000668  C038  F061         	movff	efgtoa@f+2,efgtoa@g+2
  2317   00066C  C039  F062         	movff	efgtoa@f+3,efgtoa@g+3
  2318   000670                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2320   000670  BE62               	btfsc	(efgtoa@g+3)^0,7,c
  2321   000672  EF3F  F003         	goto	u3870
  2322   000676  EF3D  F003         	goto	u3871
  2323   00067A                     u3871:
  2324   00067A  EF53  F003         	goto	l3490
  2325   00067E                     u3870:
  2326   00067E                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2328   00067E  0E01               	movlw	1
  2329   000680  6E5E               	movwf	efgtoa@sign^0,c
  2330   000682                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2332   000682  C05F  F001         	movff	efgtoa@g,___flneg@f1
  2333   000686  C060  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2334   00068A  C061  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2335   00068E  C062  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2336   000692  ECFB  F01B         	call	___flneg	;wreg free
  2337   000696  C001  F05F         	movff	?___flneg,efgtoa@g
  2338   00069A  C002  F060         	movff	?___flneg+1,efgtoa@g+1
  2339   00069E  C003  F061         	movff	?___flneg+2,efgtoa@g+2
  2340   0006A2  C004  F062         	movff	?___flneg+3,efgtoa@g+3
  2341   0006A6                     l3490:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2344   0006A6  0E00               	movlw	0
  2345   0006A8  6E64               	movwf	(efgtoa@n+1)^0,c
  2346   0006AA  0E00               	movlw	0
  2347   0006AC  6E63               	movwf	efgtoa@n^0,c
  2348   0006AE                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2350   0006AE  C08C  F04E         	movff	_width,efgtoa@w
  2351   0006B2  C08D  F04F         	movff	_width+1,efgtoa@w+1
  2352   0006B6                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2354   0006B6  505E               	movf	efgtoa@sign^0,w,c
  2355   0006B8  B4D8               	btfsc	status,2,c
  2356   0006BA  EF61  F003         	goto	u3881
  2357   0006BE  EF63  F003         	goto	u3880
  2358   0006C2                     u3881:
  2359   0006C2  EF77  F003         	goto	l3504
  2360   0006C6                     u3880:
  2361   0006C6                     
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2363   0006C6  505E               	movf	efgtoa@sign^0,w,c
  2364   0006C8  A4D8               	btfss	status,2,c
  2365   0006CA  EF69  F003         	goto	u3891
  2366   0006CE  EF6B  F003         	goto	u3890
  2367   0006D2                     u3891:
  2368   0006D2  EF71  F003         	goto	l3500
  2369   0006D6                     u3890:
  2370   0006D6  0E00               	movlw	0
  2371   0006D8  6E44               	movwf	(_efgtoa$1049+1)^0,c
  2372   0006DA  0E2B               	movlw	43
  2373   0006DC  6E43               	movwf	_efgtoa$1049^0,c
  2374   0006DE  EF75  F003         	goto	l3502
  2375   0006E2                     l3500:
  2376   0006E2  0E00               	movlw	0
  2377   0006E4  6E44               	movwf	(_efgtoa$1049+1)^0,c
  2378   0006E6  0E2D               	movlw	45
  2379   0006E8  6E43               	movwf	_efgtoa$1049^0,c
  2380   0006EA                     l3502:
  2381   0006EA  C043  F05E         	movff	_efgtoa$1049,efgtoa@sign
  2382   0006EE                     l3504:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2385   0006EE  C05F  F001         	movff	efgtoa@g,___fpclassifyf@x
  2386   0006F2  C060  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2387   0006F6  C061  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2388   0006FA  C062  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2389   0006FE  EC87  F017         	call	___fpclassifyf	;wreg free
  2390   000702  0401               	decf	?___fpclassifyf^0,w,c
  2391   000704  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2392   000706  A4D8               	btfss	status,2,c
  2393   000708  EF88  F003         	goto	u3901
  2394   00070C  EF8A  F003         	goto	u3900
  2395   000710                     u3901:
  2396   000710  EFBB  F003         	goto	l3522
  2397   000714                     u3900:
  2398   000714                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2400   000714  505E               	movf	efgtoa@sign^0,w,c
  2401   000716  B4D8               	btfsc	status,2,c
  2402   000718  EF90  F003         	goto	u3911
  2403   00071C  EF92  F003         	goto	u3910
  2404   000720                     u3911:
  2405   000720  EF9B  F003         	goto	l3514
  2406   000724                     u3910:
  2407   000724                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2409   000724  C05E  F100         	movff	efgtoa@sign,_dbuf
  2410   000728                     
  2411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2412   000728  064E               	decf	efgtoa@w^0,f,c
  2413   00072A  A0D8               	btfss	status,0,c
  2414   00072C  064F               	decf	(efgtoa@w+1)^0,f,c
  2415   00072E                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2417   00072E  0E00               	movlw	0
  2418   000730  6E64               	movwf	(efgtoa@n+1)^0,c
  2419   000732  0E01               	movlw	1
  2420   000734  6E63               	movwf	efgtoa@n^0,c
  2421   000736                     l3514:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2424   000736  0E00               	movlw	low _dbuf
  2425   000738  2463               	addwf	efgtoa@n^0,w,c
  2426   00073A  6E01               	movwf	strcpy@dest^0,c
  2427   00073C  0E01               	movlw	high _dbuf
  2428   00073E  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2429   000740  6E02               	movwf	(strcpy@dest+1)^0,c
  2430   000742  0E52               	movlw	low STR_7
  2431   000744  6E03               	movwf	strcpy@src^0,c
  2432   000746  0E06               	movlw	high STR_7
  2433   000748  6E04               	movwf	(strcpy@src+1)^0,c
  2434   00074A  ECBB  F01B         	call	_strcpy	;wreg free
  2435   00074E                     l3516:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2438   00074E  0EFD               	movlw	253
  2439   000750  264E               	addwf	efgtoa@w^0,f,c
  2440   000752  0EFF               	movlw	255
  2441   000754  224F               	addwfc	(efgtoa@w+1)^0,f,c
  2442   000756                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2444   000756  C034  F011         	movff	efgtoa@fp,pad@fp
  2445   00075A  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2446   00075E  0E00               	movlw	low _dbuf
  2447   000760  6E13               	movwf	pad@buf^0,c
  2448   000762  0E01               	movlw	high _dbuf
  2449   000764  6E14               	movwf	(pad@buf+1)^0,c
  2450   000766  C04E  F015         	movff	efgtoa@w,pad@p
  2451   00076A  C04F  F016         	movff	efgtoa@w+1,pad@p+1
  2452   00076E  EC32  F019         	call	_pad	;wreg free
  2453   000772  EF4B  F008         	goto	l865
  2454   000776                     l3522:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2457   000776  C05F  F001         	movff	efgtoa@g,___fpclassifyf@x
  2458   00077A  C060  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2459   00077E  C061  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2460   000782  C062  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2461   000786  EC87  F017         	call	___fpclassifyf	;wreg free
  2462   00078A  5001               	movf	?___fpclassifyf^0,w,c
  2463   00078C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2464   00078E  A4D8               	btfss	status,2,c
  2465   000790  EFCC  F003         	goto	u3921
  2466   000794  EFCE  F003         	goto	u3920
  2467   000798                     u3921:
  2468   000798  EFED  F003         	goto	l3540
  2469   00079C                     u3920:
  2470   00079C                     
  2471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2472   00079C  505E               	movf	efgtoa@sign^0,w,c
  2473   00079E  B4D8               	btfsc	status,2,c
  2474   0007A0  EFD4  F003         	goto	u3931
  2475   0007A4  EFD6  F003         	goto	u3930
  2476   0007A8                     u3931:
  2477   0007A8  EFDF  F003         	goto	l3532
  2478   0007AC                     u3930:
  2479   0007AC                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2481   0007AC  C05E  F100         	movff	efgtoa@sign,_dbuf
  2482   0007B0                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2484   0007B0  064E               	decf	efgtoa@w^0,f,c
  2485   0007B2  A0D8               	btfss	status,0,c
  2486   0007B4  064F               	decf	(efgtoa@w+1)^0,f,c
  2487   0007B6                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2489   0007B6  0E00               	movlw	0
  2490   0007B8  6E64               	movwf	(efgtoa@n+1)^0,c
  2491   0007BA  0E01               	movlw	1
  2492   0007BC  6E63               	movwf	efgtoa@n^0,c
  2493   0007BE                     l3532:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2496   0007BE  0E00               	movlw	low _dbuf
  2497   0007C0  2463               	addwf	efgtoa@n^0,w,c
  2498   0007C2  6E01               	movwf	strcpy@dest^0,c
  2499   0007C4  0E01               	movlw	high _dbuf
  2500   0007C6  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2501   0007C8  6E02               	movwf	(strcpy@dest+1)^0,c
  2502   0007CA  0E56               	movlw	low STR_10
  2503   0007CC  6E03               	movwf	strcpy@src^0,c
  2504   0007CE  0E06               	movlw	high STR_10
  2505   0007D0  6E04               	movwf	(strcpy@src+1)^0,c
  2506   0007D2  ECBB  F01B         	call	_strcpy	;wreg free
  2507   0007D6  EFA7  F003         	goto	l3516
  2508   0007DA                     l3540:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2511   0007DA  0E00               	movlw	0
  2512   0007DC  6E65               	movwf	efgtoa@u^0,c
  2513   0007DE  0E00               	movlw	0
  2514   0007E0  6E66               	movwf	(efgtoa@u+1)^0,c
  2515   0007E2  0E80               	movlw	128
  2516   0007E4  6E67               	movwf	(efgtoa@u+2)^0,c
  2517   0007E6  0E3F               	movlw	63
  2518   0007E8  6E68               	movwf	(efgtoa@u+3)^0,c
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2521   0007EA  0E00               	movlw	0
  2522   0007EC  6E4D               	movwf	(efgtoa@e+1)^0,c
  2523   0007EE  0E00               	movlw	0
  2524   0007F0  6E4C               	movwf	efgtoa@e^0,c
  2525   0007F2                     
  2526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2527   0007F2  C05F  F001         	movff	efgtoa@g,___fleq@ff1
  2528   0007F6  C060  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2529   0007FA  C061  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2530   0007FE  C062  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2531   000802  0E00               	movlw	0
  2532   000804  6E05               	movwf	___fleq@ff2^0,c
  2533   000806  0E00               	movlw	0
  2534   000808  6E06               	movwf	(___fleq@ff2+1)^0,c
  2535   00080A  0E00               	movlw	0
  2536   00080C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2537   00080E  0E00               	movlw	0
  2538   000810  6E08               	movwf	(___fleq@ff2+3)^0,c
  2539   000812  ECDD  F018         	call	___fleq	;wreg free
  2540   000816  B0D8               	btfsc	status,0,c
  2541   000818  EF10  F004         	goto	u3941
  2542   00081C  EF12  F004         	goto	u3940
  2543   000820                     u3941:
  2544   000820  EFED  F004         	goto	l868
  2545   000824                     u3940:
  2546   000824  EF1E  F004         	goto	l3548
  2547   000828                     l870:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2550   000828  C050  F065         	movff	efgtoa@ou,efgtoa@u
  2551   00082C  C051  F066         	movff	efgtoa@ou+1,efgtoa@u+1
  2552   000830  C052  F067         	movff	efgtoa@ou+2,efgtoa@u+2
  2553   000834  C053  F068         	movff	efgtoa@ou+3,efgtoa@u+3
  2554   000838                     
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2556   000838  4A4C               	infsnz	efgtoa@e^0,f,c
  2557   00083A  2A4D               	incf	(efgtoa@e+1)^0,f,c
  2558   00083C                     l3548:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2561   00083C  C065  F00F         	movff	efgtoa@u,___flmul@b
  2562   000840  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2563   000844  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2564   000848  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2565   00084C  0E00               	movlw	0
  2566   00084E  6E13               	movwf	___flmul@a^0,c
  2567   000850  0E00               	movlw	0
  2568   000852  6E14               	movwf	(___flmul@a+1)^0,c
  2569   000854  0E20               	movlw	32
  2570   000856  6E15               	movwf	(___flmul@a+2)^0,c
  2571   000858  0E41               	movlw	65
  2572   00085A  6E16               	movwf	(___flmul@a+3)^0,c
  2573   00085C  EC47  F00D         	call	___flmul	;wreg free
  2574   000860  C00F  F050         	movff	?___flmul,efgtoa@ou
  2575   000864  C010  F051         	movff	?___flmul+1,efgtoa@ou+1
  2576   000868  C011  F052         	movff	?___flmul+2,efgtoa@ou+2
  2577   00086C  C012  F053         	movff	?___flmul+3,efgtoa@ou+3
  2578   000870  5050               	movf	efgtoa@ou^0,w,c
  2579   000872  5C5F               	subwf	efgtoa@g^0,w,c
  2580   000874  6E01               	movwf	labs@a^0,c
  2581   000876  5051               	movf	(efgtoa@ou+1)^0,w,c
  2582   000878  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2583   00087A  6E02               	movwf	(labs@a+1)^0,c
  2584   00087C  5052               	movf	(efgtoa@ou+2)^0,w,c
  2585   00087E  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2586   000880  6E03               	movwf	(labs@a+2)^0,c
  2587   000882  5053               	movf	(efgtoa@ou+3)^0,w,c
  2588   000884  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2589   000886  6E04               	movwf	(labs@a+3)^0,c
  2590   000888  ECA7  F01A         	call	_labs	;wreg free
  2591   00088C  BE04               	btfsc	(?_labs+3)^0,7,c
  2592   00088E  EF54  F004         	goto	u3951
  2593   000892  5004               	movf	(?_labs+3)^0,w,c
  2594   000894  1003               	iorwf	(?_labs+2)^0,w,c
  2595   000896  1002               	iorwf	(?_labs+1)^0,w,c
  2596   000898  E109               	bnz	u3950
  2597   00089A  0E02               	movlw	2
  2598   00089C  5C01               	subwf	?_labs^0,w,c
  2599   00089E  A0D8               	btfss	status,0,c
  2600   0008A0  EF54  F004         	goto	u3951
  2601   0008A4  EF56  F004         	goto	u3950
  2602   0008A8                     u3951:
  2603   0008A8  EF14  F004         	goto	l870
  2604   0008AC                     u3950:
  2605   0008AC  C050  F028         	movff	efgtoa@ou,___flge@ff1
  2606   0008B0  C051  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2607   0008B4  C052  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2608   0008B8  C053  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2609   0008BC  C05F  F02C         	movff	efgtoa@g,___flge@ff2
  2610   0008C0  C060  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2611   0008C4  C061  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2612   0008C8  C062  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2613   0008CC  EC05  F017         	call	___flge	;wreg free
  2614   0008D0  A0D8               	btfss	status,0,c
  2615   0008D2  EF6D  F004         	goto	u3961
  2616   0008D6  EF6F  F004         	goto	u3960
  2617   0008DA                     u3961:
  2618   0008DA  EF14  F004         	goto	l870
  2619   0008DE                     u3960:
  2620   0008DE                     
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2622   0008DE  5065               	movf	efgtoa@u^0,w,c
  2623   0008E0  5C5F               	subwf	efgtoa@g^0,w,c
  2624   0008E2  6E01               	movwf	labs@a^0,c
  2625   0008E4  5066               	movf	(efgtoa@u+1)^0,w,c
  2626   0008E6  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2627   0008E8  6E02               	movwf	(labs@a+1)^0,c
  2628   0008EA  5067               	movf	(efgtoa@u+2)^0,w,c
  2629   0008EC  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2630   0008EE  6E03               	movwf	(labs@a+2)^0,c
  2631   0008F0  5068               	movf	(efgtoa@u+3)^0,w,c
  2632   0008F2  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2633   0008F4  6E04               	movwf	(labs@a+3)^0,c
  2634   0008F6  ECA7  F01A         	call	_labs	;wreg free
  2635   0008FA  BE04               	btfsc	(?_labs+3)^0,7,c
  2636   0008FC  EF8D  F004         	goto	u3970
  2637   000900  5004               	movf	(?_labs+3)^0,w,c
  2638   000902  1003               	iorwf	(?_labs+2)^0,w,c
  2639   000904  1002               	iorwf	(?_labs+1)^0,w,c
  2640   000906  E107               	bnz	u3971
  2641   000908  0E02               	movlw	2
  2642   00090A  5C01               	subwf	?_labs^0,w,c
  2643   00090C  B0D8               	btfsc	status,0,c
  2644   00090E  EF8B  F004         	goto	u3971
  2645   000912  EF8D  F004         	goto	u3970
  2646   000916                     u3971:
  2647   000916  EFD4  F004         	goto	l3566
  2648   00091A                     u3970:
  2649   00091A                     l3556:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2652   00091A  C065  F05F         	movff	efgtoa@u,efgtoa@g
  2653   00091E  C066  F060         	movff	efgtoa@u+1,efgtoa@g+1
  2654   000922  C067  F061         	movff	efgtoa@u+2,efgtoa@g+2
  2655   000926  C068  F062         	movff	efgtoa@u+3,efgtoa@g+3
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2658   00092A  EFED  F004         	goto	l868
  2659   00092E                     l3558:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2662   00092E  C065  F001         	movff	efgtoa@u,___fldiv@b
  2663   000932  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2664   000936  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2665   00093A  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2666   00093E  0E00               	movlw	0
  2667   000940  6E05               	movwf	___fldiv@a^0,c
  2668   000942  0E00               	movlw	0
  2669   000944  6E06               	movwf	(___fldiv@a+1)^0,c
  2670   000946  0E20               	movlw	32
  2671   000948  6E07               	movwf	(___fldiv@a+2)^0,c
  2672   00094A  0E41               	movlw	65
  2673   00094C  6E08               	movwf	(___fldiv@a+3)^0,c
  2674   00094E  EC5C  F00F         	call	___fldiv	;wreg free
  2675   000952  C001  F065         	movff	?___fldiv,efgtoa@u
  2676   000956  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  2677   00095A  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  2678   00095E  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  2679   000962                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2681   000962  064C               	decf	efgtoa@e^0,f,c
  2682   000964  A0D8               	btfss	status,0,c
  2683   000966  064D               	decf	(efgtoa@e+1)^0,f,c
  2684   000968                     
  2685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2686   000968  5065               	movf	efgtoa@u^0,w,c
  2687   00096A  5C5F               	subwf	efgtoa@g^0,w,c
  2688   00096C  6E01               	movwf	labs@a^0,c
  2689   00096E  5066               	movf	(efgtoa@u+1)^0,w,c
  2690   000970  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2691   000972  6E02               	movwf	(labs@a+1)^0,c
  2692   000974  5067               	movf	(efgtoa@u+2)^0,w,c
  2693   000976  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2694   000978  6E03               	movwf	(labs@a+2)^0,c
  2695   00097A  5068               	movf	(efgtoa@u+3)^0,w,c
  2696   00097C  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2697   00097E  6E04               	movwf	(labs@a+3)^0,c
  2698   000980  ECA7  F01A         	call	_labs	;wreg free
  2699   000984  BE04               	btfsc	(?_labs+3)^0,7,c
  2700   000986  EFD2  F004         	goto	u3980
  2701   00098A  5004               	movf	(?_labs+3)^0,w,c
  2702   00098C  1003               	iorwf	(?_labs+2)^0,w,c
  2703   00098E  1002               	iorwf	(?_labs+1)^0,w,c
  2704   000990  E107               	bnz	u3981
  2705   000992  0E02               	movlw	2
  2706   000994  5C01               	subwf	?_labs^0,w,c
  2707   000996  B0D8               	btfsc	status,0,c
  2708   000998  EFD0  F004         	goto	u3981
  2709   00099C  EFD2  F004         	goto	u3980
  2710   0009A0                     u3981:
  2711   0009A0  EFD4  F004         	goto	l3566
  2712   0009A4                     u3980:
  2713   0009A4  EF8D  F004         	goto	l3556
  2714   0009A8                     l3566:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2717   0009A8  C05F  F028         	movff	efgtoa@g,___flge@ff1
  2718   0009AC  C060  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2719   0009B0  C061  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2720   0009B4  C062  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2721   0009B8  C065  F02C         	movff	efgtoa@u,___flge@ff2
  2722   0009BC  C066  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2723   0009C0  C067  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2724   0009C4  C068  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2725   0009C8  EC05  F017         	call	___flge	;wreg free
  2726   0009CC  A0D8               	btfss	status,0,c
  2727   0009CE  EFEB  F004         	goto	u3991
  2728   0009D2  EFED  F004         	goto	u3990
  2729   0009D6                     u3991:
  2730   0009D6  EF97  F004         	goto	l3558
  2731   0009DA                     u3990:
  2732   0009DA                     l868:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2735   0009DA  C03A  F046         	movff	efgtoa@c,efgtoa@mode
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2738   0009DE  C046  F047         	movff	efgtoa@mode,efgtoa@nmode
  2739   0009E2                     
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2741   0009E2  0100               	movlb	0	; () banked
  2742   0009E4  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  2743   0009E6  EFF7  F004         	goto	u4001
  2744   0009EA  EFF9  F004         	goto	u4000
  2745   0009EE                     u4001:
  2746   0009EE  EFFF  F004         	goto	l3572
  2747   0009F2                     u4000:
  2748   0009F2                     
  2749                           ; BSR set to: 0
  2750   0009F2  C08E  F03F         	movff	_prec,efgtoa@p
  2751   0009F6  C08F  F040         	movff	_prec+1,efgtoa@p+1
  2752   0009FA  EF03  F005         	goto	l3574
  2753   0009FE                     l3572:
  2754                           
  2755                           ; BSR set to: 0
  2756   0009FE  0E00               	movlw	0
  2757   000A00  6E40               	movwf	(efgtoa@p+1)^0,c
  2758   000A02  0E06               	movlw	6
  2759   000A04  6E3F               	movwf	efgtoa@p^0,c
  2760   000A06                     l3574:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2764   000A06  C03F  F04A         	movff	efgtoa@p,efgtoa@m
  2765   000A0A  C040  F04B         	movff	efgtoa@p+1,efgtoa@m+1
  2766   000A0E                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2769   000A0E  4A4A               	infsnz	efgtoa@m^0,f,c
  2770   000A10  2A4B               	incf	(efgtoa@m+1)^0,f,c
  2771   000A12                     
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2774   000A12  0E66               	movlw	102
  2775   000A14  1847               	xorwf	efgtoa@nmode^0,w,c
  2776   000A16  A4D8               	btfss	status,2,c
  2777   000A18  EF10  F005         	goto	u4011
  2778   000A1C  EF12  F005         	goto	u4010
  2779   000A20                     u4011:
  2780   000A20  EF32  F005         	goto	l3588
  2781   000A24                     u4010:
  2782   000A24                     
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2785   000A24  BE4D               	btfsc	(efgtoa@e+1)^0,7,c
  2786   000A26  EF19  F005         	goto	u4020
  2787   000A2A  EF17  F005         	goto	u4021
  2788   000A2E                     u4021:
  2789   000A2E  EF25  F005         	goto	l3584
  2790   000A32                     u4020:
  2791   000A32                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2794   000A32  0E00               	movlw	0
  2795   000A34  6E65               	movwf	efgtoa@u^0,c
  2796   000A36  0E00               	movlw	0
  2797   000A38  6E66               	movwf	(efgtoa@u+1)^0,c
  2798   000A3A  0E80               	movlw	128
  2799   000A3C  6E67               	movwf	(efgtoa@u+2)^0,c
  2800   000A3E  0E3F               	movlw	63
  2801   000A40  6E68               	movwf	(efgtoa@u+3)^0,c
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2804   000A42  0E00               	movlw	0
  2805   000A44  6E4D               	movwf	(efgtoa@e+1)^0,c
  2806   000A46  0E00               	movlw	0
  2807   000A48  6E4C               	movwf	efgtoa@e^0,c
  2808   000A4A                     l3584:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2812   000A4A  0E67               	movlw	103
  2813   000A4C  1846               	xorwf	efgtoa@mode^0,w,c
  2814   000A4E  B4D8               	btfsc	status,2,c
  2815   000A50  EF2C  F005         	goto	u4031
  2816   000A54  EF2E  F005         	goto	u4030
  2817   000A58                     u4031:
  2818   000A58  EF32  F005         	goto	l3588
  2819   000A5C                     u4030:
  2820   000A5C                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2823   000A5C  504C               	movf	efgtoa@e^0,w,c
  2824   000A5E  264A               	addwf	efgtoa@m^0,f,c
  2825   000A60  504D               	movf	(efgtoa@e+1)^0,w,c
  2826   000A62  224B               	addwfc	(efgtoa@m+1)^0,f,c
  2827   000A64                     l3588:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2831   000A64  0E00               	movlw	0
  2832   000A66  6E5D               	movwf	(efgtoa@i+1)^0,c
  2833   000A68  0E00               	movlw	0
  2834   000A6A  6E5C               	movwf	efgtoa@i^0,c
  2835   000A6C                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2838   000A6C  C05F  F054         	movff	efgtoa@g,efgtoa@h
  2839   000A70  C060  F055         	movff	efgtoa@g+1,efgtoa@h+1
  2840   000A74  C061  F056         	movff	efgtoa@g+2,efgtoa@h+2
  2841   000A78  C062  F057         	movff	efgtoa@g+3,efgtoa@h+3
  2842   000A7C                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2845   000A7C  C065  F050         	movff	efgtoa@u,efgtoa@ou
  2846   000A80  C066  F051         	movff	efgtoa@u+1,efgtoa@ou+1
  2847   000A84  C067  F052         	movff	efgtoa@u+2,efgtoa@ou+2
  2848   000A88  C068  F053         	movff	efgtoa@u+3,efgtoa@ou+3
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2851   000A8C  EFC2  F005         	goto	l3602
  2852   000A90                     l3594:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2855   000A90  C054  F001         	movff	efgtoa@h,___fldiv@b
  2856   000A94  C055  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2857   000A98  C056  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2858   000A9C  C057  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2859   000AA0  C065  F005         	movff	efgtoa@u,___fldiv@a
  2860   000AA4  C066  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2861   000AA8  C067  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2862   000AAC  C068  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2863   000AB0  EC5C  F00F         	call	___fldiv	;wreg free
  2864   000AB4  C001  F01A         	movff	?___fldiv,floorf@x
  2865   000AB8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2866   000ABC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2867   000AC0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2868   000AC4  EC84  F012         	call	_floorf	;wreg free
  2869   000AC8  C01A  F058         	movff	?_floorf,efgtoa@l
  2870   000ACC  C01B  F059         	movff	?_floorf+1,efgtoa@l+1
  2871   000AD0  C01C  F05A         	movff	?_floorf+2,efgtoa@l+2
  2872   000AD4  C01D  F05B         	movff	?_floorf+3,efgtoa@l+3
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2875   000AD8  C058  F001         	movff	efgtoa@l,___fltol@f1
  2876   000ADC  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2877   000AE0  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2878   000AE4  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2879   000AE8  EC82  F016         	call	___fltol	;wreg free
  2880   000AEC  C001  F048         	movff	?___fltol,efgtoa@d
  2881   000AF0  C002  F049         	movff	?___fltol+1,efgtoa@d+1
  2882   000AF4                     
  2883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2884   000AF4  C054  F028         	movff	efgtoa@h,___flsub@b
  2885   000AF8  C055  F029         	movff	efgtoa@h+1,___flsub@b+1
  2886   000AFC  C056  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2887   000B00  C057  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2888   000B04  C058  F013         	movff	efgtoa@l,___flmul@a
  2889   000B08  C059  F014         	movff	efgtoa@l+1,___flmul@a+1
  2890   000B0C  C05A  F015         	movff	efgtoa@l+2,___flmul@a+2
  2891   000B10  C05B  F016         	movff	efgtoa@l+3,___flmul@a+3
  2892   000B14  C065  F00F         	movff	efgtoa@u,___flmul@b
  2893   000B18  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2894   000B1C  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2895   000B20  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2896   000B24  EC47  F00D         	call	___flmul	;wreg free
  2897   000B28  C00F  F02C         	movff	?___flmul,___flsub@a
  2898   000B2C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2899   000B30  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2900   000B34  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2901   000B38  EC53  F01B         	call	___flsub	;wreg free
  2902   000B3C  C028  F054         	movff	?___flsub,efgtoa@h
  2903   000B40  C029  F055         	movff	?___flsub+1,efgtoa@h+1
  2904   000B44  C02A  F056         	movff	?___flsub+2,efgtoa@h+2
  2905   000B48  C02B  F057         	movff	?___flsub+3,efgtoa@h+3
  2906   000B4C                     
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2908   000B4C  C065  F001         	movff	efgtoa@u,___fldiv@b
  2909   000B50  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2910   000B54  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2911   000B58  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2912   000B5C  0E00               	movlw	0
  2913   000B5E  6E05               	movwf	___fldiv@a^0,c
  2914   000B60  0E00               	movlw	0
  2915   000B62  6E06               	movwf	(___fldiv@a+1)^0,c
  2916   000B64  0E20               	movlw	32
  2917   000B66  6E07               	movwf	(___fldiv@a+2)^0,c
  2918   000B68  0E41               	movlw	65
  2919   000B6A  6E08               	movwf	(___fldiv@a+3)^0,c
  2920   000B6C  EC5C  F00F         	call	___fldiv	;wreg free
  2921   000B70  C001  F065         	movff	?___fldiv,efgtoa@u
  2922   000B74  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  2923   000B78  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  2924   000B7C  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  2925   000B80                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2927   000B80  4A5C               	infsnz	efgtoa@i^0,f,c
  2928   000B82  2A5D               	incf	(efgtoa@i+1)^0,f,c
  2929   000B84                     l3602:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2932   000B84  504A               	movf	efgtoa@m^0,w,c
  2933   000B86  5C5C               	subwf	efgtoa@i^0,w,c
  2934   000B88  505D               	movf	(efgtoa@i+1)^0,w,c
  2935   000B8A  0A80               	xorlw	128
  2936   000B8C  6E3B               	movwf	??_efgtoa^0,c
  2937   000B8E  504B               	movf	(efgtoa@m+1)^0,w,c
  2938   000B90  0A80               	xorlw	128
  2939   000B92  583B               	subwfb	??_efgtoa^0,w,c
  2940   000B94  A0D8               	btfss	status,0,c
  2941   000B96  EFCF  F005         	goto	u4041
  2942   000B9A  EFD1  F005         	goto	u4040
  2943   000B9E                     u4041:
  2944   000B9E  EF48  F005         	goto	l3594
  2945   000BA2                     u4040:
  2946   000BA2                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2948   000BA2  C065  F00F         	movff	efgtoa@u,___flmul@b
  2949   000BA6  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2950   000BAA  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2951   000BAE  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2952   000BB2  0E00               	movlw	0
  2953   000BB4  6E13               	movwf	___flmul@a^0,c
  2954   000BB6  0E00               	movlw	0
  2955   000BB8  6E14               	movwf	(___flmul@a+1)^0,c
  2956   000BBA  0EA0               	movlw	160
  2957   000BBC  6E15               	movwf	(___flmul@a+2)^0,c
  2958   000BBE  0E40               	movlw	64
  2959   000BC0  6E16               	movwf	(___flmul@a+3)^0,c
  2960   000BC2  EC47  F00D         	call	___flmul	;wreg free
  2961   000BC6  C00F  F058         	movff	?___flmul,efgtoa@l
  2962   000BCA  C010  F059         	movff	?___flmul+1,efgtoa@l+1
  2963   000BCE  C011  F05A         	movff	?___flmul+2,efgtoa@l+2
  2964   000BD2  C012  F05B         	movff	?___flmul+3,efgtoa@l+3
  2965   000BD6                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2967   000BD6  C054  F028         	movff	efgtoa@h,___flge@ff1
  2968   000BDA  C055  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2969   000BDE  C056  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2970   000BE2  C057  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2971   000BE6  C058  F02C         	movff	efgtoa@l,___flge@ff2
  2972   000BEA  C059  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2973   000BEE  C05A  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2974   000BF2  C05B  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2975   000BF6  EC05  F017         	call	___flge	;wreg free
  2976   000BFA  B0D8               	btfsc	status,0,c
  2977   000BFC  EF02  F006         	goto	u4051
  2978   000C00  EF04  F006         	goto	u4050
  2979   000C04                     u4051:
  2980   000C04  EF0E  F006         	goto	l3610
  2981   000C08                     u4050:
  2982   000C08                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2984   000C08  0E00               	movlw	0
  2985   000C0A  6E58               	movwf	efgtoa@l^0,c
  2986   000C0C  0E00               	movlw	0
  2987   000C0E  6E59               	movwf	(efgtoa@l+1)^0,c
  2988   000C10  0E00               	movlw	0
  2989   000C12  6E5A               	movwf	(efgtoa@l+2)^0,c
  2990   000C14  0E00               	movlw	0
  2991   000C16  6E5B               	movwf	(efgtoa@l+3)^0,c
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2994   000C18  EF36  F006         	goto	l3616
  2995   000C1C                     l3610:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2998   000C1C  C054  F001         	movff	efgtoa@h,___fleq@ff1
  2999   000C20  C055  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3000   000C24  C056  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3001   000C28  C057  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3002   000C2C  C058  F005         	movff	efgtoa@l,___fleq@ff2
  3003   000C30  C059  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3004   000C34  C05A  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3005   000C38  C05B  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3006   000C3C  ECDD  F018         	call	___fleq	;wreg free
  3007   000C40  A0D8               	btfss	status,0,c
  3008   000C42  EF25  F006         	goto	u4061
  3009   000C46  EF27  F006         	goto	u4060
  3010   000C4A                     u4061:
  3011   000C4A  EF36  F006         	goto	l3616
  3012   000C4E                     u4060:
  3013   000C4E  B048               	btfsc	efgtoa@d^0,0,c
  3014   000C50  EF2C  F006         	goto	u4071
  3015   000C54  EF2E  F006         	goto	u4070
  3016   000C58                     u4071:
  3017   000C58  EF36  F006         	goto	l3616
  3018   000C5C                     u4070:
  3019   000C5C                     
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3021   000C5C  0E00               	movlw	0
  3022   000C5E  6E58               	movwf	efgtoa@l^0,c
  3023   000C60  0E00               	movlw	0
  3024   000C62  6E59               	movwf	(efgtoa@l+1)^0,c
  3025   000C64  0E00               	movlw	0
  3026   000C66  6E5A               	movwf	(efgtoa@l+2)^0,c
  3027   000C68  0E00               	movlw	0
  3028   000C6A  6E5B               	movwf	(efgtoa@l+3)^0,c
  3029   000C6C                     l3616:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3032   000C6C  C05F  F001         	movff	efgtoa@g,___fladd@b
  3033   000C70  C060  F002         	movff	efgtoa@g+1,___fladd@b+1
  3034   000C74  C061  F003         	movff	efgtoa@g+2,___fladd@b+2
  3035   000C78  C062  F004         	movff	efgtoa@g+3,___fladd@b+3
  3036   000C7C  C058  F005         	movff	efgtoa@l,___fladd@a
  3037   000C80  C059  F006         	movff	efgtoa@l+1,___fladd@a+1
  3038   000C84  C05A  F007         	movff	efgtoa@l+2,___fladd@a+2
  3039   000C88  C05B  F008         	movff	efgtoa@l+3,___fladd@a+3
  3040   000C8C  ECE7  F00A         	call	___fladd	;wreg free
  3041   000C90  C001  F054         	movff	?___fladd,efgtoa@h
  3042   000C94  C002  F055         	movff	?___fladd+1,efgtoa@h+1
  3043   000C98  C003  F056         	movff	?___fladd+2,efgtoa@h+2
  3044   000C9C  C004  F057         	movff	?___fladd+3,efgtoa@h+3
  3045   000CA0                     
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3047   000CA0  C054  F028         	movff	efgtoa@h,___flge@ff1
  3048   000CA4  C055  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3049   000CA8  C056  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3050   000CAC  C057  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3051   000CB0  0E00               	movlw	0
  3052   000CB2  6E13               	movwf	___flmul@a^0,c
  3053   000CB4  0E00               	movlw	0
  3054   000CB6  6E14               	movwf	(___flmul@a+1)^0,c
  3055   000CB8  0E20               	movlw	32
  3056   000CBA  6E15               	movwf	(___flmul@a+2)^0,c
  3057   000CBC  0E41               	movlw	65
  3058   000CBE  6E16               	movwf	(___flmul@a+3)^0,c
  3059   000CC0  C050  F00F         	movff	efgtoa@ou,___flmul@b
  3060   000CC4  C051  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3061   000CC8  C052  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3062   000CCC  C053  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3063   000CD0  EC47  F00D         	call	___flmul	;wreg free
  3064   000CD4  C00F  F02C         	movff	?___flmul,___flge@ff2
  3065   000CD8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3066   000CDC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3067   000CE0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3068   000CE4  EC05  F017         	call	___flge	;wreg free
  3069   000CE8  A0D8               	btfss	status,0,c
  3070   000CEA  EF79  F006         	goto	u4081
  3071   000CEE  EF7B  F006         	goto	u4080
  3072   000CF2                     u4081:
  3073   000CF2  EFA2  F006         	goto	l3628
  3074   000CF6                     u4080:
  3075   000CF6                     
  3076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3077   000CF6  4A4C               	infsnz	efgtoa@e^0,f,c
  3078   000CF8  2A4D               	incf	(efgtoa@e+1)^0,f,c
  3079   000CFA                     
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3081   000CFA  C050  F00F         	movff	efgtoa@ou,___flmul@b
  3082   000CFE  C051  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3083   000D02  C052  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3084   000D06  C053  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3085   000D0A  0E00               	movlw	0
  3086   000D0C  6E13               	movwf	___flmul@a^0,c
  3087   000D0E  0E00               	movlw	0
  3088   000D10  6E14               	movwf	(___flmul@a+1)^0,c
  3089   000D12  0E20               	movlw	32
  3090   000D14  6E15               	movwf	(___flmul@a+2)^0,c
  3091   000D16  0E41               	movlw	65
  3092   000D18  6E16               	movwf	(___flmul@a+3)^0,c
  3093   000D1A  EC47  F00D         	call	___flmul	;wreg free
  3094   000D1E  C00F  F050         	movff	?___flmul,efgtoa@ou
  3095   000D22  C010  F051         	movff	?___flmul+1,efgtoa@ou+1
  3096   000D26  C011  F052         	movff	?___flmul+2,efgtoa@ou+2
  3097   000D2A  C012  F053         	movff	?___flmul+3,efgtoa@ou+3
  3098   000D2E                     
  3099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3100   000D2E  0E66               	movlw	102
  3101   000D30  1847               	xorwf	efgtoa@nmode^0,w,c
  3102   000D32  A4D8               	btfss	status,2,c
  3103   000D34  EF9E  F006         	goto	u4091
  3104   000D38  EFA0  F006         	goto	u4090
  3105   000D3C                     u4091:
  3106   000D3C  EFA2  F006         	goto	l3628
  3107   000D40                     u4090:
  3108   000D40                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3110   000D40  4A4A               	infsnz	efgtoa@m^0,f,c
  3111   000D42  2A4B               	incf	(efgtoa@m+1)^0,f,c
  3112   000D44                     l3628:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3115   000D44  C050  F065         	movff	efgtoa@ou,efgtoa@u
  3116   000D48  C051  F066         	movff	efgtoa@ou+1,efgtoa@u+1
  3117   000D4C  C052  F067         	movff	efgtoa@ou+2,efgtoa@u+2
  3118   000D50  C053  F068         	movff	efgtoa@ou+3,efgtoa@u+3
  3119   000D54                     
  3120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3121   000D54  C04C  F03D         	movff	efgtoa@e,efgtoa@ne
  3122   000D58  C04D  F03E         	movff	efgtoa@e+1,efgtoa@ne+1
  3123   000D5C                     
  3124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3125   000D5C  0E00               	movlw	0
  3126   000D5E  6E45               	movwf	efgtoa@pp^0,c
  3127   000D60                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3129   000D60  0E00               	movlw	0
  3130   000D62  6E42               	movwf	(efgtoa@t+1)^0,c
  3131   000D64  0E00               	movlw	0
  3132   000D66  6E41               	movwf	efgtoa@t^0,c
  3133   000D68                     
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3135   000D68  0E00               	movlw	0
  3136   000D6A  6E5D               	movwf	(efgtoa@i+1)^0,c
  3137   000D6C  0E00               	movlw	0
  3138   000D6E  6E5C               	movwf	efgtoa@i^0,c
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3141   000D70  EF9C  F007         	goto	l3678
  3142   000D74                     l3638:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3145   000D74  C054  F001         	movff	efgtoa@h,___fldiv@b
  3146   000D78  C055  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3147   000D7C  C056  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3148   000D80  C057  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3149   000D84  C065  F005         	movff	efgtoa@u,___fldiv@a
  3150   000D88  C066  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3151   000D8C  C067  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3152   000D90  C068  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3153   000D94  EC5C  F00F         	call	___fldiv	;wreg free
  3154   000D98  C001  F01A         	movff	?___fldiv,floorf@x
  3155   000D9C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3156   000DA0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3157   000DA4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3158   000DA8  EC84  F012         	call	_floorf	;wreg free
  3159   000DAC  C01A  F058         	movff	?_floorf,efgtoa@l
  3160   000DB0  C01B  F059         	movff	?_floorf+1,efgtoa@l+1
  3161   000DB4  C01C  F05A         	movff	?_floorf+2,efgtoa@l+2
  3162   000DB8  C01D  F05B         	movff	?_floorf+3,efgtoa@l+3
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3165   000DBC  C058  F001         	movff	efgtoa@l,___fltol@f1
  3166   000DC0  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3167   000DC4  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3168   000DC8  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3169   000DCC  EC82  F016         	call	___fltol	;wreg free
  3170   000DD0  BE02               	btfsc	(?___fltol+1)^0,7,c
  3171   000DD2  EFF6  F006         	goto	u4100
  3172   000DD6  5002               	movf	(?___fltol+1)^0,w,c
  3173   000DD8  E107               	bnz	u4101
  3174   000DDA  0E0A               	movlw	10
  3175   000DDC  5C01               	subwf	?___fltol^0,w,c
  3176   000DDE  B0D8               	btfsc	status,0,c
  3177   000DE0  EFF4  F006         	goto	u4101
  3178   000DE4  EFF6  F006         	goto	u4100
  3179   000DE8                     u4101:
  3180   000DE8  EF06  F007         	goto	l3642
  3181   000DEC                     u4100:
  3182   000DEC  C058  F001         	movff	efgtoa@l,___fltol@f1
  3183   000DF0  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3184   000DF4  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3185   000DF8  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3186   000DFC  EC82  F016         	call	___fltol	;wreg free
  3187   000E00  C001  F048         	movff	?___fltol,efgtoa@d
  3188   000E04  C002  F049         	movff	?___fltol+1,efgtoa@d+1
  3189   000E08  EF0A  F007         	goto	l898
  3190   000E0C                     l3642:
  3191   000E0C  0E00               	movlw	0
  3192   000E0E  6E49               	movwf	(efgtoa@d+1)^0,c
  3193   000E10  0E09               	movlw	9
  3194   000E12  6E48               	movwf	efgtoa@d^0,c
  3195   000E14                     l898:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3198   000E14  5045               	movf	efgtoa@pp^0,w,c
  3199   000E16  A4D8               	btfss	status,2,c
  3200   000E18  EF10  F007         	goto	u4111
  3201   000E1C  EF12  F007         	goto	u4110
  3202   000E20                     u4111:
  3203   000E20  EF3A  F007         	goto	l3662
  3204   000E24                     u4110:
  3205   000E24  BE3E               	btfsc	(efgtoa@ne+1)^0,7,c
  3206   000E26  EF19  F007         	goto	u4120
  3207   000E2A  EF17  F007         	goto	u4121
  3208   000E2E                     u4121:
  3209   000E2E  EF3A  F007         	goto	l3662
  3210   000E32                     u4120:
  3211   000E32                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3213   000E32  0E00               	movlw	low _dbuf
  3214   000E34  2463               	addwf	efgtoa@n^0,w,c
  3215   000E36  6ED9               	movwf	fsr2l,c
  3216   000E38  0E01               	movlw	high _dbuf
  3217   000E3A  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3218   000E3C  6EDA               	movwf	fsr2h,c
  3219   000E3E  0E2E               	movlw	46
  3220   000E40  6EDF               	movwf	indf2,c
  3221   000E42  4A63               	infsnz	efgtoa@n^0,f,c
  3222   000E44  2A64               	incf	(efgtoa@n+1)^0,f,c
  3223   000E46                     
  3224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3225   000E46  064E               	decf	efgtoa@w^0,f,c
  3226   000E48  A0D8               	btfss	status,0,c
  3227   000E4A  064F               	decf	(efgtoa@w+1)^0,f,c
  3228   000E4C                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3230   000E4C  0E01               	movlw	1
  3231   000E4E  6E45               	movwf	efgtoa@pp^0,c
  3232   000E50  EF3A  F007         	goto	l3662
  3233   000E54                     l3654:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3236   000E54  0E00               	movlw	low _dbuf
  3237   000E56  2463               	addwf	efgtoa@n^0,w,c
  3238   000E58  6ED9               	movwf	fsr2l,c
  3239   000E5A  0E01               	movlw	high _dbuf
  3240   000E5C  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3241   000E5E  6EDA               	movwf	fsr2h,c
  3242   000E60  0E30               	movlw	48
  3243   000E62  6EDF               	movwf	indf2,c
  3244   000E64  4A63               	infsnz	efgtoa@n^0,f,c
  3245   000E66  2A64               	incf	(efgtoa@n+1)^0,f,c
  3246   000E68                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3248   000E68  064E               	decf	efgtoa@w^0,f,c
  3249   000E6A  A0D8               	btfss	status,0,c
  3250   000E6C  064F               	decf	(efgtoa@w+1)^0,f,c
  3251   000E6E                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3253   000E6E  0641               	decf	efgtoa@t^0,f,c
  3254   000E70  A0D8               	btfss	status,0,c
  3255   000E72  0642               	decf	(efgtoa@t+1)^0,f,c
  3256   000E74                     l3662:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3259   000E74  5041               	movf	efgtoa@t^0,w,c
  3260   000E76  1042               	iorwf	(efgtoa@t+1)^0,w,c
  3261   000E78  A4D8               	btfss	status,2,c
  3262   000E7A  EF41  F007         	goto	u4131
  3263   000E7E  EF43  F007         	goto	u4130
  3264   000E82                     u4131:
  3265   000E82  EF2A  F007         	goto	l3654
  3266   000E86                     u4130:
  3267   000E86                     
  3268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3269   000E86  0E00               	movlw	low _dbuf
  3270   000E88  2463               	addwf	efgtoa@n^0,w,c
  3271   000E8A  6ED9               	movwf	fsr2l,c
  3272   000E8C  0E01               	movlw	high _dbuf
  3273   000E8E  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3274   000E90  6EDA               	movwf	fsr2h,c
  3275   000E92  5048               	movf	efgtoa@d^0,w,c
  3276   000E94  0F30               	addlw	48
  3277   000E96  6EDF               	movwf	indf2,c
  3278   000E98  4A63               	infsnz	efgtoa@n^0,f,c
  3279   000E9A  2A64               	incf	(efgtoa@n+1)^0,f,c
  3280   000E9C                     
  3281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3282   000E9C  064E               	decf	efgtoa@w^0,f,c
  3283   000E9E  A0D8               	btfss	status,0,c
  3284   000EA0  064F               	decf	(efgtoa@w+1)^0,f,c
  3285   000EA2                     
  3286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3287   000EA2  C054  F028         	movff	efgtoa@h,___flsub@b
  3288   000EA6  C055  F029         	movff	efgtoa@h+1,___flsub@b+1
  3289   000EAA  C056  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3290   000EAE  C057  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3291   000EB2  C058  F013         	movff	efgtoa@l,___flmul@a
  3292   000EB6  C059  F014         	movff	efgtoa@l+1,___flmul@a+1
  3293   000EBA  C05A  F015         	movff	efgtoa@l+2,___flmul@a+2
  3294   000EBE  C05B  F016         	movff	efgtoa@l+3,___flmul@a+3
  3295   000EC2  C065  F00F         	movff	efgtoa@u,___flmul@b
  3296   000EC6  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  3297   000ECA  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  3298   000ECE  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  3299   000ED2  EC47  F00D         	call	___flmul	;wreg free
  3300   000ED6  C00F  F02C         	movff	?___flmul,___flsub@a
  3301   000EDA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3302   000EDE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3303   000EE2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3304   000EE6  EC53  F01B         	call	___flsub	;wreg free
  3305   000EEA  C028  F054         	movff	?___flsub,efgtoa@h
  3306   000EEE  C029  F055         	movff	?___flsub+1,efgtoa@h+1
  3307   000EF2  C02A  F056         	movff	?___flsub+2,efgtoa@h+2
  3308   000EF6  C02B  F057         	movff	?___flsub+3,efgtoa@h+3
  3309   000EFA                     
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3311   000EFA  C065  F001         	movff	efgtoa@u,___fldiv@b
  3312   000EFE  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3313   000F02  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3314   000F06  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3315   000F0A  0E00               	movlw	0
  3316   000F0C  6E05               	movwf	___fldiv@a^0,c
  3317   000F0E  0E00               	movlw	0
  3318   000F10  6E06               	movwf	(___fldiv@a+1)^0,c
  3319   000F12  0E20               	movlw	32
  3320   000F14  6E07               	movwf	(___fldiv@a+2)^0,c
  3321   000F16  0E41               	movlw	65
  3322   000F18  6E08               	movwf	(___fldiv@a+3)^0,c
  3323   000F1A  EC5C  F00F         	call	___fldiv	;wreg free
  3324   000F1E  C001  F065         	movff	?___fldiv,efgtoa@u
  3325   000F22  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  3326   000F26  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  3327   000F2A  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  3328   000F2E                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3330   000F2E  063D               	decf	efgtoa@ne^0,f,c
  3331   000F30  A0D8               	btfss	status,0,c
  3332   000F32  063E               	decf	(efgtoa@ne+1)^0,f,c
  3333   000F34                     
  3334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3335   000F34  4A5C               	infsnz	efgtoa@i^0,f,c
  3336   000F36  2A5D               	incf	(efgtoa@i+1)^0,f,c
  3337   000F38                     l3678:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3340   000F38  504A               	movf	efgtoa@m^0,w,c
  3341   000F3A  5C5C               	subwf	efgtoa@i^0,w,c
  3342   000F3C  505D               	movf	(efgtoa@i+1)^0,w,c
  3343   000F3E  0A80               	xorlw	128
  3344   000F40  6E3B               	movwf	??_efgtoa^0,c
  3345   000F42  504B               	movf	(efgtoa@m+1)^0,w,c
  3346   000F44  0A80               	xorlw	128
  3347   000F46  583B               	subwfb	??_efgtoa^0,w,c
  3348   000F48  B0D8               	btfsc	status,0,c
  3349   000F4A  EFA9  F007         	goto	u4141
  3350   000F4E  EFAB  F007         	goto	u4140
  3351   000F52                     u4141:
  3352   000F52  EFB9  F007         	goto	l3682
  3353   000F56                     u4140:
  3354   000F56  BE64               	btfsc	(efgtoa@n+1)^0,7,c
  3355   000F58  EFB7  F007         	goto	u4151
  3356   000F5C  5064               	movf	(efgtoa@n+1)^0,w,c
  3357   000F5E  E109               	bnz	u4150
  3358   000F60  0E4B               	movlw	75
  3359   000F62  5C63               	subwf	efgtoa@n^0,w,c
  3360   000F64  A0D8               	btfss	status,0,c
  3361   000F66  EFB7  F007         	goto	u4151
  3362   000F6A  EFB9  F007         	goto	u4150
  3363   000F6E                     u4151:
  3364   000F6E  EFBA  F006         	goto	l3638
  3365   000F72                     u4150:
  3366   000F72                     l3682:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3369   000F72  0E00               	movlw	0
  3370   000F74  6E5D               	movwf	(efgtoa@i+1)^0,c
  3371   000F76  0E4F               	movlw	79
  3372   000F78  6E5C               	movwf	efgtoa@i^0,c
  3373   000F7A                     
  3374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3375   000F7A  0E00               	movlw	low _dbuf
  3376   000F7C  245C               	addwf	efgtoa@i^0,w,c
  3377   000F7E  6ED9               	movwf	fsr2l,c
  3378   000F80  0E01               	movlw	high _dbuf
  3379   000F82  205D               	addwfc	(efgtoa@i+1)^0,w,c
  3380   000F84  6EDA               	movwf	fsr2h,c
  3381   000F86  0E00               	movlw	0
  3382   000F88  6EDF               	movwf	indf2,c
  3383   000F8A                     
  3384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3385   000F8A  0E00               	movlw	low _dbuf
  3386   000F8C  6E3B               	movwf	??_efgtoa^0,c
  3387   000F8E  0E01               	movlw	high _dbuf
  3388   000F90  6E3C               	movwf	(??_efgtoa+1)^0,c
  3389   000F92  5063               	movf	efgtoa@n^0,w,c
  3390   000F94  5E3B               	subwf	??_efgtoa^0,f,c
  3391   000F96  5064               	movf	(efgtoa@n+1)^0,w,c
  3392   000F98  5A3C               	subwfb	(??_efgtoa+1)^0,f,c
  3393   000F9A  505C               	movf	efgtoa@i^0,w,c
  3394   000F9C  243B               	addwf	??_efgtoa^0,w,c
  3395   000F9E  6E01               	movwf	memcpy@d1^0,c
  3396   000FA0  505D               	movf	(efgtoa@i+1)^0,w,c
  3397   000FA2  203C               	addwfc	(??_efgtoa+1)^0,w,c
  3398   000FA4  6E02               	movwf	(memcpy@d1+1)^0,c
  3399   000FA6  0E00               	movlw	low _dbuf
  3400   000FA8  6E03               	movwf	memcpy@s1^0,c
  3401   000FAA  0E01               	movlw	high _dbuf
  3402   000FAC  6E04               	movwf	(memcpy@s1+1)^0,c
  3403   000FAE  C063  F005         	movff	efgtoa@n,memcpy@n
  3404   000FB2  C064  F006         	movff	efgtoa@n+1,memcpy@n+1
  3405   000FB6  EC2B  F01B         	call	_memcpy	;wreg free
  3406   000FBA                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3408   000FBA  5063               	movf	efgtoa@n^0,w,c
  3409   000FBC  5C5C               	subwf	efgtoa@i^0,w,c
  3410   000FBE  6E63               	movwf	efgtoa@n^0,c
  3411   000FC0  5064               	movf	(efgtoa@n+1)^0,w,c
  3412   000FC2  585D               	subwfb	(efgtoa@i+1)^0,w,c
  3413   000FC4  6E64               	movwf	(efgtoa@n+1)^0,c
  3414   000FC6                     
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3416   000FC6  505E               	movf	efgtoa@sign^0,w,c
  3417   000FC8  A4D8               	btfss	status,2,c
  3418   000FCA  EFE9  F007         	goto	u4161
  3419   000FCE  EFEC  F007         	goto	u4160
  3420   000FD2                     u4161:
  3421   000FD2  0E01               	movlw	1
  3422   000FD4  EFED  F007         	goto	u4170
  3423   000FD8                     u4160:
  3424   000FD8  0E00               	movlw	0
  3425   000FDA                     u4170:
  3426   000FDA  6E5C               	movwf	efgtoa@i^0,c
  3427   000FDC  6A5D               	clrf	(efgtoa@i+1)^0,c
  3428   000FDE                     
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  3430   000FDE  A27F               	btfss	_flags^0,1,c
  3431   000FE0  EFF4  F007         	goto	u4181
  3432   000FE4  EFF6  F007         	goto	u4180
  3433   000FE8                     u4181:
  3434   000FE8  EF24  F008         	goto	l3704
  3435   000FEC                     u4180:
  3436   000FEC  EF06  F008         	goto	l3700
  3437   000FF0                     l3696:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  3440   000FF0  0663               	decf	efgtoa@n^0,f,c
  3441   000FF2  A0D8               	btfss	status,0,c
  3442   000FF4  0664               	decf	(efgtoa@n+1)^0,f,c
  3443   000FF6  0E00               	movlw	low _dbuf
  3444   000FF8  2463               	addwf	efgtoa@n^0,w,c
  3445   000FFA  6ED9               	movwf	fsr2l,c
  3446   000FFC  0E01               	movlw	high _dbuf
  3447   000FFE  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3448   001000  6EDA               	movwf	fsr2h,c
  3449   001002  0E30               	movlw	48
  3450   001004  6EDF               	movwf	indf2,c
  3451   001006                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  3453   001006  064E               	decf	efgtoa@w^0,f,c
  3454   001008  A0D8               	btfss	status,0,c
  3455   00100A  064F               	decf	(efgtoa@w+1)^0,f,c
  3456   00100C                     l3700:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  3459   00100C  504E               	movf	efgtoa@w^0,w,c
  3460   00100E  5C5C               	subwf	efgtoa@i^0,w,c
  3461   001010  505D               	movf	(efgtoa@i+1)^0,w,c
  3462   001012  0A80               	xorlw	128
  3463   001014  6E3B               	movwf	??_efgtoa^0,c
  3464   001016  504F               	movf	(efgtoa@w+1)^0,w,c
  3465   001018  0A80               	xorlw	128
  3466   00101A  583B               	subwfb	??_efgtoa^0,w,c
  3467   00101C  B0D8               	btfsc	status,0,c
  3468   00101E  EF13  F008         	goto	u4191
  3469   001022  EF15  F008         	goto	u4190
  3470   001026                     u4191:
  3471   001026  EF24  F008         	goto	l3704
  3472   00102A                     u4190:
  3473   00102A  5063               	movf	efgtoa@n^0,w,c
  3474   00102C  5C5C               	subwf	efgtoa@i^0,w,c
  3475   00102E  505D               	movf	(efgtoa@i+1)^0,w,c
  3476   001030  0A80               	xorlw	128
  3477   001032  6E3B               	movwf	??_efgtoa^0,c
  3478   001034  5064               	movf	(efgtoa@n+1)^0,w,c
  3479   001036  0A80               	xorlw	128
  3480   001038  583B               	subwfb	??_efgtoa^0,w,c
  3481   00103A  A0D8               	btfss	status,0,c
  3482   00103C  EF22  F008         	goto	u4201
  3483   001040  EF24  F008         	goto	u4200
  3484   001044                     u4201:
  3485   001044  EFF8  F007         	goto	l3696
  3486   001048                     u4200:
  3487   001048                     l3704:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3490   001048  505E               	movf	efgtoa@sign^0,w,c
  3491   00104A  B4D8               	btfsc	status,2,c
  3492   00104C  EF2A  F008         	goto	u4211
  3493   001050  EF2C  F008         	goto	u4210
  3494   001054                     u4211:
  3495   001054  EF37  F008         	goto	l3708
  3496   001058                     u4210:
  3497   001058                     
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3499   001058  0663               	decf	efgtoa@n^0,f,c
  3500   00105A  A0D8               	btfss	status,0,c
  3501   00105C  0664               	decf	(efgtoa@n+1)^0,f,c
  3502   00105E  0E00               	movlw	low _dbuf
  3503   001060  2463               	addwf	efgtoa@n^0,w,c
  3504   001062  6ED9               	movwf	fsr2l,c
  3505   001064  0E01               	movlw	high _dbuf
  3506   001066  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3507   001068  6EDA               	movwf	fsr2h,c
  3508   00106A  C05E  FFDF         	movff	efgtoa@sign,indf2
  3509   00106E                     l3708:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3512   00106E  505C               	movf	efgtoa@i^0,w,c
  3513   001070  5E4E               	subwf	efgtoa@w^0,f,c
  3514   001072  505D               	movf	(efgtoa@i+1)^0,w,c
  3515   001074  5A4F               	subwfb	(efgtoa@w+1)^0,f,c
  3516   001076                     
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3518   001076  C034  F011         	movff	efgtoa@fp,pad@fp
  3519   00107A  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3520   00107E  0E00               	movlw	low _dbuf
  3521   001080  2463               	addwf	efgtoa@n^0,w,c
  3522   001082  6E13               	movwf	pad@buf^0,c
  3523   001084  0E01               	movlw	high _dbuf
  3524   001086  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3525   001088  6E14               	movwf	(pad@buf+1)^0,c
  3526   00108A  C04E  F015         	movff	efgtoa@w,pad@p
  3527   00108E  C04F  F016         	movff	efgtoa@w+1,pad@p+1
  3528   001092  EC32  F019         	call	_pad	;wreg free
  3529   001096                     l865:
  3530   001096  0012               	return		;funcret
  3531   001098                     __end_of_efgtoa:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _strcpy *****************
  3535 ;; Defined at:
  3536 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3539 ;;		 -> dbuf(80), 
  3540 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3541 ;;		 -> STR_10(4), STR_7(4), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  d               2    6[COMRAM] PTR unsigned char 
  3544 ;;		 -> dbuf(80), 
  3545 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3546 ;;		 -> STR_10(4), STR_7(4), 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2    0[COMRAM] PTR unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3556 ;;      Params:         4       0       0       0       0       0       0
  3557 ;;      Locals:         4       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0
  3559 ;;      Totals:         8       0       0       0       0       0       0
  3560 ;;Total ram usage:        8 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_efgtoa
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text8
  3570   003776                     __ptext8:
  3571                           	callstack 0
  3572   003776                     _strcpy:
  3573                           	callstack 25
  3574   003776  C003  F005         	movff	strcpy@src,strcpy@s
  3575   00377A  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3576   00377E  C001  F007         	movff	strcpy@dest,strcpy@d
  3577   003782  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3578   003786                     l3346:
  3579   003786  C005  FFF6         	movff	strcpy@s,tblptrl
  3580   00378A  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3581   00378E  4A05               	infsnz	strcpy@s^0,f,c
  3582   003790  2A06               	incf	(strcpy@s+1)^0,f,c
  3583   003792                     	if	0	;tblptru may be non-zero
  3584   003792                     	endif
  3585   003792                     	if	0	;tblptru may be non-zero
  3586   003792                     	endif
  3587   003792  C007  FFD9         	movff	strcpy@d,fsr2l
  3588   003796  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3589   00379A  4A07               	infsnz	strcpy@d^0,f,c
  3590   00379C  2A08               	incf	(strcpy@d+1)^0,f,c
  3591   00379E  0008               	tblrd		*
  3592   0037A0  CFF5 FFDF          	movff	tablat,indf2
  3593   0037A4  50DF               	movf	indf2,w,c
  3594   0037A6  A4D8               	btfss	status,2,c
  3595   0037A8  EFD8  F01B         	goto	u3561
  3596   0037AC  EFDA  F01B         	goto	u3560
  3597   0037B0                     u3561:
  3598   0037B0  EFC3  F01B         	goto	l3346
  3599   0037B4                     u3560:
  3600   0037B4  0012               	return		;funcret
  3601   0037B6                     __end_of_strcpy:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _memcpy *****************
  3605 ;; Defined at:
  3606 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  d1              2    0[COMRAM] PTR void 
  3609 ;;		 -> dbuf(80), 
  3610 ;;  s1              2    2[COMRAM] PTR const void 
  3611 ;;		 -> dbuf(80), 
  3612 ;;  n               2    4[COMRAM] unsigned int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3615 ;;		 -> dbuf(80), 
  3616 ;;  d               2    6[COMRAM] PTR unsigned char 
  3617 ;;		 -> dbuf(80), 
  3618 ;;  tmp             1   10[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2    0[COMRAM] PTR void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3628 ;;      Params:         6       0       0       0       0       0       0
  3629 ;;      Locals:         5       0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0
  3631 ;;      Totals:        11       0       0       0       0       0       0
  3632 ;;Total ram usage:       11 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_efgtoa
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text9
  3642   003656                     __ptext9:
  3643                           	callstack 0
  3644   003656                     _memcpy:
  3645                           	callstack 25
  3646   003656  C003  F009         	movff	memcpy@s1,memcpy@s
  3647   00365A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3648   00365E  C001  F007         	movff	memcpy@d1,memcpy@d
  3649   003662  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3650   003666  EF45  F01B         	goto	l3390
  3651   00366A                     l3382:
  3652   00366A  C009  FFD9         	movff	memcpy@s,fsr2l
  3653   00366E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3654   003672  50DF               	movf	indf2,w,c
  3655   003674  6E0B               	movwf	memcpy@tmp^0,c
  3656   003676  4A09               	infsnz	memcpy@s^0,f,c
  3657   003678  2A0A               	incf	(memcpy@s+1)^0,f,c
  3658   00367A  C007  FFD9         	movff	memcpy@d,fsr2l
  3659   00367E  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3660   003682  C00B  FFDF         	movff	memcpy@tmp,indf2
  3661   003686  4A07               	infsnz	memcpy@d^0,f,c
  3662   003688  2A08               	incf	(memcpy@d+1)^0,f,c
  3663   00368A                     l3390:
  3664   00368A  0605               	decf	memcpy@n^0,f,c
  3665   00368C  A0D8               	btfss	status,0,c
  3666   00368E  0606               	decf	(memcpy@n+1)^0,f,c
  3667   003690  2805               	incf	memcpy@n^0,w,c
  3668   003692  E106               	bnz	u3681
  3669   003694  2806               	incf	(memcpy@n+1)^0,w,c
  3670   003696  A4D8               	btfss	status,2,c
  3671   003698  EF50  F01B         	goto	u3681
  3672   00369C  EF52  F01B         	goto	u3680
  3673   0036A0                     u3681:
  3674   0036A0  EF35  F01B         	goto	l3382
  3675   0036A4                     u3680:
  3676   0036A4  0012               	return		;funcret
  3677   0036A6                     __end_of_memcpy:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _labs *****************
  3681 ;; Defined at:
  3682 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  a               4    0[COMRAM] long 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  4    0[COMRAM] long 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3696 ;;      Params:         4       0       0       0       0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0
  3698 ;;      Temps:          4       0       0       0       0       0       0
  3699 ;;      Totals:         8       0       0       0       0       0       0
  3700 ;;Total ram usage:        8 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_efgtoa
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text10
  3710   00354E                     __ptext10:
  3711                           	callstack 0
  3712   00354E                     _labs:
  3713                           	callstack 25
  3714   00354E  BE04               	btfsc	(labs@a+3)^0,7,c
  3715   003550  EFB6  F01A         	goto	u3570
  3716   003554  5004               	movf	(labs@a+3)^0,w,c
  3717   003556  1003               	iorwf	(labs@a+2)^0,w,c
  3718   003558  1002               	iorwf	(labs@a+1)^0,w,c
  3719   00355A  E106               	bnz	u3571
  3720   00355C  0401               	decf	labs@a^0,w,c
  3721   00355E  B0D8               	btfsc	status,0,c
  3722   003560  EFB4  F01A         	goto	u3571
  3723   003564  EFB6  F01A         	goto	u3570
  3724   003568                     u3571:
  3725   003568  EFD1  F01A         	goto	l1038
  3726   00356C                     u3570:
  3727   00356C  C001  F005         	movff	labs@a,??_labs
  3728   003570  C002  F006         	movff	labs@a+1,??_labs+1
  3729   003574  C003  F007         	movff	labs@a+2,??_labs+2
  3730   003578  C004  F008         	movff	labs@a+3,??_labs+3
  3731   00357C  1E05               	comf	??_labs^0,f,c
  3732   00357E  1E06               	comf	(??_labs+1)^0,f,c
  3733   003580  1E07               	comf	(??_labs+2)^0,f,c
  3734   003582  1E08               	comf	(??_labs+3)^0,f,c
  3735   003584  2A05               	incf	??_labs^0,f,c
  3736   003586  0E00               	movlw	0
  3737   003588  2206               	addwfc	(??_labs+1)^0,f,c
  3738   00358A  2207               	addwfc	(??_labs+2)^0,f,c
  3739   00358C  2208               	addwfc	(??_labs+3)^0,f,c
  3740   00358E  C005  F001         	movff	??_labs,?_labs
  3741   003592  C006  F002         	movff	??_labs+1,?_labs+1
  3742   003596  C007  F003         	movff	??_labs+2,?_labs+2
  3743   00359A  C008  F004         	movff	??_labs+3,?_labs+3
  3744   00359E  EFD9  F01A         	goto	l1041
  3745   0035A2                     l1038:
  3746   0035A2  C001  F001         	movff	labs@a,?_labs
  3747   0035A6  C002  F002         	movff	labs@a+1,?_labs+1
  3748   0035AA  C003  F003         	movff	labs@a+2,?_labs+2
  3749   0035AE  C004  F004         	movff	labs@a+3,?_labs+3
  3750   0035B2                     l1041:
  3751   0035B2  0012               	return		;funcret
  3752   0035B4                     __end_of_labs:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _floorf *****************
  3756 ;; Defined at:
  3757 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  x               4   25[COMRAM] float 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  u               4   41[COMRAM] struct .
  3762 ;;  m               4   35[COMRAM] unsigned long 
  3763 ;;  e               2   39[COMRAM] int 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  4   25[COMRAM] float 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3773 ;;      Params:         4       0       0       0       0       0       0
  3774 ;;      Locals:        10       0       0       0       0       0       0
  3775 ;;      Temps:          6       0       0       0       0       0       0
  3776 ;;      Totals:        20       0       0       0       0       0       0
  3777 ;;Total ram usage:       20 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_efgtoa
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text11
  3787   002508                     __ptext11:
  3788                           	callstack 0
  3789   002508                     _floorf:
  3790                           	callstack 25
  3791   002508  C080  F02A         	movff	floorf@F526,floorf@u
  3792   00250C  C081  F02B         	movff	floorf@F526+1,floorf@u+1
  3793   002510  C082  F02C         	movff	floorf@F526+2,floorf@u+2
  3794   002514  C083  F02D         	movff	floorf@F526+3,floorf@u+3
  3795   002518  C01A  F02A         	movff	floorf@x,floorf@u
  3796   00251C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3797   002520  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3798   002524  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3799   002528  0E81               	movlw	129
  3800   00252A  6E1E               	movwf	??_floorf^0,c
  3801   00252C  0EFF               	movlw	255
  3802   00252E  6E1F               	movwf	(??_floorf+1)^0,c
  3803   002530  C02A  F020         	movff	floorf@u,??_floorf+2
  3804   002534  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3805   002538  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3806   00253C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3807   002540  0E18               	movlw	24
  3808   002542  EFA8  F012         	goto	u3580
  3809   002546                     u3585:
  3810   002546  90D8               	bcf	status,0,c
  3811   002548  3223               	rrcf	(??_floorf+5)^0,f,c
  3812   00254A  3222               	rrcf	(??_floorf+4)^0,f,c
  3813   00254C  3221               	rrcf	(??_floorf+3)^0,f,c
  3814   00254E  3220               	rrcf	(??_floorf+2)^0,f,c
  3815   002550                     u3580:
  3816   002550  2EE8               	decfsz	wreg,f,c
  3817   002552  EFA3  F012         	goto	u3585
  3818   002556  5020               	movf	(??_floorf+2)^0,w,c
  3819   002558  241E               	addwf	??_floorf^0,w,c
  3820   00255A  6E28               	movwf	floorf@e^0,c
  3821   00255C  0E00               	movlw	0
  3822   00255E  201F               	addwfc	(??_floorf+1)^0,w,c
  3823   002560  6E29               	movwf	(floorf@e+1)^0,c
  3824   002562  BE29               	btfsc	(floorf@e+1)^0,7,c
  3825   002564  EFBD  F012         	goto	u3591
  3826   002568  5029               	movf	(floorf@e+1)^0,w,c
  3827   00256A  E109               	bnz	u3590
  3828   00256C  0E17               	movlw	23
  3829   00256E  5C28               	subwf	floorf@e^0,w,c
  3830   002570  A0D8               	btfss	status,0,c
  3831   002572  EFBD  F012         	goto	u3591
  3832   002576  EFBF  F012         	goto	u3590
  3833   00257A                     u3591:
  3834   00257A  EFC9  F012         	goto	l3358
  3835   00257E                     u3590:
  3836   00257E                     l3356:
  3837   00257E  C01A  F01A         	movff	floorf@x,?_floorf
  3838   002582  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3839   002586  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3840   00258A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3841   00258E  EF8C  F013         	goto	l1013
  3842   002592                     l3358:
  3843   002592  BE29               	btfsc	(floorf@e+1)^0,7,c
  3844   002594  EFCE  F012         	goto	u3601
  3845   002598  EFD0  F012         	goto	u3600
  3846   00259C                     u3601:
  3847   00259C  EF40  F013         	goto	l3368
  3848   0025A0                     u3600:
  3849   0025A0  C028  F01E         	movff	floorf@e,??_floorf
  3850   0025A4  0EFF               	movlw	255
  3851   0025A6  6E1F               	movwf	(??_floorf+1)^0,c
  3852   0025A8  0EFF               	movlw	255
  3853   0025AA  6E20               	movwf	(??_floorf+2)^0,c
  3854   0025AC  0E7F               	movlw	127
  3855   0025AE  6E21               	movwf	(??_floorf+3)^0,c
  3856   0025B0  0E00               	movlw	0
  3857   0025B2  6E22               	movwf	(??_floorf+4)^0,c
  3858   0025B4                     u3615:
  3859   0025B4  661E               	tstfsz	??_floorf^0,c
  3860   0025B6  EFDF  F012         	goto	u3616
  3861   0025BA  EFE7  F012         	goto	u3617
  3862   0025BE                     u3616:
  3863   0025BE  3422               	rlcf	(??_floorf+4)^0,w,c
  3864   0025C0  3222               	rrcf	(??_floorf+4)^0,f,c
  3865   0025C2  3221               	rrcf	(??_floorf+3)^0,f,c
  3866   0025C4  3220               	rrcf	(??_floorf+2)^0,f,c
  3867   0025C6  321F               	rrcf	(??_floorf+1)^0,f,c
  3868   0025C8  2E1E               	decfsz	??_floorf^0,f,c
  3869   0025CA  EFDA  F012         	goto	u3615
  3870   0025CE                     u3617:
  3871   0025CE  C01F  F024         	movff	??_floorf+1,floorf@m
  3872   0025D2  C020  F025         	movff	??_floorf+2,floorf@m+1
  3873   0025D6  C021  F026         	movff	??_floorf+3,floorf@m+2
  3874   0025DA  C022  F027         	movff	??_floorf+4,floorf@m+3
  3875   0025DE  5024               	movf	floorf@m^0,w,c
  3876   0025E0  142A               	andwf	floorf@u^0,w,c
  3877   0025E2  6E1E               	movwf	??_floorf^0,c
  3878   0025E4  5025               	movf	(floorf@m+1)^0,w,c
  3879   0025E6  142B               	andwf	(floorf@u+1)^0,w,c
  3880   0025E8  6E1F               	movwf	(??_floorf+1)^0,c
  3881   0025EA  5026               	movf	(floorf@m+2)^0,w,c
  3882   0025EC  142C               	andwf	(floorf@u+2)^0,w,c
  3883   0025EE  6E20               	movwf	(??_floorf+2)^0,c
  3884   0025F0  5027               	movf	(floorf@m+3)^0,w,c
  3885   0025F2  142D               	andwf	(floorf@u+3)^0,w,c
  3886   0025F4  6E21               	movwf	(??_floorf+3)^0,c
  3887   0025F6  501E               	movf	??_floorf^0,w,c
  3888   0025F8  101F               	iorwf	(??_floorf+1)^0,w,c
  3889   0025FA  1020               	iorwf	(??_floorf+2)^0,w,c
  3890   0025FC  1021               	iorwf	(??_floorf+3)^0,w,c
  3891   0025FE  A4D8               	btfss	status,2,c
  3892   002600  EF04  F013         	goto	u3621
  3893   002604  EF06  F013         	goto	u3620
  3894   002608                     u3621:
  3895   002608  EF08  F013         	goto	l3364
  3896   00260C                     u3620:
  3897   00260C  EFBF  F012         	goto	l3356
  3898   002610                     l3364:
  3899   002610  C02A  F01E         	movff	floorf@u,??_floorf
  3900   002614  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3901   002618  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3902   00261C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3903   002620  0E20               	movlw	32
  3904   002622  EF18  F013         	goto	u3630
  3905   002626                     u3635:
  3906   002626  90D8               	bcf	status,0,c
  3907   002628  3221               	rrcf	(??_floorf+3)^0,f,c
  3908   00262A  3220               	rrcf	(??_floorf+2)^0,f,c
  3909   00262C  321F               	rrcf	(??_floorf+1)^0,f,c
  3910   00262E  321E               	rrcf	??_floorf^0,f,c
  3911   002630                     u3630:
  3912   002630  2EE8               	decfsz	wreg,f,c
  3913   002632  EF13  F013         	goto	u3635
  3914   002636  501E               	movf	??_floorf^0,w,c
  3915   002638  101F               	iorwf	(??_floorf+1)^0,w,c
  3916   00263A  1020               	iorwf	(??_floorf+2)^0,w,c
  3917   00263C  1021               	iorwf	(??_floorf+3)^0,w,c
  3918   00263E  B4D8               	btfsc	status,2,c
  3919   002640  EF24  F013         	goto	u3641
  3920   002644  EF26  F013         	goto	u3640
  3921   002648                     u3641:
  3922   002648  EF2E  F013         	goto	l1016
  3923   00264C                     u3640:
  3924   00264C  5024               	movf	floorf@m^0,w,c
  3925   00264E  262A               	addwf	floorf@u^0,f,c
  3926   002650  5025               	movf	(floorf@m+1)^0,w,c
  3927   002652  222B               	addwfc	(floorf@u+1)^0,f,c
  3928   002654  5026               	movf	(floorf@m+2)^0,w,c
  3929   002656  222C               	addwfc	(floorf@u+2)^0,f,c
  3930   002658  5027               	movf	(floorf@m+3)^0,w,c
  3931   00265A  222D               	addwfc	(floorf@u+3)^0,f,c
  3932   00265C                     l1016:
  3933   00265C  1C24               	comf	floorf@m^0,w,c
  3934   00265E  6E1E               	movwf	??_floorf^0,c
  3935   002660  1C25               	comf	(floorf@m+1)^0,w,c
  3936   002662  6E1F               	movwf	(??_floorf+1)^0,c
  3937   002664  1C26               	comf	(floorf@m+2)^0,w,c
  3938   002666  6E20               	movwf	(??_floorf+2)^0,c
  3939   002668  1C27               	comf	(floorf@m+3)^0,w,c
  3940   00266A  6E21               	movwf	(??_floorf+3)^0,c
  3941   00266C  501E               	movf	??_floorf^0,w,c
  3942   00266E  162A               	andwf	floorf@u^0,f,c
  3943   002670  501F               	movf	(??_floorf+1)^0,w,c
  3944   002672  162B               	andwf	(floorf@u+1)^0,f,c
  3945   002674  5020               	movf	(??_floorf+2)^0,w,c
  3946   002676  162C               	andwf	(floorf@u+2)^0,f,c
  3947   002678  5021               	movf	(??_floorf+3)^0,w,c
  3948   00267A  162D               	andwf	(floorf@u+3)^0,f,c
  3949   00267C  EF84  F013         	goto	l3376
  3950   002680                     l3368:
  3951   002680  C02A  F01E         	movff	floorf@u,??_floorf
  3952   002684  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3953   002688  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3954   00268C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3955   002690  0E20               	movlw	32
  3956   002692  EF50  F013         	goto	u3650
  3957   002696                     u3655:
  3958   002696  90D8               	bcf	status,0,c
  3959   002698  3221               	rrcf	(??_floorf+3)^0,f,c
  3960   00269A  3220               	rrcf	(??_floorf+2)^0,f,c
  3961   00269C  321F               	rrcf	(??_floorf+1)^0,f,c
  3962   00269E  321E               	rrcf	??_floorf^0,f,c
  3963   0026A0                     u3650:
  3964   0026A0  2EE8               	decfsz	wreg,f,c
  3965   0026A2  EF4B  F013         	goto	u3655
  3966   0026A6  501E               	movf	??_floorf^0,w,c
  3967   0026A8  101F               	iorwf	(??_floorf+1)^0,w,c
  3968   0026AA  1020               	iorwf	(??_floorf+2)^0,w,c
  3969   0026AC  1021               	iorwf	(??_floorf+3)^0,w,c
  3970   0026AE  A4D8               	btfss	status,2,c
  3971   0026B0  EF5C  F013         	goto	u3661
  3972   0026B4  EF5E  F013         	goto	u3660
  3973   0026B8                     u3661:
  3974   0026B8  EF68  F013         	goto	l3372
  3975   0026BC                     u3660:
  3976   0026BC  0E00               	movlw	0
  3977   0026BE  6E2A               	movwf	floorf@u^0,c
  3978   0026C0  0E00               	movlw	0
  3979   0026C2  6E2B               	movwf	(floorf@u+1)^0,c
  3980   0026C4  0E00               	movlw	0
  3981   0026C6  6E2C               	movwf	(floorf@u+2)^0,c
  3982   0026C8  0E00               	movlw	0
  3983   0026CA  6E2D               	movwf	(floorf@u+3)^0,c
  3984   0026CC  EF84  F013         	goto	l3376
  3985   0026D0                     l3372:
  3986   0026D0  90D8               	bcf	status,0,c
  3987   0026D2  342A               	rlcf	floorf@u^0,w,c
  3988   0026D4  6E1E               	movwf	??_floorf^0,c
  3989   0026D6  342B               	rlcf	(floorf@u+1)^0,w,c
  3990   0026D8  6E1F               	movwf	(??_floorf+1)^0,c
  3991   0026DA  342C               	rlcf	(floorf@u+2)^0,w,c
  3992   0026DC  6E20               	movwf	(??_floorf+2)^0,c
  3993   0026DE  342D               	rlcf	(floorf@u+3)^0,w,c
  3994   0026E0  6E21               	movwf	(??_floorf+3)^0,c
  3995   0026E2  501E               	movf	??_floorf^0,w,c
  3996   0026E4  101F               	iorwf	(??_floorf+1)^0,w,c
  3997   0026E6  1020               	iorwf	(??_floorf+2)^0,w,c
  3998   0026E8  1021               	iorwf	(??_floorf+3)^0,w,c
  3999   0026EA  B4D8               	btfsc	status,2,c
  4000   0026EC  EF7A  F013         	goto	u3671
  4001   0026F0  EF7C  F013         	goto	u3670
  4002   0026F4                     u3671:
  4003   0026F4  EF84  F013         	goto	l3376
  4004   0026F8                     u3670:
  4005   0026F8  0E00               	movlw	0
  4006   0026FA  6E2A               	movwf	floorf@u^0,c
  4007   0026FC  0E00               	movlw	0
  4008   0026FE  6E2B               	movwf	(floorf@u+1)^0,c
  4009   002700  0E80               	movlw	128
  4010   002702  6E2C               	movwf	(floorf@u+2)^0,c
  4011   002704  0EBF               	movlw	191
  4012   002706  6E2D               	movwf	(floorf@u+3)^0,c
  4013   002708                     l3376:
  4014   002708  C02A  F01A         	movff	floorf@u,?_floorf
  4015   00270C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4016   002710  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4017   002714  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4018   002718                     l1013:
  4019   002718  0012               	return		;funcret
  4020   00271A                     __end_of_floorf:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function ___fpclassifyf *****************
  4024 ;; Defined at:
  4025 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  x               4    0[COMRAM] float 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  u               4   10[COMRAM] struct .
  4030 ;;  e               2    8[COMRAM] int 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  2    0[COMRAM] int 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4040 ;;      Params:         4       0       0       0       0       0       0
  4041 ;;      Locals:         6       0       0       0       0       0       0
  4042 ;;      Temps:          4       0       0       0       0       0       0
  4043 ;;      Totals:        14       0       0       0       0       0       0
  4044 ;;Total ram usage:       14 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_efgtoa
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text12
  4054   002F0E                     __ptext12:
  4055                           	callstack 0
  4056   002F0E                     ___fpclassifyf:
  4057                           	callstack 25
  4058   002F0E  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4059   002F12  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4060   002F16  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4061   002F1A  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4062   002F1E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4063   002F22  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4064   002F26  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4065   002F2A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4066   002F2E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4067   002F32  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4068   002F36  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4069   002F3A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4070   002F3E  0E18               	movlw	24
  4071   002F40  EFA7  F017         	goto	u3490
  4072   002F44                     u3495:
  4073   002F44  90D8               	bcf	status,0,c
  4074   002F46  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4075   002F48  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4076   002F4A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4077   002F4C  3205               	rrcf	??___fpclassifyf^0,f,c
  4078   002F4E                     u3490:
  4079   002F4E  2EE8               	decfsz	wreg,f,c
  4080   002F50  EFA2  F017         	goto	u3495
  4081   002F54  5005               	movf	??___fpclassifyf^0,w,c
  4082   002F56  6E09               	movwf	___fpclassifyf@e^0,c
  4083   002F58  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4084   002F5A  5009               	movf	___fpclassifyf@e^0,w,c
  4085   002F5C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4086   002F5E  A4D8               	btfss	status,2,c
  4087   002F60  EFB4  F017         	goto	u3501
  4088   002F64  EFB6  F017         	goto	u3500
  4089   002F68                     u3501:
  4090   002F68  EFD6  F017         	goto	l3334
  4091   002F6C                     u3500:
  4092   002F6C  90D8               	bcf	status,0,c
  4093   002F6E  340B               	rlcf	___fpclassifyf@u^0,w,c
  4094   002F70  6E05               	movwf	??___fpclassifyf^0,c
  4095   002F72  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4096   002F74  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4097   002F76  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4098   002F78  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4099   002F7A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4100   002F7C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4101   002F7E  5005               	movf	??___fpclassifyf^0,w,c
  4102   002F80  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4103   002F82  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4104   002F84  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4105   002F86  A4D8               	btfss	status,2,c
  4106   002F88  EFC8  F017         	goto	u3511
  4107   002F8C  EFCA  F017         	goto	u3510
  4108   002F90                     u3511:
  4109   002F90  EFD0  F017         	goto	l3330
  4110   002F94                     u3510:
  4111   002F94  0E00               	movlw	0
  4112   002F96  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4113   002F98  0E02               	movlw	2
  4114   002F9A  6E01               	movwf	?___fpclassifyf^0,c
  4115   002F9C  EF05  F018         	goto	l974
  4116   002FA0                     l3330:
  4117   002FA0  0E00               	movlw	0
  4118   002FA2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4119   002FA4  0E03               	movlw	3
  4120   002FA6  6E01               	movwf	?___fpclassifyf^0,c
  4121   002FA8  EF05  F018         	goto	l974
  4122   002FAC                     l3334:
  4123   002FAC  2809               	incf	___fpclassifyf@e^0,w,c
  4124   002FAE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4125   002FB0  A4D8               	btfss	status,2,c
  4126   002FB2  EFDD  F017         	goto	u3521
  4127   002FB6  EFDF  F017         	goto	u3520
  4128   002FBA                     u3521:
  4129   002FBA  EF01  F018         	goto	l3340
  4130   002FBE                     u3520:
  4131   002FBE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4132   002FC2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4133   002FC6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4134   002FCA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4135   002FCE  0E09               	movlw	9
  4136   002FD0                     u3535:
  4137   002FD0  90D8               	bcf	status,0,c
  4138   002FD2  3605               	rlcf	??___fpclassifyf^0,f,c
  4139   002FD4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4140   002FD6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4141   002FD8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4142   002FDA  2EE8               	decfsz	wreg,f,c
  4143   002FDC  EFE8  F017         	goto	u3535
  4144   002FE0  5005               	movf	??___fpclassifyf^0,w,c
  4145   002FE2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4146   002FE4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4147   002FE6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4148   002FE8  B4D8               	btfsc	status,2,c
  4149   002FEA  EFF9  F017         	goto	u3541
  4150   002FEE  EFFC  F017         	goto	u3540
  4151   002FF2                     u3541:
  4152   002FF2  0E01               	movlw	1
  4153   002FF4  EFFD  F017         	goto	u3550
  4154   002FF8                     u3540:
  4155   002FF8  0E00               	movlw	0
  4156   002FFA                     u3550:
  4157   002FFA  6E01               	movwf	?___fpclassifyf^0,c
  4158   002FFC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4159   002FFE  EF05  F018         	goto	l974
  4160   003002                     l3340:
  4161   003002  0E00               	movlw	0
  4162   003004  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4163   003006  0E04               	movlw	4
  4164   003008  6E01               	movwf	?___fpclassifyf^0,c
  4165   00300A                     l974:
  4166   00300A  0012               	return		;funcret
  4167   00300C                     __end_of___fpclassifyf:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function ___fltol *****************
  4171 ;; Defined at:
  4172 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  f1              4    0[COMRAM] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  exp1            1    9[COMRAM] unsigned char 
  4177 ;;  sign1           1    8[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  4    0[COMRAM] long 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4187 ;;      Params:         4       0       0       0       0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0
  4189 ;;      Temps:          4       0       0       0       0       0       0
  4190 ;;      Totals:        10       0       0       0       0       0       0
  4191 ;;Total ram usage:       10 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_efgtoa
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text13
  4201   002D04                     __ptext13:
  4202                           	callstack 0
  4203   002D04                     ___fltol:
  4204                           	callstack 25
  4205   002D04  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4206   002D06  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4207   002D08  6E0A               	movwf	___fltol@exp1^0,c
  4208   002D0A  500A               	movf	___fltol@exp1^0,w,c
  4209   002D0C  A4D8               	btfss	status,2,c
  4210   002D0E  EF8B  F016         	goto	u3371
  4211   002D12  EF8D  F016         	goto	u3370
  4212   002D16                     u3371:
  4213   002D16  EF97  F016         	goto	l3262
  4214   002D1A                     u3370:
  4215   002D1A                     l3258:
  4216   002D1A  0E00               	movlw	0
  4217   002D1C  6E01               	movwf	?___fltol^0,c
  4218   002D1E  0E00               	movlw	0
  4219   002D20  6E02               	movwf	(?___fltol+1)^0,c
  4220   002D22  0E00               	movlw	0
  4221   002D24  6E03               	movwf	(?___fltol+2)^0,c
  4222   002D26  0E00               	movlw	0
  4223   002D28  6E04               	movwf	(?___fltol+3)^0,c
  4224   002D2A  EF04  F017         	goto	l409
  4225   002D2E                     l3262:
  4226   002D2E  C001  F005         	movff	___fltol@f1,??___fltol
  4227   002D32  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4228   002D36  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4229   002D3A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4230   002D3E  0E20               	movlw	32
  4231   002D40  EFA7  F016         	goto	u3380
  4232   002D44                     u3385:
  4233   002D44  90D8               	bcf	status,0,c
  4234   002D46  3208               	rrcf	(??___fltol+3)^0,f,c
  4235   002D48  3207               	rrcf	(??___fltol+2)^0,f,c
  4236   002D4A  3206               	rrcf	(??___fltol+1)^0,f,c
  4237   002D4C  3205               	rrcf	??___fltol^0,f,c
  4238   002D4E                     u3380:
  4239   002D4E  2EE8               	decfsz	wreg,f,c
  4240   002D50  EFA2  F016         	goto	u3385
  4241   002D54  5005               	movf	??___fltol^0,w,c
  4242   002D56  6E09               	movwf	___fltol@sign1^0,c
  4243   002D58  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4244   002D5A  0EFF               	movlw	255
  4245   002D5C  1601               	andwf	___fltol@f1^0,f,c
  4246   002D5E  0EFF               	movlw	255
  4247   002D60  1602               	andwf	(___fltol@f1+1)^0,f,c
  4248   002D62  0EFF               	movlw	255
  4249   002D64  1603               	andwf	(___fltol@f1+2)^0,f,c
  4250   002D66  0E00               	movlw	0
  4251   002D68  1604               	andwf	(___fltol@f1+3)^0,f,c
  4252   002D6A  0E96               	movlw	150
  4253   002D6C  5E0A               	subwf	___fltol@exp1^0,f,c
  4254   002D6E  BE0A               	btfsc	___fltol@exp1^0,7,c
  4255   002D70  EFBE  F016         	goto	u3390
  4256   002D74  EFBC  F016         	goto	u3391
  4257   002D78                     u3391:
  4258   002D78  EFD4  F016         	goto	l3282
  4259   002D7C                     u3390:
  4260   002D7C  500A               	movf	___fltol@exp1^0,w,c
  4261   002D7E  0A80               	xorlw	128
  4262   002D80  0F97               	addlw	151
  4263   002D82  B0D8               	btfsc	status,0,c
  4264   002D84  EFC6  F016         	goto	u3401
  4265   002D88  EFC8  F016         	goto	u3400
  4266   002D8C                     u3401:
  4267   002D8C  EFCA  F016         	goto	l3278
  4268   002D90                     u3400:
  4269   002D90  EF8D  F016         	goto	l3258
  4270   002D94                     l3278:
  4271   002D94  90D8               	bcf	status,0,c
  4272   002D96  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4273   002D98  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4274   002D9A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4275   002D9C  3201               	rrcf	___fltol@f1^0,f,c
  4276   002D9E  3E0A               	incfsz	___fltol@exp1^0,f,c
  4277   002DA0  EFCA  F016         	goto	l3278
  4278   002DA4  EFEC  F016         	goto	l3292
  4279   002DA8                     l3282:
  4280   002DA8  0E1F               	movlw	31
  4281   002DAA  640A               	cpfsgt	___fltol@exp1^0,c
  4282   002DAC  EFDA  F016         	goto	u3411
  4283   002DB0  EFDC  F016         	goto	u3410
  4284   002DB4                     u3411:
  4285   002DB4  EFE4  F016         	goto	l3290
  4286   002DB8                     u3410:
  4287   002DB8  EF8D  F016         	goto	l3258
  4288   002DBC                     l3288:
  4289   002DBC  90D8               	bcf	status,0,c
  4290   002DBE  3601               	rlcf	___fltol@f1^0,f,c
  4291   002DC0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4292   002DC2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4293   002DC4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4294   002DC6  060A               	decf	___fltol@exp1^0,f,c
  4295   002DC8                     l3290:
  4296   002DC8  500A               	movf	___fltol@exp1^0,w,c
  4297   002DCA  A4D8               	btfss	status,2,c
  4298   002DCC  EFEA  F016         	goto	u3421
  4299   002DD0  EFEC  F016         	goto	u3420
  4300   002DD4                     u3421:
  4301   002DD4  EFDE  F016         	goto	l3288
  4302   002DD8                     u3420:
  4303   002DD8                     l3292:
  4304   002DD8  5009               	movf	___fltol@sign1^0,w,c
  4305   002DDA  B4D8               	btfsc	status,2,c
  4306   002DDC  EFF2  F016         	goto	u3431
  4307   002DE0  EFF4  F016         	goto	u3430
  4308   002DE4                     u3431:
  4309   002DE4  EFFC  F016         	goto	l3296
  4310   002DE8                     u3430:
  4311   002DE8  1E04               	comf	(___fltol@f1+3)^0,f,c
  4312   002DEA  1E03               	comf	(___fltol@f1+2)^0,f,c
  4313   002DEC  1E02               	comf	(___fltol@f1+1)^0,f,c
  4314   002DEE  6C01               	negf	___fltol@f1^0,c
  4315   002DF0  0E00               	movlw	0
  4316   002DF2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4317   002DF4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4318   002DF6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4319   002DF8                     l3296:
  4320   002DF8  C001  F001         	movff	___fltol@f1,?___fltol
  4321   002DFC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4322   002E00  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4323   002E04  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4324   002E08                     l409:
  4325   002E08  0012               	return		;funcret
  4326   002E0A                     __end_of___fltol:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function ___flsub *****************
  4330 ;; Defined at:
  4331 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  b               4   39[COMRAM] long 
  4334 ;;  a               4   43[COMRAM] long 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  4   39[COMRAM] long 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4346 ;;      Params:         8       0       0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0
  4349 ;;      Totals:         8       0       0       0       0       0       0
  4350 ;;Total ram usage:        8 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 1
  4353 ;; This function calls:
  4354 ;;		___fladd
  4355 ;; This function is called by:
  4356 ;;		_efgtoa
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text14
  4361   0036A6                     __ptext14:
  4362                           	callstack 0
  4363   0036A6                     ___flsub:
  4364                           	callstack 24
  4365   0036A6  0E00               	movlw	0
  4366   0036A8  1A2C               	xorwf	___flsub@a^0,f,c
  4367   0036AA  0E00               	movlw	0
  4368   0036AC  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4369   0036AE  0E00               	movlw	0
  4370   0036B0  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4371   0036B2  0E80               	movlw	128
  4372   0036B4  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4373   0036B6  C028  F001         	movff	___flsub@b,___fladd@b
  4374   0036BA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4375   0036BE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4376   0036C2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4377   0036C6  C02C  F005         	movff	___flsub@a,___fladd@a
  4378   0036CA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4379   0036CE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4380   0036D2  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4381   0036D6  ECE7  F00A         	call	___fladd	;wreg free
  4382   0036DA  C001  F028         	movff	?___fladd,?___flsub
  4383   0036DE  C002  F029         	movff	?___fladd+1,?___flsub+1
  4384   0036E2  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4385   0036E6  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4386   0036EA  0012               	return		;funcret
  4387   0036EC                     __end_of___flsub:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function ___fladd *****************
  4391 ;; Defined at:
  4392 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  b               4    0[COMRAM] long 
  4395 ;;  a               4    4[COMRAM] long 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  grs             1   15[COMRAM] unsigned char 
  4398 ;;  bexp            1   14[COMRAM] unsigned char 
  4399 ;;  aexp            1   13[COMRAM] unsigned char 
  4400 ;;  signs           1   12[COMRAM] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  4    0[COMRAM] unsigned char 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4410 ;;      Params:         8       0       0       0       0       0       0
  4411 ;;      Locals:         4       0       0       0       0       0       0
  4412 ;;      Temps:          4       0       0       0       0       0       0
  4413 ;;      Totals:        16       0       0       0       0       0       0
  4414 ;;Total ram usage:       16 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		___flsub
  4420 ;;		_efgtoa
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text15
  4425   0015CE                     __ptext15:
  4426                           	callstack 0
  4427   0015CE                     ___fladd:
  4428                           	callstack 24
  4429   0015CE  5004               	movf	(___fladd@b+3)^0,w,c
  4430   0015D0  0B80               	andlw	128
  4431   0015D2  6E0D               	movwf	___fladd@signs^0,c
  4432   0015D4  5004               	movf	(___fladd@b+3)^0,w,c
  4433   0015D6  2404               	addwf	(___fladd@b+3)^0,w,c
  4434   0015D8  6E0F               	movwf	___fladd@bexp^0,c
  4435   0015DA  AE03               	btfss	(___fladd@b+2)^0,7,c
  4436   0015DC  EFF2  F00A         	goto	u2331
  4437   0015E0  EFF4  F00A         	goto	u2330
  4438   0015E4                     u2331:
  4439   0015E4  EFF5  F00A         	goto	l2646
  4440   0015E8                     u2330:
  4441   0015E8  800F               	bsf	___fladd@bexp^0,0,c
  4442   0015EA                     l2646:
  4443   0015EA  500F               	movf	___fladd@bexp^0,w,c
  4444   0015EC  B4D8               	btfsc	status,2,c
  4445   0015EE  EFFB  F00A         	goto	u2341
  4446   0015F2  EFFD  F00A         	goto	u2340
  4447   0015F6                     u2341:
  4448   0015F6  EF12  F00B         	goto	l2656
  4449   0015FA                     u2340:
  4450   0015FA  280F               	incf	___fladd@bexp^0,w,c
  4451   0015FC  A4D8               	btfss	status,2,c
  4452   0015FE  EF03  F00B         	goto	u2351
  4453   001602  EF05  F00B         	goto	u2350
  4454   001606                     u2351:
  4455   001606  EF0D  F00B         	goto	l2652
  4456   00160A                     u2350:
  4457   00160A  0E00               	movlw	0
  4458   00160C  6E01               	movwf	___fladd@b^0,c
  4459   00160E  0E00               	movlw	0
  4460   001610  6E02               	movwf	(___fladd@b+1)^0,c
  4461   001612  0E00               	movlw	0
  4462   001614  6E03               	movwf	(___fladd@b+2)^0,c
  4463   001616  0E00               	movlw	0
  4464   001618  6E04               	movwf	(___fladd@b+3)^0,c
  4465   00161A                     l2652:
  4466   00161A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4467   00161C  0E00               	movlw	0
  4468   00161E  6E04               	movwf	(___fladd@b+3)^0,c
  4469   001620  EF1A  F00B         	goto	l2658
  4470   001624                     l2656:
  4471   001624  0E00               	movlw	0
  4472   001626  6E01               	movwf	___fladd@b^0,c
  4473   001628  0E00               	movlw	0
  4474   00162A  6E02               	movwf	(___fladd@b+1)^0,c
  4475   00162C  0E00               	movlw	0
  4476   00162E  6E03               	movwf	(___fladd@b+2)^0,c
  4477   001630  0E00               	movlw	0
  4478   001632  6E04               	movwf	(___fladd@b+3)^0,c
  4479   001634                     l2658:
  4480   001634  5008               	movf	(___fladd@a+3)^0,w,c
  4481   001636  0B80               	andlw	128
  4482   001638  6E0E               	movwf	___fladd@aexp^0,c
  4483   00163A  500D               	movf	___fladd@signs^0,w,c
  4484   00163C  180E               	xorwf	___fladd@aexp^0,w,c
  4485   00163E  B4D8               	btfsc	status,2,c
  4486   001640  EF24  F00B         	goto	u2361
  4487   001644  EF26  F00B         	goto	u2360
  4488   001648                     u2361:
  4489   001648  EF27  F00B         	goto	l2664
  4490   00164C                     u2360:
  4491   00164C  8C0D               	bsf	___fladd@signs^0,6,c
  4492   00164E                     l2664:
  4493   00164E  5008               	movf	(___fladd@a+3)^0,w,c
  4494   001650  2408               	addwf	(___fladd@a+3)^0,w,c
  4495   001652  6E0E               	movwf	___fladd@aexp^0,c
  4496   001654  AE07               	btfss	(___fladd@a+2)^0,7,c
  4497   001656  EF2F  F00B         	goto	u2371
  4498   00165A  EF31  F00B         	goto	u2370
  4499   00165E                     u2371:
  4500   00165E  EF32  F00B         	goto	l2670
  4501   001662                     u2370:
  4502   001662  800E               	bsf	___fladd@aexp^0,0,c
  4503   001664                     l2670:
  4504   001664  500E               	movf	___fladd@aexp^0,w,c
  4505   001666  B4D8               	btfsc	status,2,c
  4506   001668  EF38  F00B         	goto	u2381
  4507   00166C  EF3A  F00B         	goto	u2380
  4508   001670                     u2381:
  4509   001670  EF4F  F00B         	goto	l2680
  4510   001674                     u2380:
  4511   001674  280E               	incf	___fladd@aexp^0,w,c
  4512   001676  A4D8               	btfss	status,2,c
  4513   001678  EF40  F00B         	goto	u2391
  4514   00167C  EF42  F00B         	goto	u2390
  4515   001680                     u2391:
  4516   001680  EF4A  F00B         	goto	l2676
  4517   001684                     u2390:
  4518   001684  0E00               	movlw	0
  4519   001686  6E05               	movwf	___fladd@a^0,c
  4520   001688  0E00               	movlw	0
  4521   00168A  6E06               	movwf	(___fladd@a+1)^0,c
  4522   00168C  0E00               	movlw	0
  4523   00168E  6E07               	movwf	(___fladd@a+2)^0,c
  4524   001690  0E00               	movlw	0
  4525   001692  6E08               	movwf	(___fladd@a+3)^0,c
  4526   001694                     l2676:
  4527   001694  8E07               	bsf	(___fladd@a+2)^0,7,c
  4528   001696  0E00               	movlw	0
  4529   001698  6E08               	movwf	(___fladd@a+3)^0,c
  4530   00169A  EF57  F00B         	goto	l2682
  4531   00169E                     l2680:
  4532   00169E  0E00               	movlw	0
  4533   0016A0  6E05               	movwf	___fladd@a^0,c
  4534   0016A2  0E00               	movlw	0
  4535   0016A4  6E06               	movwf	(___fladd@a+1)^0,c
  4536   0016A6  0E00               	movlw	0
  4537   0016A8  6E07               	movwf	(___fladd@a+2)^0,c
  4538   0016AA  0E00               	movlw	0
  4539   0016AC  6E08               	movwf	(___fladd@a+3)^0,c
  4540   0016AE                     l2682:
  4541   0016AE  500F               	movf	___fladd@bexp^0,w,c
  4542   0016B0  5C0E               	subwf	___fladd@aexp^0,w,c
  4543   0016B2  B0D8               	btfsc	status,0,c
  4544   0016B4  EF5E  F00B         	goto	u2401
  4545   0016B8  EF60  F00B         	goto	u2400
  4546   0016BC                     u2401:
  4547   0016BC  EF87  F00B         	goto	l2718
  4548   0016C0                     u2400:
  4549   0016C0  AC0D               	btfss	___fladd@signs^0,6,c
  4550   0016C2  EF65  F00B         	goto	u2411
  4551   0016C6  EF67  F00B         	goto	u2410
  4552   0016CA                     u2411:
  4553   0016CA  EF69  F00B         	goto	l2688
  4554   0016CE                     u2410:
  4555   0016CE  0E80               	movlw	128
  4556   0016D0  1A0D               	xorwf	___fladd@signs^0,f,c
  4557   0016D2                     l2688:
  4558   0016D2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4559   0016D6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4560   0016DA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4561   0016DE  C001  F010         	movff	___fladd@b,___fladd@grs
  4562   0016E2  C005  F001         	movff	___fladd@a,___fladd@b
  4563   0016E6  C010  F005         	movff	___fladd@grs,___fladd@a
  4564   0016EA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4565   0016EE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4566   0016F2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4567   0016F6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4568   0016FA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4569   0016FE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4570   001702  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4571   001706  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4572   00170A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4573   00170E                     l2718:
  4574   00170E  0E00               	movlw	0
  4575   001710  6E10               	movwf	___fladd@grs^0,c
  4576   001712  500F               	movf	___fladd@bexp^0,w,c
  4577   001714  C00E  F009         	movff	___fladd@aexp,??___fladd
  4578   001718  6A0A               	clrf	(??___fladd+1)^0,c
  4579   00171A  5E09               	subwf	??___fladd^0,f,c
  4580   00171C  0E00               	movlw	0
  4581   00171E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4582   001720  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4583   001722  EF9C  F00B         	goto	u2421
  4584   001726  500A               	movf	(??___fladd+1)^0,w,c
  4585   001728  E109               	bnz	u2420
  4586   00172A  0E1A               	movlw	26
  4587   00172C  5C09               	subwf	??___fladd^0,w,c
  4588   00172E  A0D8               	btfss	status,0,c
  4589   001730  EF9C  F00B         	goto	u2421
  4590   001734  EF9E  F00B         	goto	u2420
  4591   001738                     u2421:
  4592   001738  EFD5  F00B         	goto	l641
  4593   00173C                     u2420:
  4594   00173C  5001               	movf	___fladd@b^0,w,c
  4595   00173E  1002               	iorwf	(___fladd@b+1)^0,w,c
  4596   001740  1003               	iorwf	(___fladd@b+2)^0,w,c
  4597   001742  1004               	iorwf	(___fladd@b+3)^0,w,c
  4598   001744  A4D8               	btfss	status,2,c
  4599   001746  EFA7  F00B         	goto	u2431
  4600   00174A  EFAA  F00B         	goto	u2430
  4601   00174E                     u2431:
  4602   00174E  0E01               	movlw	1
  4603   001750  EFAB  F00B         	goto	u2440
  4604   001754                     u2430:
  4605   001754  0E00               	movlw	0
  4606   001756                     u2440:
  4607   001756  6E10               	movwf	___fladd@grs^0,c
  4608   001758  0E00               	movlw	0
  4609   00175A  6E01               	movwf	___fladd@b^0,c
  4610   00175C  0E00               	movlw	0
  4611   00175E  6E02               	movwf	(___fladd@b+1)^0,c
  4612   001760  0E00               	movlw	0
  4613   001762  6E03               	movwf	(___fladd@b+2)^0,c
  4614   001764  0E00               	movlw	0
  4615   001766  6E04               	movwf	(___fladd@b+3)^0,c
  4616   001768  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4617   00176C  EFDE  F00B         	goto	l640
  4618   001770                     l642:
  4619   001770  A010               	btfss	___fladd@grs^0,0,c
  4620   001772  EFBD  F00B         	goto	u2451
  4621   001776  EFBF  F00B         	goto	u2450
  4622   00177A                     u2451:
  4623   00177A  EFC5  F00B         	goto	l2730
  4624   00177E                     u2450:
  4625   00177E  90D8               	bcf	status,0,c
  4626   001780  3010               	rrcf	___fladd@grs^0,w,c
  4627   001782  0901               	iorlw	1
  4628   001784  6E10               	movwf	___fladd@grs^0,c
  4629   001786  EFC7  F00B         	goto	l2732
  4630   00178A                     l2730:
  4631   00178A  90D8               	bcf	status,0,c
  4632   00178C  3210               	rrcf	___fladd@grs^0,f,c
  4633   00178E                     l2732:
  4634   00178E  A001               	btfss	___fladd@b^0,0,c
  4635   001790  EFCC  F00B         	goto	u2461
  4636   001794  EFCE  F00B         	goto	u2460
  4637   001798                     u2461:
  4638   001798  EFCF  F00B         	goto	l2736
  4639   00179C                     u2460:
  4640   00179C  8E10               	bsf	___fladd@grs^0,7,c
  4641   00179E                     l2736:
  4642   00179E  3404               	rlcf	(___fladd@b+3)^0,w,c
  4643   0017A0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4644   0017A2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4645   0017A4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4646   0017A6  3201               	rrcf	___fladd@b^0,f,c
  4647   0017A8  2A0F               	incf	___fladd@bexp^0,f,c
  4648   0017AA                     l641:
  4649   0017AA  500E               	movf	___fladd@aexp^0,w,c
  4650   0017AC  5C0F               	subwf	___fladd@bexp^0,w,c
  4651   0017AE  A0D8               	btfss	status,0,c
  4652   0017B0  EFDC  F00B         	goto	u2471
  4653   0017B4  EFDE  F00B         	goto	u2470
  4654   0017B8                     u2471:
  4655   0017B8  EFB8  F00B         	goto	l642
  4656   0017BC                     u2470:
  4657   0017BC                     l640:
  4658   0017BC  BC0D               	btfsc	___fladd@signs^0,6,c
  4659   0017BE  EFE3  F00B         	goto	u2481
  4660   0017C2  EFE5  F00B         	goto	u2480
  4661   0017C6                     u2481:
  4662   0017C6  EF25  F00C         	goto	l2764
  4663   0017CA                     u2480:
  4664   0017CA  500F               	movf	___fladd@bexp^0,w,c
  4665   0017CC  A4D8               	btfss	status,2,c
  4666   0017CE  EFEB  F00B         	goto	u2491
  4667   0017D2  EFED  F00B         	goto	u2490
  4668   0017D6                     u2491:
  4669   0017D6  EFF7  F00B         	goto	l2746
  4670   0017DA                     u2490:
  4671   0017DA  0E00               	movlw	0
  4672   0017DC  6E01               	movwf	?___fladd^0,c
  4673   0017DE  0E00               	movlw	0
  4674   0017E0  6E02               	movwf	(?___fladd+1)^0,c
  4675   0017E2  0E00               	movlw	0
  4676   0017E4  6E03               	movwf	(?___fladd+2)^0,c
  4677   0017E6  0E00               	movlw	0
  4678   0017E8  6E04               	movwf	(?___fladd+3)^0,c
  4679   0017EA  EF46  F00D         	goto	l649
  4680   0017EE                     l2746:
  4681   0017EE  5005               	movf	___fladd@a^0,w,c
  4682   0017F0  2601               	addwf	___fladd@b^0,f,c
  4683   0017F2  5006               	movf	(___fladd@a+1)^0,w,c
  4684   0017F4  2202               	addwfc	(___fladd@b+1)^0,f,c
  4685   0017F6  5007               	movf	(___fladd@a+2)^0,w,c
  4686   0017F8  2203               	addwfc	(___fladd@b+2)^0,f,c
  4687   0017FA  5008               	movf	(___fladd@a+3)^0,w,c
  4688   0017FC  2204               	addwfc	(___fladd@b+3)^0,f,c
  4689   0017FE  A004               	btfss	(___fladd@b+3)^0,0,c
  4690   001800  EF04  F00C         	goto	u2501
  4691   001804  EF06  F00C         	goto	u2500
  4692   001808                     u2501:
  4693   001808  EFB2  F00C         	goto	l2800
  4694   00180C                     u2500:
  4695   00180C  A010               	btfss	___fladd@grs^0,0,c
  4696   00180E  EF0B  F00C         	goto	u2511
  4697   001812  EF0D  F00C         	goto	u2510
  4698   001816                     u2511:
  4699   001816  EF13  F00C         	goto	l2754
  4700   00181A                     u2510:
  4701   00181A  90D8               	bcf	status,0,c
  4702   00181C  3010               	rrcf	___fladd@grs^0,w,c
  4703   00181E  0901               	iorlw	1
  4704   001820  6E10               	movwf	___fladd@grs^0,c
  4705   001822  EF15  F00C         	goto	l2756
  4706   001826                     l2754:
  4707   001826  90D8               	bcf	status,0,c
  4708   001828  3210               	rrcf	___fladd@grs^0,f,c
  4709   00182A                     l2756:
  4710   00182A  A001               	btfss	___fladd@b^0,0,c
  4711   00182C  EF1A  F00C         	goto	u2521
  4712   001830  EF1C  F00C         	goto	u2520
  4713   001834                     u2521:
  4714   001834  EF1D  F00C         	goto	l2760
  4715   001838                     u2520:
  4716   001838  8E10               	bsf	___fladd@grs^0,7,c
  4717   00183A                     l2760:
  4718   00183A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4719   00183C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4720   00183E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4721   001840  3202               	rrcf	(___fladd@b+1)^0,f,c
  4722   001842  3201               	rrcf	___fladd@b^0,f,c
  4723   001844  2A0F               	incf	___fladd@bexp^0,f,c
  4724   001846  EFB2  F00C         	goto	l2800
  4725   00184A                     l2764:
  4726   00184A  5005               	movf	___fladd@a^0,w,c
  4727   00184C  5C01               	subwf	___fladd@b^0,w,c
  4728   00184E  5006               	movf	(___fladd@a+1)^0,w,c
  4729   001850  5802               	subwfb	(___fladd@b+1)^0,w,c
  4730   001852  5007               	movf	(___fladd@a+2)^0,w,c
  4731   001854  5803               	subwfb	(___fladd@b+2)^0,w,c
  4732   001856  5004               	movf	(___fladd@b+3)^0,w,c
  4733   001858  0A80               	xorlw	128
  4734   00185A  6E09               	movwf	??___fladd^0,c
  4735   00185C  5008               	movf	(___fladd@a+3)^0,w,c
  4736   00185E  0A80               	xorlw	128
  4737   001860  5809               	subwfb	??___fladd^0,w,c
  4738   001862  B0D8               	btfsc	status,0,c
  4739   001864  EF36  F00C         	goto	u2531
  4740   001868  EF38  F00C         	goto	u2530
  4741   00186C                     u2531:
  4742   00186C  EF63  F00C         	goto	l2774
  4743   001870                     u2530:
  4744   001870  5001               	movf	___fladd@b^0,w,c
  4745   001872  5C05               	subwf	___fladd@a^0,w,c
  4746   001874  6E09               	movwf	??___fladd^0,c
  4747   001876  5002               	movf	(___fladd@b+1)^0,w,c
  4748   001878  5806               	subwfb	(___fladd@a+1)^0,w,c
  4749   00187A  6E0A               	movwf	(??___fladd+1)^0,c
  4750   00187C  5003               	movf	(___fladd@b+2)^0,w,c
  4751   00187E  5807               	subwfb	(___fladd@a+2)^0,w,c
  4752   001880  6E0B               	movwf	(??___fladd+2)^0,c
  4753   001882  5004               	movf	(___fladd@b+3)^0,w,c
  4754   001884  5808               	subwfb	(___fladd@a+3)^0,w,c
  4755   001886  6E0C               	movwf	(??___fladd+3)^0,c
  4756   001888  0EFF               	movlw	255
  4757   00188A  2409               	addwf	??___fladd^0,w,c
  4758   00188C  6E01               	movwf	___fladd@b^0,c
  4759   00188E  0EFF               	movlw	255
  4760   001890  200A               	addwfc	(??___fladd+1)^0,w,c
  4761   001892  6E02               	movwf	(___fladd@b+1)^0,c
  4762   001894  0EFF               	movlw	255
  4763   001896  200B               	addwfc	(??___fladd+2)^0,w,c
  4764   001898  6E03               	movwf	(___fladd@b+2)^0,c
  4765   00189A  0EFF               	movlw	255
  4766   00189C  200C               	addwfc	(??___fladd+3)^0,w,c
  4767   00189E  6E04               	movwf	(___fladd@b+3)^0,c
  4768   0018A0  0E80               	movlw	128
  4769   0018A2  1A0D               	xorwf	___fladd@signs^0,f,c
  4770   0018A4  6C10               	negf	___fladd@grs^0,c
  4771   0018A6  5010               	movf	___fladd@grs^0,w,c
  4772   0018A8  A4D8               	btfss	status,2,c
  4773   0018AA  EF59  F00C         	goto	u2541
  4774   0018AE  EF5B  F00C         	goto	u2540
  4775   0018B2                     u2541:
  4776   0018B2  EF6B  F00C         	goto	l657
  4777   0018B6                     u2540:
  4778   0018B6  0E01               	movlw	1
  4779   0018B8  2601               	addwf	___fladd@b^0,f,c
  4780   0018BA  0E00               	movlw	0
  4781   0018BC  2202               	addwfc	(___fladd@b+1)^0,f,c
  4782   0018BE  2203               	addwfc	(___fladd@b+2)^0,f,c
  4783   0018C0  2204               	addwfc	(___fladd@b+3)^0,f,c
  4784   0018C2  EF6B  F00C         	goto	l657
  4785   0018C6                     l2774:
  4786   0018C6  5005               	movf	___fladd@a^0,w,c
  4787   0018C8  5E01               	subwf	___fladd@b^0,f,c
  4788   0018CA  5006               	movf	(___fladd@a+1)^0,w,c
  4789   0018CC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4790   0018CE  5007               	movf	(___fladd@a+2)^0,w,c
  4791   0018D0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4792   0018D2  5008               	movf	(___fladd@a+3)^0,w,c
  4793   0018D4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4794   0018D6                     l657:
  4795   0018D6  5001               	movf	___fladd@b^0,w,c
  4796   0018D8  1002               	iorwf	(___fladd@b+1)^0,w,c
  4797   0018DA  1003               	iorwf	(___fladd@b+2)^0,w,c
  4798   0018DC  1004               	iorwf	(___fladd@b+3)^0,w,c
  4799   0018DE  A4D8               	btfss	status,2,c
  4800   0018E0  EF74  F00C         	goto	u2551
  4801   0018E4  EF76  F00C         	goto	u2550
  4802   0018E8                     u2551:
  4803   0018E8  EFAB  F00C         	goto	l2798
  4804   0018EC                     u2550:
  4805   0018EC  5010               	movf	___fladd@grs^0,w,c
  4806   0018EE  A4D8               	btfss	status,2,c
  4807   0018F0  EF7C  F00C         	goto	u2561
  4808   0018F4  EF7E  F00C         	goto	u2560
  4809   0018F8                     u2561:
  4810   0018F8  EFAB  F00C         	goto	l2798
  4811   0018FC                     u2560:
  4812   0018FC  0E00               	movlw	0
  4813   0018FE  6E01               	movwf	?___fladd^0,c
  4814   001900  0E00               	movlw	0
  4815   001902  6E02               	movwf	(?___fladd+1)^0,c
  4816   001904  0E00               	movlw	0
  4817   001906  6E03               	movwf	(?___fladd+2)^0,c
  4818   001908  0E00               	movlw	0
  4819   00190A  6E04               	movwf	(?___fladd+3)^0,c
  4820   00190C  EF46  F00D         	goto	l649
  4821   001910                     l2782:
  4822   001910  90D8               	bcf	status,0,c
  4823   001912  3601               	rlcf	___fladd@b^0,f,c
  4824   001914  3602               	rlcf	(___fladd@b+1)^0,f,c
  4825   001916  3603               	rlcf	(___fladd@b+2)^0,f,c
  4826   001918  3604               	rlcf	(___fladd@b+3)^0,f,c
  4827   00191A  AE10               	btfss	___fladd@grs^0,7,c
  4828   00191C  EF92  F00C         	goto	u2571
  4829   001920  EF94  F00C         	goto	u2570
  4830   001924                     u2571:
  4831   001924  EF95  F00C         	goto	l2788
  4832   001928                     u2570:
  4833   001928  8001               	bsf	___fladd@b^0,0,c
  4834   00192A                     l2788:
  4835   00192A  A010               	btfss	___fladd@grs^0,0,c
  4836   00192C  EF9A  F00C         	goto	u2581
  4837   001930  EF9C  F00C         	goto	u2580
  4838   001934                     u2581:
  4839   001934  EFA0  F00C         	goto	l2792
  4840   001938                     u2580:
  4841   001938  80D8               	bsf	status,0,c
  4842   00193A  3610               	rlcf	___fladd@grs^0,f,c
  4843   00193C  EFA2  F00C         	goto	l2794
  4844   001940                     l2792:
  4845   001940  90D8               	bcf	status,0,c
  4846   001942  3610               	rlcf	___fladd@grs^0,f,c
  4847   001944                     l2794:
  4848   001944  500F               	movf	___fladd@bexp^0,w,c
  4849   001946  B4D8               	btfsc	status,2,c
  4850   001948  EFA8  F00C         	goto	u2591
  4851   00194C  EFAA  F00C         	goto	u2590
  4852   001950                     u2591:
  4853   001950  EFAB  F00C         	goto	l2798
  4854   001954                     u2590:
  4855   001954  060F               	decf	___fladd@bexp^0,f,c
  4856   001956                     l2798:
  4857   001956  AE03               	btfss	(___fladd@b+2)^0,7,c
  4858   001958  EFB0  F00C         	goto	u2601
  4859   00195C  EFB2  F00C         	goto	u2600
  4860   001960                     u2601:
  4861   001960  EF88  F00C         	goto	l2782
  4862   001964                     u2600:
  4863   001964                     l2800:
  4864   001964  0E00               	movlw	0
  4865   001966  6E0E               	movwf	___fladd@aexp^0,c
  4866   001968  AE10               	btfss	___fladd@grs^0,7,c
  4867   00196A  EFB9  F00C         	goto	u2611
  4868   00196E  EFBB  F00C         	goto	u2610
  4869   001972                     u2611:
  4870   001972  EFD3  F00C         	goto	l666
  4871   001976                     u2610:
  4872   001976  C010  F009         	movff	___fladd@grs,??___fladd
  4873   00197A  0E7F               	movlw	127
  4874   00197C  1609               	andwf	??___fladd^0,f,c
  4875   00197E  B4D8               	btfsc	status,2,c
  4876   001980  EFC4  F00C         	goto	u2621
  4877   001984  EFC6  F00C         	goto	u2620
  4878   001988                     u2621:
  4879   001988  EFCA  F00C         	goto	l667
  4880   00198C                     u2620:
  4881   00198C                     l2806:
  4882   00198C  0E01               	movlw	1
  4883   00198E  6E0E               	movwf	___fladd@aexp^0,c
  4884   001990  EFD3  F00C         	goto	l666
  4885   001994                     l667:
  4886   001994  A001               	btfss	___fladd@b^0,0,c
  4887   001996  EFCF  F00C         	goto	u2631
  4888   00199A  EFD1  F00C         	goto	u2630
  4889   00199E                     u2631:
  4890   00199E  EFD3  F00C         	goto	l666
  4891   0019A2                     u2630:
  4892   0019A2  EFC6  F00C         	goto	l2806
  4893   0019A6                     l666:
  4894   0019A6  500E               	movf	___fladd@aexp^0,w,c
  4895   0019A8  B4D8               	btfsc	status,2,c
  4896   0019AA  EFD9  F00C         	goto	u2641
  4897   0019AE  EFDB  F00C         	goto	u2640
  4898   0019B2                     u2641:
  4899   0019B2  EF06  F00D         	goto	l2818
  4900   0019B6                     u2640:
  4901   0019B6  0E01               	movlw	1
  4902   0019B8  2601               	addwf	___fladd@b^0,f,c
  4903   0019BA  0E00               	movlw	0
  4904   0019BC  2202               	addwfc	(___fladd@b+1)^0,f,c
  4905   0019BE  2203               	addwfc	(___fladd@b+2)^0,f,c
  4906   0019C0  2204               	addwfc	(___fladd@b+3)^0,f,c
  4907   0019C2  A004               	btfss	(___fladd@b+3)^0,0,c
  4908   0019C4  EFE6  F00C         	goto	u2651
  4909   0019C8  EFE8  F00C         	goto	u2650
  4910   0019CC                     u2651:
  4911   0019CC  EF06  F00D         	goto	l2818
  4912   0019D0                     u2650:
  4913   0019D0  C001  F009         	movff	___fladd@b,??___fladd
  4914   0019D4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4915   0019D8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4916   0019DC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4917   0019E0  340C               	rlcf	(??___fladd+3)^0,w,c
  4918   0019E2  320C               	rrcf	(??___fladd+3)^0,f,c
  4919   0019E4  320B               	rrcf	(??___fladd+2)^0,f,c
  4920   0019E6  320A               	rrcf	(??___fladd+1)^0,f,c
  4921   0019E8  3209               	rrcf	??___fladd^0,f,c
  4922   0019EA  C009  F001         	movff	??___fladd,___fladd@b
  4923   0019EE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4924   0019F2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4925   0019F6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4926   0019FA  280F               	incf	___fladd@bexp^0,w,c
  4927   0019FC  B4D8               	btfsc	status,2,c
  4928   0019FE  EF03  F00D         	goto	u2661
  4929   001A02  EF05  F00D         	goto	u2660
  4930   001A06                     u2661:
  4931   001A06  EF06  F00D         	goto	l2818
  4932   001A0A                     u2660:
  4933   001A0A  2A0F               	incf	___fladd@bexp^0,f,c
  4934   001A0C                     l2818:
  4935   001A0C  280F               	incf	___fladd@bexp^0,w,c
  4936   001A0E  B4D8               	btfsc	status,2,c
  4937   001A10  EF0C  F00D         	goto	u2671
  4938   001A14  EF0E  F00D         	goto	u2670
  4939   001A18                     u2671:
  4940   001A18  EF16  F00D         	goto	l2822
  4941   001A1C                     u2670:
  4942   001A1C  500F               	movf	___fladd@bexp^0,w,c
  4943   001A1E  A4D8               	btfss	status,2,c
  4944   001A20  EF14  F00D         	goto	u2681
  4945   001A24  EF16  F00D         	goto	u2680
  4946   001A28                     u2681:
  4947   001A28  EF28  F00D         	goto	l2826
  4948   001A2C                     u2680:
  4949   001A2C                     l2822:
  4950   001A2C  0E00               	movlw	0
  4951   001A2E  6E01               	movwf	___fladd@b^0,c
  4952   001A30  0E00               	movlw	0
  4953   001A32  6E02               	movwf	(___fladd@b+1)^0,c
  4954   001A34  0E00               	movlw	0
  4955   001A36  6E03               	movwf	(___fladd@b+2)^0,c
  4956   001A38  0E00               	movlw	0
  4957   001A3A  6E04               	movwf	(___fladd@b+3)^0,c
  4958   001A3C  500F               	movf	___fladd@bexp^0,w,c
  4959   001A3E  A4D8               	btfss	status,2,c
  4960   001A40  EF24  F00D         	goto	u2691
  4961   001A44  EF26  F00D         	goto	u2690
  4962   001A48                     u2691:
  4963   001A48  EF28  F00D         	goto	l2826
  4964   001A4C                     u2690:
  4965   001A4C  0E00               	movlw	0
  4966   001A4E  6E0D               	movwf	___fladd@signs^0,c
  4967   001A50                     l2826:
  4968   001A50  A00F               	btfss	___fladd@bexp^0,0,c
  4969   001A52  EF2D  F00D         	goto	u2701
  4970   001A56  EF2F  F00D         	goto	u2700
  4971   001A5A                     u2701:
  4972   001A5A  EF32  F00D         	goto	l2830
  4973   001A5E                     u2700:
  4974   001A5E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4975   001A60  EF33  F00D         	goto	l2832
  4976   001A64                     l2830:
  4977   001A64  9E03               	bcf	(___fladd@b+2)^0,7,c
  4978   001A66                     l2832:
  4979   001A66  90D8               	bcf	status,0,c
  4980   001A68  300F               	rrcf	___fladd@bexp^0,w,c
  4981   001A6A  6E04               	movwf	(___fladd@b+3)^0,c
  4982   001A6C  AE0D               	btfss	___fladd@signs^0,7,c
  4983   001A6E  EF3B  F00D         	goto	u2711
  4984   001A72  EF3D  F00D         	goto	u2710
  4985   001A76                     u2711:
  4986   001A76  EF3E  F00D         	goto	l2838
  4987   001A7A                     u2710:
  4988   001A7A  8E04               	bsf	(___fladd@b+3)^0,7,c
  4989   001A7C                     l2838:
  4990   001A7C  C001  F001         	movff	___fladd@b,?___fladd
  4991   001A80  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4992   001A84  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4993   001A88  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4994   001A8C                     l649:
  4995   001A8C  0012               	return		;funcret
  4996   001A8E                     __end_of___fladd:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function ___flneg *****************
  5000 ;; Defined at:
  5001 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  f1              4    0[COMRAM] unsigned char 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  4    0[COMRAM] unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5015 ;;      Params:         4       0       0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0
  5018 ;;      Totals:         4       0       0       0       0       0       0
  5019 ;;Total ram usage:        4 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_efgtoa
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text16
  5029   0037F6                     __ptext16:
  5030                           	callstack 0
  5031   0037F6                     ___flneg:
  5032                           	callstack 25
  5033   0037F6  5001               	movf	___flneg@f1^0,w,c
  5034   0037F8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5035   0037FA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5036   0037FC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5037   0037FE  B4D8               	btfsc	status,2,c
  5038   003800  EF04  F01C         	goto	u3361
  5039   003804  EF06  F01C         	goto	u3360
  5040   003808                     u3361:
  5041   003808  EF0E  F01C         	goto	l3252
  5042   00380C                     u3360:
  5043   00380C  0E00               	movlw	0
  5044   00380E  1A01               	xorwf	___flneg@f1^0,f,c
  5045   003810  0E00               	movlw	0
  5046   003812  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5047   003814  0E00               	movlw	0
  5048   003816  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5049   003818  0E80               	movlw	128
  5050   00381A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5051   00381C                     l3252:
  5052   00381C  C001  F001         	movff	___flneg@f1,?___flneg
  5053   003820  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5054   003824  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5055   003828  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5056   00382C  0012               	return		;funcret
  5057   00382E                     __end_of___flneg:
  5058                           	callstack 0
  5059                           
  5060 ;; *************** function ___flge *****************
  5061 ;; Defined at:
  5062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  ff1             4   39[COMRAM] unsigned char 
  5065 ;;  ff2             4   43[COMRAM] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5077 ;;      Params:         8       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0
  5079 ;;      Temps:          4       0       0       0       0       0       0
  5080 ;;      Totals:        12       0       0       0       0       0       0
  5081 ;;Total ram usage:       12 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_efgtoa
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text17
  5091   002E0A                     __ptext17:
  5092                           	callstack 0
  5093   002E0A                     ___flge:
  5094                           	callstack 25
  5095   002E0A  0E00               	movlw	0
  5096   002E0C  1428               	andwf	___flge@ff1^0,w,c
  5097   002E0E  6E30               	movwf	??___flge^0,c
  5098   002E10  0E00               	movlw	0
  5099   002E12  1429               	andwf	(___flge@ff1+1)^0,w,c
  5100   002E14  6E31               	movwf	(??___flge+1)^0,c
  5101   002E16  0E80               	movlw	128
  5102   002E18  142A               	andwf	(___flge@ff1+2)^0,w,c
  5103   002E1A  6E32               	movwf	(??___flge+2)^0,c
  5104   002E1C  0E7F               	movlw	127
  5105   002E1E  142B               	andwf	(___flge@ff1+3)^0,w,c
  5106   002E20  6E33               	movwf	(??___flge+3)^0,c
  5107   002E22  5030               	movf	??___flge^0,w,c
  5108   002E24  1031               	iorwf	(??___flge+1)^0,w,c
  5109   002E26  1032               	iorwf	(??___flge+2)^0,w,c
  5110   002E28  1033               	iorwf	(??___flge+3)^0,w,c
  5111   002E2A  A4D8               	btfss	status,2,c
  5112   002E2C  EF1A  F017         	goto	u3311
  5113   002E30  EF1C  F017         	goto	u3310
  5114   002E34                     u3311:
  5115   002E34  EF24  F017         	goto	l3230
  5116   002E38                     u3310:
  5117   002E38  0E00               	movlw	0
  5118   002E3A  6E28               	movwf	___flge@ff1^0,c
  5119   002E3C  0E00               	movlw	0
  5120   002E3E  6E29               	movwf	(___flge@ff1+1)^0,c
  5121   002E40  0E00               	movlw	0
  5122   002E42  6E2A               	movwf	(___flge@ff1+2)^0,c
  5123   002E44  0E00               	movlw	0
  5124   002E46  6E2B               	movwf	(___flge@ff1+3)^0,c
  5125   002E48                     l3230:
  5126   002E48  0E00               	movlw	0
  5127   002E4A  142C               	andwf	___flge@ff2^0,w,c
  5128   002E4C  6E30               	movwf	??___flge^0,c
  5129   002E4E  0E00               	movlw	0
  5130   002E50  142D               	andwf	(___flge@ff2+1)^0,w,c
  5131   002E52  6E31               	movwf	(??___flge+1)^0,c
  5132   002E54  0E80               	movlw	128
  5133   002E56  142E               	andwf	(___flge@ff2+2)^0,w,c
  5134   002E58  6E32               	movwf	(??___flge+2)^0,c
  5135   002E5A  0E7F               	movlw	127
  5136   002E5C  142F               	andwf	(___flge@ff2+3)^0,w,c
  5137   002E5E  6E33               	movwf	(??___flge+3)^0,c
  5138   002E60  5030               	movf	??___flge^0,w,c
  5139   002E62  1031               	iorwf	(??___flge+1)^0,w,c
  5140   002E64  1032               	iorwf	(??___flge+2)^0,w,c
  5141   002E66  1033               	iorwf	(??___flge+3)^0,w,c
  5142   002E68  A4D8               	btfss	status,2,c
  5143   002E6A  EF39  F017         	goto	u3321
  5144   002E6E  EF3B  F017         	goto	u3320
  5145   002E72                     u3321:
  5146   002E72  EF43  F017         	goto	l3234
  5147   002E76                     u3320:
  5148   002E76  0E00               	movlw	0
  5149   002E78  6E2C               	movwf	___flge@ff2^0,c
  5150   002E7A  0E00               	movlw	0
  5151   002E7C  6E2D               	movwf	(___flge@ff2+1)^0,c
  5152   002E7E  0E00               	movlw	0
  5153   002E80  6E2E               	movwf	(___flge@ff2+2)^0,c
  5154   002E82  0E00               	movlw	0
  5155   002E84  6E2F               	movwf	(___flge@ff2+3)^0,c
  5156   002E86                     l3234:
  5157   002E86  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5158   002E88  EF48  F017         	goto	u3331
  5159   002E8C  EF4A  F017         	goto	u3330
  5160   002E90                     u3331:
  5161   002E90  EF53  F017         	goto	l3238
  5162   002E94                     u3330:
  5163   002E94  6C28               	negf	___flge@ff1^0,c
  5164   002E96  1E29               	comf	(___flge@ff1+1)^0,f,c
  5165   002E98  B0D8               	btfsc	status,0,c
  5166   002E9A  2A29               	incf	(___flge@ff1+1)^0,f,c
  5167   002E9C  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5168   002E9E  B0D8               	btfsc	status,0,c
  5169   002EA0  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5170   002EA2  0E80               	movlw	128
  5171   002EA4  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5172   002EA6                     l3238:
  5173   002EA6  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5174   002EA8  EF58  F017         	goto	u3341
  5175   002EAC  EF5A  F017         	goto	u3340
  5176   002EB0                     u3341:
  5177   002EB0  EF63  F017         	goto	l377
  5178   002EB4                     u3340:
  5179   002EB4  6C2C               	negf	___flge@ff2^0,c
  5180   002EB6  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5181   002EB8  B0D8               	btfsc	status,0,c
  5182   002EBA  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5183   002EBC  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5184   002EBE  B0D8               	btfsc	status,0,c
  5185   002EC0  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5186   002EC2  0E80               	movlw	128
  5187   002EC4  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5188   002EC6                     l377:
  5189   002EC6  0E00               	movlw	0
  5190   002EC8  1A28               	xorwf	___flge@ff1^0,f,c
  5191   002ECA  0E00               	movlw	0
  5192   002ECC  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5193   002ECE  0E00               	movlw	0
  5194   002ED0  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5195   002ED2  0E80               	movlw	128
  5196   002ED4  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5197   002ED6  0E00               	movlw	0
  5198   002ED8  1A2C               	xorwf	___flge@ff2^0,f,c
  5199   002EDA  0E00               	movlw	0
  5200   002EDC  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5201   002EDE  0E00               	movlw	0
  5202   002EE0  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5203   002EE2  0E80               	movlw	128
  5204   002EE4  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5205   002EE6  502C               	movf	___flge@ff2^0,w,c
  5206   002EE8  5C28               	subwf	___flge@ff1^0,w,c
  5207   002EEA  502D               	movf	(___flge@ff2+1)^0,w,c
  5208   002EEC  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5209   002EEE  502E               	movf	(___flge@ff2+2)^0,w,c
  5210   002EF0  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5211   002EF2  502F               	movf	(___flge@ff2+3)^0,w,c
  5212   002EF4  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5213   002EF6  B0D8               	btfsc	status,0,c
  5214   002EF8  EF80  F017         	goto	u3351
  5215   002EFC  EF82  F017         	goto	u3350
  5216   002F00                     u3351:
  5217   002F00  EF85  F017         	goto	l3244
  5218   002F04                     u3350:
  5219   002F04  90D8               	bcf	status,0,c
  5220   002F06  EF86  F017         	goto	l382
  5221   002F0A                     l3244:
  5222   002F0A  80D8               	bsf	status,0,c
  5223   002F0C                     l382:
  5224   002F0C  0012               	return		;funcret
  5225   002F0E                     __end_of___flge:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function ___fleq *****************
  5229 ;; Defined at:
  5230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  ff1             4    0[COMRAM] unsigned char 
  5233 ;;  ff2             4    4[COMRAM] unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5245 ;;      Params:         8       0       0       0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0
  5247 ;;      Temps:          4       0       0       0       0       0       0
  5248 ;;      Totals:        12       0       0       0       0       0       0
  5249 ;;Total ram usage:       12 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_efgtoa
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text18
  5259   0031BA                     __ptext18:
  5260                           	callstack 0
  5261   0031BA                     ___fleq:
  5262                           	callstack 25
  5263   0031BA  0E00               	movlw	0
  5264   0031BC  1401               	andwf	___fleq@ff1^0,w,c
  5265   0031BE  6E09               	movwf	??___fleq^0,c
  5266   0031C0  0E00               	movlw	0
  5267   0031C2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5268   0031C4  6E0A               	movwf	(??___fleq+1)^0,c
  5269   0031C6  0E80               	movlw	128
  5270   0031C8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5271   0031CA  6E0B               	movwf	(??___fleq+2)^0,c
  5272   0031CC  0E7F               	movlw	127
  5273   0031CE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5274   0031D0  6E0C               	movwf	(??___fleq+3)^0,c
  5275   0031D2  5009               	movf	??___fleq^0,w,c
  5276   0031D4  100A               	iorwf	(??___fleq+1)^0,w,c
  5277   0031D6  100B               	iorwf	(??___fleq+2)^0,w,c
  5278   0031D8  100C               	iorwf	(??___fleq+3)^0,w,c
  5279   0031DA  A4D8               	btfss	status,2,c
  5280   0031DC  EFF2  F018         	goto	u3281
  5281   0031E0  EFF4  F018         	goto	u3280
  5282   0031E4                     u3281:
  5283   0031E4  EFFC  F018         	goto	l3214
  5284   0031E8                     u3280:
  5285   0031E8  0E00               	movlw	0
  5286   0031EA  6E01               	movwf	___fleq@ff1^0,c
  5287   0031EC  0E00               	movlw	0
  5288   0031EE  6E02               	movwf	(___fleq@ff1+1)^0,c
  5289   0031F0  0E00               	movlw	0
  5290   0031F2  6E03               	movwf	(___fleq@ff1+2)^0,c
  5291   0031F4  0E00               	movlw	0
  5292   0031F6  6E04               	movwf	(___fleq@ff1+3)^0,c
  5293   0031F8                     l3214:
  5294   0031F8  0E00               	movlw	0
  5295   0031FA  1405               	andwf	___fleq@ff2^0,w,c
  5296   0031FC  6E09               	movwf	??___fleq^0,c
  5297   0031FE  0E00               	movlw	0
  5298   003200  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5299   003202  6E0A               	movwf	(??___fleq+1)^0,c
  5300   003204  0E80               	movlw	128
  5301   003206  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5302   003208  6E0B               	movwf	(??___fleq+2)^0,c
  5303   00320A  0E7F               	movlw	127
  5304   00320C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5305   00320E  6E0C               	movwf	(??___fleq+3)^0,c
  5306   003210  5009               	movf	??___fleq^0,w,c
  5307   003212  100A               	iorwf	(??___fleq+1)^0,w,c
  5308   003214  100B               	iorwf	(??___fleq+2)^0,w,c
  5309   003216  100C               	iorwf	(??___fleq+3)^0,w,c
  5310   003218  A4D8               	btfss	status,2,c
  5311   00321A  EF11  F019         	goto	u3291
  5312   00321E  EF13  F019         	goto	u3290
  5313   003222                     u3291:
  5314   003222  EF1B  F019         	goto	l3218
  5315   003226                     u3290:
  5316   003226  0E00               	movlw	0
  5317   003228  6E05               	movwf	___fleq@ff2^0,c
  5318   00322A  0E00               	movlw	0
  5319   00322C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5320   00322E  0E00               	movlw	0
  5321   003230  6E07               	movwf	(___fleq@ff2+2)^0,c
  5322   003232  0E00               	movlw	0
  5323   003234  6E08               	movwf	(___fleq@ff2+3)^0,c
  5324   003236                     l3218:
  5325   003236  5005               	movf	___fleq@ff2^0,w,c
  5326   003238  1801               	xorwf	___fleq@ff1^0,w,c
  5327   00323A  E10F               	bnz	u3300
  5328   00323C  5006               	movf	(___fleq@ff2+1)^0,w,c
  5329   00323E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5330   003240  E10C               	bnz	u3300
  5331   003242  5007               	movf	(___fleq@ff2+2)^0,w,c
  5332   003244  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5333   003246  E109               	bnz	u3300
  5334   003248  5008               	movf	(___fleq@ff2+3)^0,w,c
  5335   00324A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5336   00324C  B4D8               	btfsc	status,2,c
  5337   00324E  EF2B  F019         	goto	u3301
  5338   003252  EF2D  F019         	goto	u3300
  5339   003256                     u3301:
  5340   003256  EF30  F019         	goto	l3222
  5341   00325A                     u3300:
  5342   00325A  90D8               	bcf	status,0,c
  5343   00325C  EF31  F019         	goto	l371
  5344   003260                     l3222:
  5345   003260  80D8               	bsf	status,0,c
  5346   003262                     l371:
  5347   003262  0012               	return		;funcret
  5348   003264                     __end_of___fleq:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function ___fldiv *****************
  5352 ;; Defined at:
  5353 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  b               4    0[COMRAM] unsigned char 
  5356 ;;  a               4    4[COMRAM] unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  grs             4   19[COMRAM] unsigned long 
  5359 ;;  rem             4   12[COMRAM] unsigned long 
  5360 ;;  new_exp         2   17[COMRAM] short 
  5361 ;;  aexp            1   24[COMRAM] unsigned char 
  5362 ;;  bexp            1   23[COMRAM] unsigned char 
  5363 ;;  sign            1   16[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  4    0[COMRAM] unsigned char 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         8       0       0       0       0       0       0
  5374 ;;      Locals:        13       0       0       0       0       0       0
  5375 ;;      Temps:          4       0       0       0       0       0       0
  5376 ;;      Totals:        25       0       0       0       0       0       0
  5377 ;;Total ram usage:       25 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_efgtoa
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text19
  5387   001EB8                     __ptext19:
  5388                           	callstack 0
  5389   001EB8                     ___fldiv:
  5390                           	callstack 25
  5391   001EB8  5004               	movf	(___fldiv@b+3)^0,w,c
  5392   001EBA  0B80               	andlw	128
  5393   001EBC  6E11               	movwf	___fldiv@sign^0,c
  5394   001EBE  5004               	movf	(___fldiv@b+3)^0,w,c
  5395   001EC0  2404               	addwf	(___fldiv@b+3)^0,w,c
  5396   001EC2  6E18               	movwf	___fldiv@bexp^0,c
  5397   001EC4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5398   001EC6  EF67  F00F         	goto	u2861
  5399   001ECA  EF69  F00F         	goto	u2860
  5400   001ECE                     u2861:
  5401   001ECE  EF6A  F00F         	goto	l2942
  5402   001ED2                     u2860:
  5403   001ED2  8018               	bsf	___fldiv@bexp^0,0,c
  5404   001ED4                     l2942:
  5405   001ED4  5018               	movf	___fldiv@bexp^0,w,c
  5406   001ED6  B4D8               	btfsc	status,2,c
  5407   001ED8  EF70  F00F         	goto	u2871
  5408   001EDC  EF72  F00F         	goto	u2870
  5409   001EE0                     u2871:
  5410   001EE0  EF87  F00F         	goto	l2952
  5411   001EE4                     u2870:
  5412   001EE4  2818               	incf	___fldiv@bexp^0,w,c
  5413   001EE6  A4D8               	btfss	status,2,c
  5414   001EE8  EF78  F00F         	goto	u2881
  5415   001EEC  EF7A  F00F         	goto	u2880
  5416   001EF0                     u2881:
  5417   001EF0  EF82  F00F         	goto	l2948
  5418   001EF4                     u2880:
  5419   001EF4  0E00               	movlw	0
  5420   001EF6  6E01               	movwf	___fldiv@b^0,c
  5421   001EF8  0E00               	movlw	0
  5422   001EFA  6E02               	movwf	(___fldiv@b+1)^0,c
  5423   001EFC  0E00               	movlw	0
  5424   001EFE  6E03               	movwf	(___fldiv@b+2)^0,c
  5425   001F00  0E00               	movlw	0
  5426   001F02  6E04               	movwf	(___fldiv@b+3)^0,c
  5427   001F04                     l2948:
  5428   001F04  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5429   001F06  0E00               	movlw	0
  5430   001F08  6E04               	movwf	(___fldiv@b+3)^0,c
  5431   001F0A  EF8F  F00F         	goto	l2954
  5432   001F0E                     l2952:
  5433   001F0E  0E00               	movlw	0
  5434   001F10  6E01               	movwf	___fldiv@b^0,c
  5435   001F12  0E00               	movlw	0
  5436   001F14  6E02               	movwf	(___fldiv@b+1)^0,c
  5437   001F16  0E00               	movlw	0
  5438   001F18  6E03               	movwf	(___fldiv@b+2)^0,c
  5439   001F1A  0E00               	movlw	0
  5440   001F1C  6E04               	movwf	(___fldiv@b+3)^0,c
  5441   001F1E                     l2954:
  5442   001F1E  5008               	movf	(___fldiv@a+3)^0,w,c
  5443   001F20  0B80               	andlw	128
  5444   001F22  1A11               	xorwf	___fldiv@sign^0,f,c
  5445   001F24  5008               	movf	(___fldiv@a+3)^0,w,c
  5446   001F26  2408               	addwf	(___fldiv@a+3)^0,w,c
  5447   001F28  6E19               	movwf	___fldiv@aexp^0,c
  5448   001F2A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5449   001F2C  EF9A  F00F         	goto	u2891
  5450   001F30  EF9C  F00F         	goto	u2890
  5451   001F34                     u2891:
  5452   001F34  EF9D  F00F         	goto	l2962
  5453   001F38                     u2890:
  5454   001F38  8019               	bsf	___fldiv@aexp^0,0,c
  5455   001F3A                     l2962:
  5456   001F3A  5019               	movf	___fldiv@aexp^0,w,c
  5457   001F3C  B4D8               	btfsc	status,2,c
  5458   001F3E  EFA3  F00F         	goto	u2901
  5459   001F42  EFA5  F00F         	goto	u2900
  5460   001F46                     u2901:
  5461   001F46  EFBA  F00F         	goto	l2972
  5462   001F4A                     u2900:
  5463   001F4A  2819               	incf	___fldiv@aexp^0,w,c
  5464   001F4C  A4D8               	btfss	status,2,c
  5465   001F4E  EFAB  F00F         	goto	u2911
  5466   001F52  EFAD  F00F         	goto	u2910
  5467   001F56                     u2911:
  5468   001F56  EFB5  F00F         	goto	l2968
  5469   001F5A                     u2910:
  5470   001F5A  0E00               	movlw	0
  5471   001F5C  6E05               	movwf	___fldiv@a^0,c
  5472   001F5E  0E00               	movlw	0
  5473   001F60  6E06               	movwf	(___fldiv@a+1)^0,c
  5474   001F62  0E00               	movlw	0
  5475   001F64  6E07               	movwf	(___fldiv@a+2)^0,c
  5476   001F66  0E00               	movlw	0
  5477   001F68  6E08               	movwf	(___fldiv@a+3)^0,c
  5478   001F6A                     l2968:
  5479   001F6A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5480   001F6C  0E00               	movlw	0
  5481   001F6E  6E08               	movwf	(___fldiv@a+3)^0,c
  5482   001F70  EFC2  F00F         	goto	l2974
  5483   001F74                     l2972:
  5484   001F74  0E00               	movlw	0
  5485   001F76  6E05               	movwf	___fldiv@a^0,c
  5486   001F78  0E00               	movlw	0
  5487   001F7A  6E06               	movwf	(___fldiv@a+1)^0,c
  5488   001F7C  0E00               	movlw	0
  5489   001F7E  6E07               	movwf	(___fldiv@a+2)^0,c
  5490   001F80  0E00               	movlw	0
  5491   001F82  6E08               	movwf	(___fldiv@a+3)^0,c
  5492   001F84                     l2974:
  5493   001F84  5005               	movf	___fldiv@a^0,w,c
  5494   001F86  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5495   001F88  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5496   001F8A  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5497   001F8C  A4D8               	btfss	status,2,c
  5498   001F8E  EFCB  F00F         	goto	u2921
  5499   001F92  EFCD  F00F         	goto	u2920
  5500   001F96                     u2921:
  5501   001F96  EFE5  F00F         	goto	l2986
  5502   001F9A                     u2920:
  5503   001F9A  0E00               	movlw	0
  5504   001F9C  6E01               	movwf	___fldiv@b^0,c
  5505   001F9E  0E00               	movlw	0
  5506   001FA0  6E02               	movwf	(___fldiv@b+1)^0,c
  5507   001FA2  0E00               	movlw	0
  5508   001FA4  6E03               	movwf	(___fldiv@b+2)^0,c
  5509   001FA6  0E00               	movlw	0
  5510   001FA8  6E04               	movwf	(___fldiv@b+3)^0,c
  5511   001FAA  0E80               	movlw	128
  5512   001FAC  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5513   001FAE  0E7F               	movlw	127
  5514   001FB0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5515   001FB2                     l2980:
  5516   001FB2  5011               	movf	___fldiv@sign^0,w,c
  5517   001FB4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5518   001FB6  C001  F001         	movff	___fldiv@b,?___fldiv
  5519   001FBA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5520   001FBE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5521   001FC2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5522   001FC6  EF28  F011         	goto	l694
  5523   001FCA                     l2986:
  5524   001FCA  5018               	movf	___fldiv@bexp^0,w,c
  5525   001FCC  A4D8               	btfss	status,2,c
  5526   001FCE  EFEB  F00F         	goto	u2931
  5527   001FD2  EFED  F00F         	goto	u2930
  5528   001FD6                     u2931:
  5529   001FD6  EFF7  F00F         	goto	l2994
  5530   001FDA                     u2930:
  5531   001FDA  0E00               	movlw	0
  5532   001FDC  6E01               	movwf	?___fldiv^0,c
  5533   001FDE  0E00               	movlw	0
  5534   001FE0  6E02               	movwf	(?___fldiv+1)^0,c
  5535   001FE2  0E00               	movlw	0
  5536   001FE4  6E03               	movwf	(?___fldiv+2)^0,c
  5537   001FE6  0E00               	movlw	0
  5538   001FE8  6E04               	movwf	(?___fldiv+3)^0,c
  5539   001FEA  EF28  F011         	goto	l694
  5540   001FEE                     l2994:
  5541   001FEE  5019               	movf	___fldiv@aexp^0,w,c
  5542   001FF0  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5543   001FF4  6A0A               	clrf	(??___fldiv+1)^0,c
  5544   001FF6  5E09               	subwf	??___fldiv^0,f,c
  5545   001FF8  0E00               	movlw	0
  5546   001FFA  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5547   001FFC  0E7F               	movlw	127
  5548   001FFE  2409               	addwf	??___fldiv^0,w,c
  5549   002000  6E12               	movwf	___fldiv@new_exp^0,c
  5550   002002  0E00               	movlw	0
  5551   002004  200A               	addwfc	(??___fldiv+1)^0,w,c
  5552   002006  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5553   002008  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5554   00200C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5555   002010  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5556   002014  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5557   002018  0E00               	movlw	0
  5558   00201A  6E01               	movwf	___fldiv@b^0,c
  5559   00201C  0E00               	movlw	0
  5560   00201E  6E02               	movwf	(___fldiv@b+1)^0,c
  5561   002020  0E00               	movlw	0
  5562   002022  6E03               	movwf	(___fldiv@b+2)^0,c
  5563   002024  0E00               	movlw	0
  5564   002026  6E04               	movwf	(___fldiv@b+3)^0,c
  5565   002028  0E00               	movlw	0
  5566   00202A  6E14               	movwf	___fldiv@grs^0,c
  5567   00202C  0E00               	movlw	0
  5568   00202E  6E15               	movwf	(___fldiv@grs+1)^0,c
  5569   002030  0E00               	movlw	0
  5570   002032  6E16               	movwf	(___fldiv@grs+2)^0,c
  5571   002034  0E00               	movlw	0
  5572   002036  6E17               	movwf	(___fldiv@grs+3)^0,c
  5573   002038  0E00               	movlw	0
  5574   00203A  6E19               	movwf	___fldiv@aexp^0,c
  5575   00203C  EF58  F010         	goto	l696
  5576   002040                     l3004:
  5577   002040  5019               	movf	___fldiv@aexp^0,w,c
  5578   002042  B4D8               	btfsc	status,2,c
  5579   002044  EF26  F010         	goto	u2941
  5580   002048  EF28  F010         	goto	u2940
  5581   00204C                     u2941:
  5582   00204C  EF3F  F010         	goto	l3012
  5583   002050                     u2940:
  5584   002050  90D8               	bcf	status,0,c
  5585   002052  360D               	rlcf	___fldiv@rem^0,f,c
  5586   002054  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5587   002056  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5588   002058  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5589   00205A  90D8               	bcf	status,0,c
  5590   00205C  3601               	rlcf	___fldiv@b^0,f,c
  5591   00205E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5592   002060  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5593   002062  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5594   002064  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5595   002066  EF37  F010         	goto	u2951
  5596   00206A  EF39  F010         	goto	u2950
  5597   00206E                     u2951:
  5598   00206E  EF3A  F010         	goto	l699
  5599   002072                     u2950:
  5600   002072  8001               	bsf	___fldiv@b^0,0,c
  5601   002074                     l699:
  5602   002074  90D8               	bcf	status,0,c
  5603   002076  3614               	rlcf	___fldiv@grs^0,f,c
  5604   002078  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5605   00207A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5606   00207C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5607   00207E                     l3012:
  5608   00207E  5005               	movf	___fldiv@a^0,w,c
  5609   002080  5C0D               	subwf	___fldiv@rem^0,w,c
  5610   002082  5006               	movf	(___fldiv@a+1)^0,w,c
  5611   002084  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5612   002086  5007               	movf	(___fldiv@a+2)^0,w,c
  5613   002088  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5614   00208A  5008               	movf	(___fldiv@a+3)^0,w,c
  5615   00208C  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5616   00208E  A0D8               	btfss	status,0,c
  5617   002090  EF4C  F010         	goto	u2961
  5618   002094  EF4E  F010         	goto	u2960
  5619   002098                     u2961:
  5620   002098  EF57  F010         	goto	l3018
  5621   00209C                     u2960:
  5622   00209C  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5623   00209E  5005               	movf	___fldiv@a^0,w,c
  5624   0020A0  5E0D               	subwf	___fldiv@rem^0,f,c
  5625   0020A2  5006               	movf	(___fldiv@a+1)^0,w,c
  5626   0020A4  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  5627   0020A6  5007               	movf	(___fldiv@a+2)^0,w,c
  5628   0020A8  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  5629   0020AA  5008               	movf	(___fldiv@a+3)^0,w,c
  5630   0020AC  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  5631   0020AE                     l3018:
  5632   0020AE  2A19               	incf	___fldiv@aexp^0,f,c
  5633   0020B0                     l696:
  5634   0020B0  0E19               	movlw	25
  5635   0020B2  6419               	cpfsgt	___fldiv@aexp^0,c
  5636   0020B4  EF5E  F010         	goto	u2971
  5637   0020B8  EF60  F010         	goto	u2970
  5638   0020BC                     u2971:
  5639   0020BC  EF20  F010         	goto	l3004
  5640   0020C0                     u2970:
  5641   0020C0  500D               	movf	___fldiv@rem^0,w,c
  5642   0020C2  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  5643   0020C4  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  5644   0020C6  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  5645   0020C8  B4D8               	btfsc	status,2,c
  5646   0020CA  EF69  F010         	goto	u2981
  5647   0020CE  EF6B  F010         	goto	u2980
  5648   0020D2                     u2981:
  5649   0020D2  EF83  F010         	goto	l3030
  5650   0020D6                     u2980:
  5651   0020D6  8014               	bsf	___fldiv@grs^0,0,c
  5652   0020D8  EF83  F010         	goto	l3030
  5653   0020DC                     l3024:
  5654   0020DC  90D8               	bcf	status,0,c
  5655   0020DE  3601               	rlcf	___fldiv@b^0,f,c
  5656   0020E0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5657   0020E2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5658   0020E4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5659   0020E6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5660   0020E8  EF78  F010         	goto	u2991
  5661   0020EC  EF7A  F010         	goto	u2990
  5662   0020F0                     u2991:
  5663   0020F0  EF7B  F010         	goto	l705
  5664   0020F4                     u2990:
  5665   0020F4  8001               	bsf	___fldiv@b^0,0,c
  5666   0020F6                     l705:
  5667   0020F6  90D8               	bcf	status,0,c
  5668   0020F8  3614               	rlcf	___fldiv@grs^0,f,c
  5669   0020FA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5670   0020FC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5671   0020FE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5672   002100  0612               	decf	___fldiv@new_exp^0,f,c
  5673   002102  A0D8               	btfss	status,0,c
  5674   002104  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  5675   002106                     l3030:
  5676   002106  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5677   002108  EF88  F010         	goto	u3001
  5678   00210C  EF8A  F010         	goto	u3000
  5679   002110                     u3001:
  5680   002110  EF6E  F010         	goto	l3024
  5681   002114                     u3000:
  5682   002114  0E00               	movlw	0
  5683   002116  6E19               	movwf	___fldiv@aexp^0,c
  5684   002118  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5685   00211A  EF91  F010         	goto	u3011
  5686   00211E  EF93  F010         	goto	u3010
  5687   002122                     u3011:
  5688   002122  EFB7  F010         	goto	l707
  5689   002126                     u3010:
  5690   002126  0EFF               	movlw	255
  5691   002128  1414               	andwf	___fldiv@grs^0,w,c
  5692   00212A  6E09               	movwf	??___fldiv^0,c
  5693   00212C  0EFF               	movlw	255
  5694   00212E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  5695   002130  6E0A               	movwf	(??___fldiv+1)^0,c
  5696   002132  0EFF               	movlw	255
  5697   002134  1416               	andwf	(___fldiv@grs+2)^0,w,c
  5698   002136  6E0B               	movwf	(??___fldiv+2)^0,c
  5699   002138  0E7F               	movlw	127
  5700   00213A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  5701   00213C  6E0C               	movwf	(??___fldiv+3)^0,c
  5702   00213E  5009               	movf	??___fldiv^0,w,c
  5703   002140  100A               	iorwf	(??___fldiv+1)^0,w,c
  5704   002142  100B               	iorwf	(??___fldiv+2)^0,w,c
  5705   002144  100C               	iorwf	(??___fldiv+3)^0,w,c
  5706   002146  B4D8               	btfsc	status,2,c
  5707   002148  EFA8  F010         	goto	u3021
  5708   00214C  EFAA  F010         	goto	u3020
  5709   002150                     u3021:
  5710   002150  EFAE  F010         	goto	l708
  5711   002154                     u3020:
  5712   002154                     l3038:
  5713   002154  0E01               	movlw	1
  5714   002156  6E19               	movwf	___fldiv@aexp^0,c
  5715   002158  EFB7  F010         	goto	l707
  5716   00215C                     l708:
  5717   00215C  A001               	btfss	___fldiv@b^0,0,c
  5718   00215E  EFB3  F010         	goto	u3031
  5719   002162  EFB5  F010         	goto	u3030
  5720   002166                     u3031:
  5721   002166  EFB7  F010         	goto	l707
  5722   00216A                     u3030:
  5723   00216A  EFAA  F010         	goto	l3038
  5724   00216E                     l707:
  5725   00216E  5019               	movf	___fldiv@aexp^0,w,c
  5726   002170  B4D8               	btfsc	status,2,c
  5727   002172  EFBD  F010         	goto	u3041
  5728   002176  EFBF  F010         	goto	u3040
  5729   00217A                     u3041:
  5730   00217A  EFE3  F010         	goto	l3050
  5731   00217E                     u3040:
  5732   00217E  0E01               	movlw	1
  5733   002180  2601               	addwf	___fldiv@b^0,f,c
  5734   002182  0E00               	movlw	0
  5735   002184  2202               	addwfc	(___fldiv@b+1)^0,f,c
  5736   002186  2203               	addwfc	(___fldiv@b+2)^0,f,c
  5737   002188  2204               	addwfc	(___fldiv@b+3)^0,f,c
  5738   00218A  A004               	btfss	(___fldiv@b+3)^0,0,c
  5739   00218C  EFCA  F010         	goto	u3051
  5740   002190  EFCC  F010         	goto	u3050
  5741   002194                     u3051:
  5742   002194  EFE3  F010         	goto	l3050
  5743   002198                     u3050:
  5744   002198  C001  F009         	movff	___fldiv@b,??___fldiv
  5745   00219C  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  5746   0021A0  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  5747   0021A4  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  5748   0021A8  340C               	rlcf	(??___fldiv+3)^0,w,c
  5749   0021AA  320C               	rrcf	(??___fldiv+3)^0,f,c
  5750   0021AC  320B               	rrcf	(??___fldiv+2)^0,f,c
  5751   0021AE  320A               	rrcf	(??___fldiv+1)^0,f,c
  5752   0021B0  3209               	rrcf	??___fldiv^0,f,c
  5753   0021B2  C009  F001         	movff	??___fldiv,___fldiv@b
  5754   0021B6  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  5755   0021BA  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  5756   0021BE  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  5757   0021C2  4A12               	infsnz	___fldiv@new_exp^0,f,c
  5758   0021C4  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  5759   0021C6                     l3050:
  5760   0021C6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5761   0021C8  EFEE  F010         	goto	u3061
  5762   0021CC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5763   0021CE  E108               	bnz	u3060
  5764   0021D0  2812               	incf	___fldiv@new_exp^0,w,c
  5765   0021D2  A0D8               	btfss	status,0,c
  5766   0021D4  EFEE  F010         	goto	u3061
  5767   0021D8  EFF0  F010         	goto	u3060
  5768   0021DC                     u3061:
  5769   0021DC  EFFB  F010         	goto	l3054
  5770   0021E0                     u3060:
  5771   0021E0  0E00               	movlw	0
  5772   0021E2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5773   0021E4  6812               	setf	___fldiv@new_exp^0,c
  5774   0021E6  0E00               	movlw	0
  5775   0021E8  6E01               	movwf	___fldiv@b^0,c
  5776   0021EA  0E00               	movlw	0
  5777   0021EC  6E02               	movwf	(___fldiv@b+1)^0,c
  5778   0021EE  0E00               	movlw	0
  5779   0021F0  6E03               	movwf	(___fldiv@b+2)^0,c
  5780   0021F2  0E00               	movlw	0
  5781   0021F4  6E04               	movwf	(___fldiv@b+3)^0,c
  5782   0021F6                     l3054:
  5783   0021F6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5784   0021F8  EF08  F011         	goto	u3070
  5785   0021FC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5786   0021FE  E106               	bnz	u3071
  5787   002200  0412               	decf	___fldiv@new_exp^0,w,c
  5788   002202  B0D8               	btfsc	status,0,c
  5789   002204  EF06  F011         	goto	u3071
  5790   002208  EF08  F011         	goto	u3070
  5791   00220C                     u3071:
  5792   00220C  EF16  F011         	goto	l3058
  5793   002210                     u3070:
  5794   002210  0E00               	movlw	0
  5795   002212  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5796   002214  0E00               	movlw	0
  5797   002216  6E12               	movwf	___fldiv@new_exp^0,c
  5798   002218  0E00               	movlw	0
  5799   00221A  6E01               	movwf	___fldiv@b^0,c
  5800   00221C  0E00               	movlw	0
  5801   00221E  6E02               	movwf	(___fldiv@b+1)^0,c
  5802   002220  0E00               	movlw	0
  5803   002222  6E03               	movwf	(___fldiv@b+2)^0,c
  5804   002224  0E00               	movlw	0
  5805   002226  6E04               	movwf	(___fldiv@b+3)^0,c
  5806   002228  0E00               	movlw	0
  5807   00222A  6E11               	movwf	___fldiv@sign^0,c
  5808   00222C                     l3058:
  5809   00222C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  5810   002230  A018               	btfss	___fldiv@bexp^0,0,c
  5811   002232  EF1D  F011         	goto	u3081
  5812   002236  EF1F  F011         	goto	u3080
  5813   00223A                     u3081:
  5814   00223A  EF22  F011         	goto	l3064
  5815   00223E                     u3080:
  5816   00223E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5817   002240  EF23  F011         	goto	l3066
  5818   002244                     l3064:
  5819   002244  9E03               	bcf	(___fldiv@b+2)^0,7,c
  5820   002246                     l3066:
  5821   002246  90D8               	bcf	status,0,c
  5822   002248  3018               	rrcf	___fldiv@bexp^0,w,c
  5823   00224A  6E04               	movwf	(___fldiv@b+3)^0,c
  5824   00224C  EFD9  F00F         	goto	l2980
  5825   002250                     l694:
  5826   002250  0012               	return		;funcret
  5827   002252                     __end_of___fldiv:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _dtoa *****************
  5831 ;; Defined at:
  5832 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5835 ;;		 -> sprintf@f(11), 
  5836 ;;  d               8   29[COMRAM] long long 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  n               8   51[COMRAM] long long 
  5839 ;;  i               2   59[COMRAM] int 
  5840 ;;  w               2   49[COMRAM] int 
  5841 ;;  p               2   47[COMRAM] int 
  5842 ;;  s               1   61[COMRAM] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5852 ;;      Params:        10       0       0       0       0       0       0
  5853 ;;      Locals:        17       0       0       0       0       0       0
  5854 ;;      Temps:          8       0       0       0       0       0       0
  5855 ;;      Totals:        35       0       0       0       0       0       0
  5856 ;;Total ram usage:       35 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 4
  5859 ;; This function calls:
  5860 ;;		___aodiv
  5861 ;;		___aomod
  5862 ;;		_abs
  5863 ;;		_pad
  5864 ;; This function is called by:
  5865 ;;		_vfpfcnvrt
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text20
  5870   002252                     __ptext20:
  5871                           	callstack 0
  5872   002252                     _dtoa:
  5873                           	callstack 22
  5874   002252                     
  5875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5876   002252  C01E  F034         	movff	dtoa@d,dtoa@n
  5877   002256  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5878   00225A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5879   00225E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5880   002262  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5881   002266  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5882   00226A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5883   00226E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5884   002272                     
  5885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5886   002272  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5887   002274  EF3E  F011         	goto	u3741
  5888   002278  EF41  F011         	goto	u3740
  5889   00227C                     u3741:
  5890   00227C  0E01               	movlw	1
  5891   00227E  EF42  F011         	goto	u3750
  5892   002282                     u3740:
  5893   002282  0E00               	movlw	0
  5894   002284                     u3750:
  5895   002284  6E3E               	movwf	dtoa@s^0,c
  5896   002286                     
  5897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5898   002286  503E               	movf	dtoa@s^0,w,c
  5899   002288  B4D8               	btfsc	status,2,c
  5900   00228A  EF49  F011         	goto	u3761
  5901   00228E  EF4B  F011         	goto	u3760
  5902   002292                     u3761:
  5903   002292  EF5B  F011         	goto	l3428
  5904   002296                     u3760:
  5905   002296                     
  5906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5907   002296  1E3B               	comf	(dtoa@n+7)^0,f,c
  5908   002298  1E3A               	comf	(dtoa@n+6)^0,f,c
  5909   00229A  1E39               	comf	(dtoa@n+5)^0,f,c
  5910   00229C  1E38               	comf	(dtoa@n+4)^0,f,c
  5911   00229E  1E37               	comf	(dtoa@n+3)^0,f,c
  5912   0022A0  1E36               	comf	(dtoa@n+2)^0,f,c
  5913   0022A2  1E35               	comf	(dtoa@n+1)^0,f,c
  5914   0022A4  6C34               	negf	dtoa@n^0,c
  5915   0022A6  0E00               	movlw	0
  5916   0022A8  2235               	addwfc	(dtoa@n+1)^0,f,c
  5917   0022AA  2236               	addwfc	(dtoa@n+2)^0,f,c
  5918   0022AC  2237               	addwfc	(dtoa@n+3)^0,f,c
  5919   0022AE  2238               	addwfc	(dtoa@n+4)^0,f,c
  5920   0022B0  2239               	addwfc	(dtoa@n+5)^0,f,c
  5921   0022B2  223A               	addwfc	(dtoa@n+6)^0,f,c
  5922   0022B4  223B               	addwfc	(dtoa@n+7)^0,f,c
  5923   0022B6                     l3428:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  5926   0022B6  0100               	movlb	0	; () banked
  5927   0022B8  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  5928   0022BA  EF61  F011         	goto	u3771
  5929   0022BE  EF63  F011         	goto	u3770
  5930   0022C2                     u3771:
  5931   0022C2  EF64  F011         	goto	l3432
  5932   0022C6                     u3770:
  5933   0022C6                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  5936   0022C6  927F               	bcf	_flags^0,1,c
  5937   0022C8                     l3432:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5941   0022C8  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  5942   0022CA  EF71  F011         	goto	u3780
  5943   0022CE  518F               	movf	(_prec+1)& (0+255),w,b
  5944   0022D0  E106               	bnz	u3781
  5945   0022D2  058E               	decf	_prec& (0+255),w,b
  5946   0022D4  B0D8               	btfsc	status,0,c
  5947   0022D6  EF6F  F011         	goto	u3781
  5948   0022DA  EF71  F011         	goto	u3780
  5949   0022DE                     u3781:
  5950   0022DE  EF77  F011         	goto	l838
  5951   0022E2                     u3780:
  5952   0022E2                     
  5953                           ; BSR set to: 0
  5954   0022E2  0E00               	movlw	0
  5955   0022E4  6E31               	movwf	(dtoa@p+1)^0,c
  5956   0022E6  0E01               	movlw	1
  5957   0022E8  6E30               	movwf	dtoa@p^0,c
  5958   0022EA  EF7B  F011         	goto	l840
  5959   0022EE                     l838:
  5960                           
  5961                           ; BSR set to: 0
  5962   0022EE  C08E  F030         	movff	_prec,dtoa@p
  5963   0022F2  C08F  F031         	movff	_prec+1,dtoa@p+1
  5964   0022F6                     l840:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5968   0022F6  C08C  F032         	movff	_width,dtoa@w
  5969   0022FA  C08D  F033         	movff	_width+1,dtoa@w+1
  5970   0022FE                     
  5971                           ; BSR set to: 0
  5972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5973   0022FE  503E               	movf	dtoa@s^0,w,c
  5974   002300  B4D8               	btfsc	status,2,c
  5975   002302  EF85  F011         	goto	u3791
  5976   002306  EF87  F011         	goto	u3790
  5977   00230A                     u3791:
  5978   00230A  EF9E  F011         	goto	l841
  5979   00230E                     u3790:
  5980   00230E                     
  5981                           ; BSR set to: 0
  5982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5983   00230E  0632               	decf	dtoa@w^0,f,c
  5984   002310  A0D8               	btfss	status,0,c
  5985   002312  0633               	decf	(dtoa@w+1)^0,f,c
  5986   002314                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5989   002314  503E               	movf	dtoa@s^0,w,c
  5990   002316  A4D8               	btfss	status,2,c
  5991   002318  EF90  F011         	goto	u3801
  5992   00231C  EF92  F011         	goto	u3800
  5993   002320                     u3801:
  5994   002320  EF98  F011         	goto	l3444
  5995   002324                     u3800:
  5996   002324                     
  5997                           ; BSR set to: 0
  5998   002324  0E00               	movlw	0
  5999   002326  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6000   002328  0E2B               	movlw	43
  6001   00232A  6E2E               	movwf	_dtoa$1018^0,c
  6002   00232C  EF9C  F011         	goto	l3446
  6003   002330                     l3444:
  6004                           
  6005                           ; BSR set to: 0
  6006   002330  0E00               	movlw	0
  6007   002332  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6008   002334  0E2D               	movlw	45
  6009   002336  6E2E               	movwf	_dtoa$1018^0,c
  6010   002338                     l3446:
  6011                           
  6012                           ; BSR set to: 0
  6013   002338  C02E  F03E         	movff	_dtoa$1018,dtoa@s
  6014   00233C                     l841:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  6018   00233C  0E00               	movlw	0
  6019   00233E  6E3D               	movwf	(dtoa@i+1)^0,c
  6020   002340  0E4F               	movlw	79
  6021   002342  6E3C               	movwf	dtoa@i^0,c
  6022   002344                     
  6023                           ; BSR set to: 0
  6024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  6025   002344  0E00               	movlw	0
  6026   002346  0101               	movlb	1	; () banked
  6027   002348  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6028                           
  6029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6030   00234A  EF23  F012         	goto	l3460
  6031   00234E                     l3450:
  6032                           
  6033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6034   00234E  063C               	decf	dtoa@i^0,f,c
  6035   002350  A0D8               	btfss	status,0,c
  6036   002352  063D               	decf	(dtoa@i+1)^0,f,c
  6037   002354                     
  6038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6039   002354  0E00               	movlw	low _dbuf
  6040   002356  243C               	addwf	dtoa@i^0,w,c
  6041   002358  6ED9               	movwf	fsr2l,c
  6042   00235A  0E01               	movlw	high _dbuf
  6043   00235C  203D               	addwfc	(dtoa@i+1)^0,w,c
  6044   00235E  6EDA               	movwf	fsr2h,c
  6045   002360  C034  F001         	movff	dtoa@n,___aomod@dividend
  6046   002364  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6047   002368  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6048   00236C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6049   002370  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6050   002374  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6051   002378  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6052   00237C  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6053   002380  0E0A               	movlw	10
  6054   002382  6E09               	movwf	___aomod@divisor^0,c
  6055   002384  0E00               	movlw	0
  6056   002386  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6057   002388  0E00               	movlw	0
  6058   00238A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6059   00238C  0E00               	movlw	0
  6060   00238E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6061   002390  0E00               	movlw	0
  6062   002392  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6063   002394  0E00               	movlw	0
  6064   002396  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6065   002398  0E00               	movlw	0
  6066   00239A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6067   00239C  0E00               	movlw	0
  6068   00239E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6069   0023A0  EC2B  F015         	call	___aomod	;wreg free
  6070   0023A4  C001  F026         	movff	?___aomod,??_dtoa
  6071   0023A8  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6072   0023AC  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6073   0023B0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6074   0023B4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6075   0023B8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6076   0023BC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6077   0023C0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6078   0023C4  C026  F013         	movff	??_dtoa,abs@a
  6079   0023C8  C027  F014         	movff	??_dtoa+1,abs@a+1
  6080   0023CC  ECDB  F01B         	call	_abs	;wreg free
  6081   0023D0  5013               	movf	?_abs^0,w,c
  6082   0023D2  0F30               	addlw	48
  6083   0023D4  6EDF               	movwf	indf2,c
  6084   0023D6                     
  6085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6086   0023D6  0630               	decf	dtoa@p^0,f,c
  6087   0023D8  A0D8               	btfss	status,0,c
  6088   0023DA  0631               	decf	(dtoa@p+1)^0,f,c
  6089   0023DC                     
  6090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6091   0023DC  0632               	decf	dtoa@w^0,f,c
  6092   0023DE  A0D8               	btfss	status,0,c
  6093   0023E0  0633               	decf	(dtoa@w+1)^0,f,c
  6094   0023E2                     
  6095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6096   0023E2  C034  F001         	movff	dtoa@n,___aodiv@dividend
  6097   0023E6  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6098   0023EA  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6099   0023EE  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6100   0023F2  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6101   0023F6  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6102   0023FA  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6103   0023FE  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6104   002402  0E0A               	movlw	10
  6105   002404  6E09               	movwf	___aodiv@divisor^0,c
  6106   002406  0E00               	movlw	0
  6107   002408  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6108   00240A  0E00               	movlw	0
  6109   00240C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6110   00240E  0E00               	movlw	0
  6111   002410  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6112   002412  0E00               	movlw	0
  6113   002414  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6114   002416  0E00               	movlw	0
  6115   002418  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6116   00241A  0E00               	movlw	0
  6117   00241C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6118   00241E  0E00               	movlw	0
  6119   002420  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6120   002422  EC67  F014         	call	___aodiv	;wreg free
  6121   002426  C001  F034         	movff	?___aodiv,dtoa@n
  6122   00242A  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  6123   00242E  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  6124   002432  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  6125   002436  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  6126   00243A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  6127   00243E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  6128   002442  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  6129   002446                     l3460:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6132   002446  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  6133   002448  EF2E  F012         	goto	u3811
  6134   00244C  503D               	movf	(dtoa@i+1)^0,w,c
  6135   00244E  E108               	bnz	u3810
  6136   002450  043C               	decf	dtoa@i^0,w,c
  6137   002452  A0D8               	btfss	status,0,c
  6138   002454  EF2E  F012         	goto	u3811
  6139   002458  EF30  F012         	goto	u3810
  6140   00245C                     u3811:
  6141   00245C  EF60  F012         	goto	l3470
  6142   002460                     u3810:
  6143   002460  5034               	movf	dtoa@n^0,w,c
  6144   002462  1035               	iorwf	(dtoa@n+1)^0,w,c
  6145   002464  1036               	iorwf	(dtoa@n+2)^0,w,c
  6146   002466  1037               	iorwf	(dtoa@n+3)^0,w,c
  6147   002468  1038               	iorwf	(dtoa@n+4)^0,w,c
  6148   00246A  1039               	iorwf	(dtoa@n+5)^0,w,c
  6149   00246C  103A               	iorwf	(dtoa@n+6)^0,w,c
  6150   00246E  103B               	iorwf	(dtoa@n+7)^0,w,c
  6151   002470  A4D8               	btfss	status,2,c
  6152   002472  EF3D  F012         	goto	u3821
  6153   002476  EF3F  F012         	goto	u3820
  6154   00247A                     u3821:
  6155   00247A  EFA7  F011         	goto	l3450
  6156   00247E                     u3820:
  6157   00247E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6158   002480  EF4C  F012         	goto	u3830
  6159   002484  5031               	movf	(dtoa@p+1)^0,w,c
  6160   002486  E106               	bnz	u3831
  6161   002488  0430               	decf	dtoa@p^0,w,c
  6162   00248A  B0D8               	btfsc	status,0,c
  6163   00248C  EF4A  F012         	goto	u3831
  6164   002490  EF4C  F012         	goto	u3830
  6165   002494                     u3831:
  6166   002494  EFA7  F011         	goto	l3450
  6167   002498                     u3830:
  6168   002498  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6169   00249A  EF57  F012         	goto	u3841
  6170   00249E  5033               	movf	(dtoa@w+1)^0,w,c
  6171   0024A0  E108               	bnz	u3840
  6172   0024A2  0432               	decf	dtoa@w^0,w,c
  6173   0024A4  A0D8               	btfss	status,0,c
  6174   0024A6  EF57  F012         	goto	u3841
  6175   0024AA  EF59  F012         	goto	u3840
  6176   0024AE                     u3841:
  6177   0024AE  EF60  F012         	goto	l3470
  6178   0024B2                     u3840:
  6179   0024B2  B27F               	btfsc	_flags^0,1,c
  6180   0024B4  EF5E  F012         	goto	u3851
  6181   0024B8  EF60  F012         	goto	u3850
  6182   0024BC                     u3851:
  6183   0024BC  EFA7  F011         	goto	l3450
  6184   0024C0                     u3850:
  6185   0024C0                     l3470:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  6188   0024C0  503E               	movf	dtoa@s^0,w,c
  6189   0024C2  B4D8               	btfsc	status,2,c
  6190   0024C4  EF66  F012         	goto	u3861
  6191   0024C8  EF68  F012         	goto	u3860
  6192   0024CC                     u3861:
  6193   0024CC  EF73  F012         	goto	l3476
  6194   0024D0                     u3860:
  6195   0024D0                     
  6196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6197   0024D0  063C               	decf	dtoa@i^0,f,c
  6198   0024D2  A0D8               	btfss	status,0,c
  6199   0024D4  063D               	decf	(dtoa@i+1)^0,f,c
  6200   0024D6                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  6202   0024D6  0E00               	movlw	low _dbuf
  6203   0024D8  243C               	addwf	dtoa@i^0,w,c
  6204   0024DA  6ED9               	movwf	fsr2l,c
  6205   0024DC  0E01               	movlw	high _dbuf
  6206   0024DE  203D               	addwfc	(dtoa@i+1)^0,w,c
  6207   0024E0  6EDA               	movwf	fsr2h,c
  6208   0024E2  C03E  FFDF         	movff	dtoa@s,indf2
  6209   0024E6                     l3476:
  6210                           
  6211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6212   0024E6  C01C  F011         	movff	dtoa@fp,pad@fp
  6213   0024EA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6214   0024EE  0E00               	movlw	low _dbuf
  6215   0024F0  243C               	addwf	dtoa@i^0,w,c
  6216   0024F2  6E13               	movwf	pad@buf^0,c
  6217   0024F4  0E01               	movlw	high _dbuf
  6218   0024F6  203D               	addwfc	(dtoa@i+1)^0,w,c
  6219   0024F8  6E14               	movwf	(pad@buf+1)^0,c
  6220   0024FA  C032  F015         	movff	dtoa@w,pad@p
  6221   0024FE  C033  F016         	movff	dtoa@w+1,pad@p+1
  6222   002502  EC32  F019         	call	_pad	;wreg free
  6223   002506  0012               	return		;funcret
  6224   002508                     __end_of_dtoa:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function _pad *****************
  6228 ;; Defined at:
  6229 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6232 ;;		 -> sprintf@f(11), 
  6233 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6234 ;;		 -> dbuf(80), 
  6235 ;;  p               2   20[COMRAM] int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  w               2   25[COMRAM] int 
  6238 ;;  i               2   23[COMRAM] int 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6248 ;;      Params:         6       0       0       0       0       0       0
  6249 ;;      Locals:         4       0       0       0       0       0       0
  6250 ;;      Temps:          1       0       0       0       0       0       0
  6251 ;;      Totals:        11       0       0       0       0       0       0
  6252 ;;Total ram usage:       11 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; Hardware stack levels required when called: 3
  6255 ;; This function calls:
  6256 ;;		_fputc
  6257 ;;		_fputs
  6258 ;; This function is called by:
  6259 ;;		_dtoa
  6260 ;;		_efgtoa
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text21
  6265   003264                     __ptext21:
  6266                           	callstack 0
  6267   003264                     _pad:
  6268                           	callstack 22
  6269   003264                     
  6270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  6271   003264  A07F               	btfss	_flags^0,0,c
  6272   003266  EF37  F019         	goto	u3441
  6273   00326A  EF39  F019         	goto	u3440
  6274   00326E                     u3441:
  6275   00326E  EF43  F019         	goto	l3304
  6276   003272                     u3440:
  6277   003272                     
  6278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  6279   003272  C013  F00A         	movff	pad@buf,fputs@s
  6280   003276  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6281   00327A  C011  F00C         	movff	pad@fp,fputs@fp
  6282   00327E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6283   003282  EC99  F01B         	call	_fputs	;wreg free
  6284   003286                     l3304:
  6285                           
  6286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  6287   003286  BE16               	btfsc	(pad@p+1)^0,7,c
  6288   003288  EF48  F019         	goto	u3451
  6289   00328C  EF4A  F019         	goto	u3450
  6290   003290                     u3451:
  6291   003290  EF50  F019         	goto	l3308
  6292   003294                     u3450:
  6293   003294  C015  F01A         	movff	pad@p,pad@w
  6294   003298  C016  F01B         	movff	pad@p+1,pad@w+1
  6295   00329C  EF54  F019         	goto	l827
  6296   0032A0                     l3308:
  6297   0032A0  0E00               	movlw	0
  6298   0032A2  6E1B               	movwf	(pad@w+1)^0,c
  6299   0032A4  0E00               	movlw	0
  6300   0032A6  6E1A               	movwf	pad@w^0,c
  6301   0032A8                     l827:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6304   0032A8  0E00               	movlw	0
  6305   0032AA  6E19               	movwf	(pad@i+1)^0,c
  6306   0032AC  0E00               	movlw	0
  6307   0032AE  6E18               	movwf	pad@i^0,c
  6308                           
  6309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6310   0032B0  EF66  F019         	goto	l3314
  6311   0032B4                     l3310:
  6312                           
  6313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6314   0032B4  0E00               	movlw	0
  6315   0032B6  6E02               	movwf	(fputc@c+1)^0,c
  6316   0032B8  0E20               	movlw	32
  6317   0032BA  6E01               	movwf	fputc@c^0,c
  6318   0032BC  C011  F003         	movff	pad@fp,fputc@fp
  6319   0032C0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6320   0032C4  EC78  F018         	call	_fputc	;wreg free
  6321   0032C8                     
  6322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6323   0032C8  4A18               	infsnz	pad@i^0,f,c
  6324   0032CA  2A19               	incf	(pad@i+1)^0,f,c
  6325   0032CC                     l3314:
  6326                           
  6327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6328   0032CC  501A               	movf	pad@w^0,w,c
  6329   0032CE  5C18               	subwf	pad@i^0,w,c
  6330   0032D0  5019               	movf	(pad@i+1)^0,w,c
  6331   0032D2  0A80               	xorlw	128
  6332   0032D4  6E17               	movwf	??_pad^0,c
  6333   0032D6  501B               	movf	(pad@w+1)^0,w,c
  6334   0032D8  0A80               	xorlw	128
  6335   0032DA  5817               	subwfb	??_pad^0,w,c
  6336   0032DC  A0D8               	btfss	status,0,c
  6337   0032DE  EF73  F019         	goto	u3461
  6338   0032E2  EF75  F019         	goto	u3460
  6339   0032E6                     u3461:
  6340   0032E6  EF5A  F019         	goto	l3310
  6341   0032EA                     u3460:
  6342   0032EA                     
  6343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6344   0032EA  B07F               	btfsc	_flags^0,0,c
  6345   0032EC  EF7A  F019         	goto	u3471
  6346   0032F0  EF7C  F019         	goto	u3470
  6347   0032F4                     u3471:
  6348   0032F4  EF86  F019         	goto	l832
  6349   0032F8                     u3470:
  6350   0032F8                     
  6351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6352   0032F8  C013  F00A         	movff	pad@buf,fputs@s
  6353   0032FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6354   003300  C011  F00C         	movff	pad@fp,fputs@fp
  6355   003304  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6356   003308  EC99  F01B         	call	_fputs	;wreg free
  6357   00330C                     l832:
  6358   00330C  0012               	return		;funcret
  6359   00330E                     __end_of_pad:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _fputs *****************
  6363 ;; Defined at:
  6364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6367 ;;		 -> dbuf(80), 
  6368 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6369 ;;		 -> sprintf@f(11), 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  i               2   14[COMRAM] int 
  6372 ;;  c               1   13[COMRAM] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  2    9[COMRAM] int 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6382 ;;      Params:         4       0       0       0       0       0       0
  6383 ;;      Locals:         3       0       0       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0
  6385 ;;      Totals:         7       0       0       0       0       0       0
  6386 ;;Total ram usage:        7 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; Hardware stack levels required when called: 2
  6389 ;; This function calls:
  6390 ;;		_fputc
  6391 ;; This function is called by:
  6392 ;;		_pad
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text22
  6397   003732                     __ptext22:
  6398                           	callstack 0
  6399   003732                     _fputs:
  6400                           	callstack 22
  6401   003732  0E00               	movlw	0
  6402   003734  6E10               	movwf	(fputs@i+1)^0,c
  6403   003736  0E00               	movlw	0
  6404   003738  6E0F               	movwf	fputs@i^0,c
  6405   00373A  EFAA  F01B         	goto	l2848
  6406   00373E                     l2844:
  6407   00373E  C00E  F001         	movff	fputs@c,fputc@c
  6408   003742  6A02               	clrf	(fputc@c+1)^0,c
  6409   003744  C00C  F003         	movff	fputs@fp,fputc@fp
  6410   003748  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6411   00374C  EC78  F018         	call	_fputc	;wreg free
  6412   003750  4A0F               	infsnz	fputs@i^0,f,c
  6413   003752  2A10               	incf	(fputs@i+1)^0,f,c
  6414   003754                     l2848:
  6415   003754  500F               	movf	fputs@i^0,w,c
  6416   003756  240A               	addwf	fputs@s^0,w,c
  6417   003758  6ED9               	movwf	fsr2l,c
  6418   00375A  5010               	movf	(fputs@i+1)^0,w,c
  6419   00375C  200B               	addwfc	(fputs@s+1)^0,w,c
  6420   00375E  6EDA               	movwf	fsr2h,c
  6421   003760  50DF               	movf	indf2,w,c
  6422   003762  6E0E               	movwf	fputs@c^0,c
  6423   003764  500E               	movf	fputs@c^0,w,c
  6424   003766  A4D8               	btfss	status,2,c
  6425   003768  EFB8  F01B         	goto	u2721
  6426   00376C  EFBA  F01B         	goto	u2720
  6427   003770                     u2721:
  6428   003770  EF9F  F01B         	goto	l2844
  6429   003774                     u2720:
  6430   003774  0012               	return		;funcret
  6431   003776                     __end_of_fputs:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _fputc *****************
  6435 ;; Defined at:
  6436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  c               2    0[COMRAM] int 
  6439 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6440 ;;		 -> sprintf@f(11), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  2    0[COMRAM] int 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6452 ;;      Params:         4       0       0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0
  6454 ;;      Temps:          5       0       0       0       0       0       0
  6455 ;;      Totals:         9       0       0       0       0       0       0
  6456 ;;Total ram usage:        9 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 1
  6459 ;; This function calls:
  6460 ;;		_putch
  6461 ;; This function is called by:
  6462 ;;		_pad
  6463 ;;		_vfpfcnvrt
  6464 ;;		_fputs
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text23
  6469   0030F0                     __ptext23:
  6470                           	callstack 0
  6471   0030F0                     _fputc:
  6472                           	callstack 25
  6473   0030F0  5003               	movf	fputc@fp^0,w,c
  6474   0030F2  1004               	iorwf	(fputc@fp+1)^0,w,c
  6475   0030F4  B4D8               	btfsc	status,2,c
  6476   0030F6  EF7F  F018         	goto	u2291
  6477   0030FA  EF81  F018         	goto	u2290
  6478   0030FE                     u2291:
  6479   0030FE  EF8A  F018         	goto	l2630
  6480   003102                     u2290:
  6481   003102  5003               	movf	fputc@fp^0,w,c
  6482   003104  1004               	iorwf	(fputc@fp+1)^0,w,c
  6483   003106  A4D8               	btfss	status,2,c
  6484   003108  EF88  F018         	goto	u2301
  6485   00310C  EF8A  F018         	goto	u2300
  6486   003110                     u2301:
  6487   003110  EF8F  F018         	goto	l2632
  6488   003114                     u2300:
  6489   003114                     l2630:
  6490   003114  5001               	movf	fputc@c^0,w,c
  6491   003116  ECAE  F01C         	call	_putch
  6492   00311A  EFDC  F018         	goto	l1059
  6493   00311E                     l2632:
  6494   00311E  EE20 F009          	lfsr	2,9
  6495   003122  5003               	movf	fputc@fp^0,w,c
  6496   003124  26D9               	addwf	fsr2l,f,c
  6497   003126  5004               	movf	(fputc@fp+1)^0,w,c
  6498   003128  22DA               	addwfc	fsr2h,f,c
  6499   00312A  50DE               	movf	postinc2,w,c
  6500   00312C  10DE               	iorwf	postinc2,w,c
  6501   00312E  B4D8               	btfsc	status,2,c
  6502   003130  EF9C  F018         	goto	u2311
  6503   003134  EF9E  F018         	goto	u2310
  6504   003138                     u2311:
  6505   003138  EFB9  F018         	goto	l2636
  6506   00313C                     u2310:
  6507   00313C  EE20 F009          	lfsr	2,9
  6508   003140  5003               	movf	fputc@fp^0,w,c
  6509   003142  26D9               	addwf	fsr2l,f,c
  6510   003144  5004               	movf	(fputc@fp+1)^0,w,c
  6511   003146  22DA               	addwfc	fsr2h,f,c
  6512   003148  EE10 F003          	lfsr	1,3
  6513   00314C  5003               	movf	fputc@fp^0,w,c
  6514   00314E  26E1               	addwf	fsr1l,f,c
  6515   003150  5004               	movf	(fputc@fp+1)^0,w,c
  6516   003152  22E2               	addwfc	fsr1h,f,c
  6517   003154  50DE               	movf	postinc2,w,c
  6518   003156  5CE6               	subwf	postinc1,w,c
  6519   003158  50E6               	movf	postinc1,w,c
  6520   00315A  0A80               	xorlw	128
  6521   00315C  6E09               	movwf	(??_fputc+4)^0,c
  6522   00315E  50DE               	movf	postinc2,w,c
  6523   003160  0A80               	xorlw	128
  6524   003162  5809               	subwfb	(??_fputc+4)^0,w,c
  6525   003164  B0D8               	btfsc	status,0,c
  6526   003166  EFB7  F018         	goto	u2321
  6527   00316A  EFB9  F018         	goto	u2320
  6528   00316E                     u2321:
  6529   00316E  EFDC  F018         	goto	l1059
  6530   003172                     u2320:
  6531   003172                     l2636:
  6532   003172  EE20 F003          	lfsr	2,3
  6533   003176  5003               	movf	fputc@fp^0,w,c
  6534   003178  26D9               	addwf	fsr2l,f,c
  6535   00317A  5004               	movf	(fputc@fp+1)^0,w,c
  6536   00317C  22DA               	addwfc	fsr2h,f,c
  6537   00317E  CFDE F005          	movff	postinc2,??_fputc
  6538   003182  CFDD F006          	movff	postdec2,??_fputc+1
  6539   003186  C003  FFD9         	movff	fputc@fp,fsr2l
  6540   00318A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6541   00318E  CFDE F007          	movff	postinc2,??_fputc+2
  6542   003192  CFDD F008          	movff	postdec2,??_fputc+3
  6543   003196  5005               	movf	??_fputc^0,w,c
  6544   003198  2407               	addwf	(??_fputc+2)^0,w,c
  6545   00319A  6ED9               	movwf	fsr2l,c
  6546   00319C  5006               	movf	(??_fputc+1)^0,w,c
  6547   00319E  2008               	addwfc	(??_fputc+3)^0,w,c
  6548   0031A0  6EDA               	movwf	fsr2h,c
  6549   0031A2  C001  FFDF         	movff	fputc@c,indf2
  6550   0031A6  EE20 F003          	lfsr	2,3
  6551   0031AA  5003               	movf	fputc@fp^0,w,c
  6552   0031AC  26D9               	addwf	fsr2l,f,c
  6553   0031AE  5004               	movf	(fputc@fp+1)^0,w,c
  6554   0031B0  22DA               	addwfc	fsr2h,f,c
  6555   0031B2  2ADE               	incf	postinc2,f,c
  6556   0031B4  0E00               	movlw	0
  6557   0031B6  22DD               	addwfc	postdec2,f,c
  6558   0031B8                     l1059:
  6559   0031B8  0012               	return		;funcret
  6560   0031BA                     __end_of_fputc:
  6561                           	callstack 0
  6562                           
  6563 ;; *************** function _putch *****************
  6564 ;; Defined at:
  6565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  c               1    wreg     unsigned char 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  c               1    0[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6579 ;;      Params:         0       0       0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_fputc
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text24
  6593   00395C                     __ptext24:
  6594                           	callstack 0
  6595   00395C                     _putch:
  6596                           	callstack 25
  6597   00395C  0012               	return		;funcret
  6598   00395E                     __end_of_putch:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function _abs *****************
  6602 ;; Defined at:
  6603 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  a               2   18[COMRAM] int 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2   18[COMRAM] int 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6617 ;;      Params:         2       0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0
  6619 ;;      Temps:          2       0       0       0       0       0       0
  6620 ;;      Totals:         4       0       0       0       0       0       0
  6621 ;;Total ram usage:        4 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_dtoa
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text25
  6631   0037B6                     __ptext25:
  6632                           	callstack 0
  6633   0037B6                     _abs:
  6634                           	callstack 25
  6635   0037B6  BE14               	btfsc	(abs@a+1)^0,7,c
  6636   0037B8  EFE8  F01B         	goto	u3480
  6637   0037BC  5014               	movf	(abs@a+1)^0,w,c
  6638   0037BE  E106               	bnz	u3481
  6639   0037C0  0413               	decf	abs@a^0,w,c
  6640   0037C2  B0D8               	btfsc	status,0,c
  6641   0037C4  EFE6  F01B         	goto	u3481
  6642   0037C8  EFE8  F01B         	goto	u3480
  6643   0037CC                     u3481:
  6644   0037CC  EFF6  F01B         	goto	l979
  6645   0037D0                     u3480:
  6646   0037D0  C013  F015         	movff	abs@a,??_abs
  6647   0037D4  C014  F016         	movff	abs@a+1,??_abs+1
  6648   0037D8  1E15               	comf	??_abs^0,f,c
  6649   0037DA  1E16               	comf	(??_abs+1)^0,f,c
  6650   0037DC  4A15               	infsnz	??_abs^0,f,c
  6651   0037DE  2A16               	incf	(??_abs+1)^0,f,c
  6652   0037E0  C015  F013         	movff	??_abs,?_abs
  6653   0037E4  C016  F014         	movff	??_abs+1,?_abs+1
  6654   0037E8  EFFA  F01B         	goto	l982
  6655   0037EC                     l979:
  6656   0037EC  C013  F013         	movff	abs@a,?_abs
  6657   0037F0  C014  F014         	movff	abs@a+1,?_abs+1
  6658   0037F4                     l982:
  6659   0037F4  0012               	return		;funcret
  6660   0037F6                     __end_of_abs:
  6661                           	callstack 0
  6662                           
  6663 ;; *************** function ___aomod *****************
  6664 ;; Defined at:
  6665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  dividend        8    0[COMRAM] long long 
  6668 ;;  divisor         8    8[COMRAM] long long 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  sign            1   17[COMRAM] unsigned char 
  6671 ;;  counter         1   16[COMRAM] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  8    0[COMRAM] long long 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6681 ;;      Params:        16       0       0       0       0       0       0
  6682 ;;      Locals:         2       0       0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0
  6684 ;;      Totals:        18       0       0       0       0       0       0
  6685 ;;Total ram usage:       18 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_dtoa
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text26
  6695   002A56                     __ptext26:
  6696                           	callstack 0
  6697   002A56                     ___aomod:
  6698                           	callstack 25
  6699   002A56  0E00               	movlw	0
  6700   002A58  6E12               	movwf	___aomod@sign^0,c
  6701   002A5A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6702   002A5C  EF34  F015         	goto	u2800
  6703   002A60  EF32  F015         	goto	u2801
  6704   002A64                     u2801:
  6705   002A64  EF46  F015         	goto	l2908
  6706   002A68                     u2800:
  6707   002A68  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6708   002A6A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6709   002A6C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6710   002A6E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6711   002A70  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6712   002A72  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6713   002A74  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6714   002A76  6C01               	negf	___aomod@dividend^0,c
  6715   002A78  0E00               	movlw	0
  6716   002A7A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6717   002A7C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6718   002A7E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6719   002A80  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6720   002A82  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6721   002A84  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6722   002A86  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6723   002A88  0E01               	movlw	1
  6724   002A8A  6E12               	movwf	___aomod@sign^0,c
  6725   002A8C                     l2908:
  6726   002A8C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6727   002A8E  EF4D  F015         	goto	u2810
  6728   002A92  EF4B  F015         	goto	u2811
  6729   002A96                     u2811:
  6730   002A96  EF5D  F015         	goto	l2912
  6731   002A9A                     u2810:
  6732   002A9A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6733   002A9C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6734   002A9E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6735   002AA0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6736   002AA2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6737   002AA4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6738   002AA6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6739   002AA8  6C09               	negf	___aomod@divisor^0,c
  6740   002AAA  0E00               	movlw	0
  6741   002AAC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6742   002AAE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6743   002AB0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6744   002AB2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6745   002AB4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6746   002AB6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6747   002AB8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6748   002ABA                     l2912:
  6749   002ABA  5009               	movf	___aomod@divisor^0,w,c
  6750   002ABC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6751   002ABE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6752   002AC0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6753   002AC2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6754   002AC4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6755   002AC6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6756   002AC8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6757   002ACA  B4D8               	btfsc	status,2,c
  6758   002ACC  EF6A  F015         	goto	u2821
  6759   002AD0  EF6C  F015         	goto	u2820
  6760   002AD4                     u2821:
  6761   002AD4  EFB4  F015         	goto	l2928
  6762   002AD8                     u2820:
  6763   002AD8  0E01               	movlw	1
  6764   002ADA  6E11               	movwf	___aomod@counter^0,c
  6765   002ADC  EF7A  F015         	goto	l2918
  6766   002AE0                     l2916:
  6767   002AE0  90D8               	bcf	status,0,c
  6768   002AE2  3609               	rlcf	___aomod@divisor^0,f,c
  6769   002AE4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6770   002AE6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6771   002AE8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6772   002AEA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6773   002AEC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6774   002AEE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6775   002AF0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6776   002AF2  2A11               	incf	___aomod@counter^0,f,c
  6777   002AF4                     l2918:
  6778   002AF4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6779   002AF6  EF7F  F015         	goto	u2831
  6780   002AFA  EF81  F015         	goto	u2830
  6781   002AFE                     u2831:
  6782   002AFE  EF70  F015         	goto	l2916
  6783   002B02                     u2830:
  6784   002B02                     l2920:
  6785   002B02  5009               	movf	___aomod@divisor^0,w,c
  6786   002B04  5C01               	subwf	___aomod@dividend^0,w,c
  6787   002B06  500A               	movf	(___aomod@divisor+1)^0,w,c
  6788   002B08  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6789   002B0A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6790   002B0C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6791   002B0E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6792   002B10  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6793   002B12  500D               	movf	(___aomod@divisor+4)^0,w,c
  6794   002B14  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6795   002B16  500E               	movf	(___aomod@divisor+5)^0,w,c
  6796   002B18  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6797   002B1A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6798   002B1C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6799   002B1E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6800   002B20  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6801   002B22  A0D8               	btfss	status,0,c
  6802   002B24  EF96  F015         	goto	u2841
  6803   002B28  EF98  F015         	goto	u2840
  6804   002B2C                     u2841:
  6805   002B2C  EFA8  F015         	goto	l2924
  6806   002B30                     u2840:
  6807   002B30  5009               	movf	___aomod@divisor^0,w,c
  6808   002B32  5E01               	subwf	___aomod@dividend^0,f,c
  6809   002B34  500A               	movf	(___aomod@divisor+1)^0,w,c
  6810   002B36  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6811   002B38  500B               	movf	(___aomod@divisor+2)^0,w,c
  6812   002B3A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6813   002B3C  500C               	movf	(___aomod@divisor+3)^0,w,c
  6814   002B3E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6815   002B40  500D               	movf	(___aomod@divisor+4)^0,w,c
  6816   002B42  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6817   002B44  500E               	movf	(___aomod@divisor+5)^0,w,c
  6818   002B46  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6819   002B48  500F               	movf	(___aomod@divisor+6)^0,w,c
  6820   002B4A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6821   002B4C  5010               	movf	(___aomod@divisor+7)^0,w,c
  6822   002B4E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6823   002B50                     l2924:
  6824   002B50  90D8               	bcf	status,0,c
  6825   002B52  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6826   002B54  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6827   002B56  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6828   002B58  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6829   002B5A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6830   002B5C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6831   002B5E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6832   002B60  3209               	rrcf	___aomod@divisor^0,f,c
  6833   002B62  2E11               	decfsz	___aomod@counter^0,f,c
  6834   002B64  EF81  F015         	goto	l2920
  6835   002B68                     l2928:
  6836   002B68  5012               	movf	___aomod@sign^0,w,c
  6837   002B6A  B4D8               	btfsc	status,2,c
  6838   002B6C  EFBA  F015         	goto	u2851
  6839   002B70  EFBC  F015         	goto	u2850
  6840   002B74                     u2851:
  6841   002B74  EFCC  F015         	goto	l2932
  6842   002B78                     u2850:
  6843   002B78  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6844   002B7A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6845   002B7C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6846   002B7E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6847   002B80  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6848   002B82  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6849   002B84  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6850   002B86  6C01               	negf	___aomod@dividend^0,c
  6851   002B88  0E00               	movlw	0
  6852   002B8A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6853   002B8C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6854   002B8E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6855   002B90  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6856   002B92  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6857   002B94  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6858   002B96  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6859   002B98                     l2932:
  6860   002B98  C001  F001         	movff	___aomod@dividend,?___aomod
  6861   002B9C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6862   002BA0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6863   002BA4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6864   002BA8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6865   002BAC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6866   002BB0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6867   002BB4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6868   002BB8  0012               	return		;funcret
  6869   002BBA                     __end_of___aomod:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function ___aodiv *****************
  6873 ;; Defined at:
  6874 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  dividend        8    0[COMRAM] long long 
  6877 ;;  divisor         8    8[COMRAM] long long 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  quotient        8   18[COMRAM] long long 
  6880 ;;  sign            1   17[COMRAM] unsigned char 
  6881 ;;  counter         1   16[COMRAM] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  8    0[COMRAM] long long 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6891 ;;      Params:        16       0       0       0       0       0       0
  6892 ;;      Locals:        10       0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0
  6894 ;;      Totals:        26       0       0       0       0       0       0
  6895 ;;Total ram usage:       26 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_dtoa
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text27
  6905   0028CE                     __ptext27:
  6906                           	callstack 0
  6907   0028CE                     ___aodiv:
  6908                           	callstack 25
  6909   0028CE  0E00               	movlw	0
  6910   0028D0  6E12               	movwf	___aodiv@sign^0,c
  6911   0028D2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6912   0028D4  EF70  F014         	goto	u2730
  6913   0028D8  EF6E  F014         	goto	u2731
  6914   0028DC                     u2731:
  6915   0028DC  EF82  F014         	goto	l2864
  6916   0028E0                     u2730:
  6917   0028E0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6918   0028E2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6919   0028E4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6920   0028E6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6921   0028E8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6922   0028EA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6923   0028EC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6924   0028EE  6C09               	negf	___aodiv@divisor^0,c
  6925   0028F0  0E00               	movlw	0
  6926   0028F2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6927   0028F4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6928   0028F6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6929   0028F8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6930   0028FA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6931   0028FC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6932   0028FE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6933   002900  0E01               	movlw	1
  6934   002902  6E12               	movwf	___aodiv@sign^0,c
  6935   002904                     l2864:
  6936   002904  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6937   002906  EF89  F014         	goto	u2740
  6938   00290A  EF87  F014         	goto	u2741
  6939   00290E                     u2741:
  6940   00290E  EF9B  F014         	goto	l2870
  6941   002912                     u2740:
  6942   002912  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6943   002914  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6944   002916  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6945   002918  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6946   00291A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6947   00291C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6948   00291E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6949   002920  6C01               	negf	___aodiv@dividend^0,c
  6950   002922  0E00               	movlw	0
  6951   002924  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6952   002926  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6953   002928  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6954   00292A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6955   00292C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6956   00292E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6957   002930  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6958   002932  0E01               	movlw	1
  6959   002934  1A12               	xorwf	___aodiv@sign^0,f,c
  6960   002936                     l2870:
  6961   002936  EE20  F013         	lfsr	2,___aodiv@quotient
  6962   00293A  0E07               	movlw	7
  6963   00293C                     u2751:
  6964   00293C  6ADE               	clrf	postinc2,c
  6965   00293E  06E8               	decf	wreg,f,c
  6966   002940  E2FD               	bc	u2751
  6967   002942  5009               	movf	___aodiv@divisor^0,w,c
  6968   002944  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6969   002946  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6970   002948  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6971   00294A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6972   00294C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6973   00294E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6974   002950  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6975   002952  B4D8               	btfsc	status,2,c
  6976   002954  EFAE  F014         	goto	u2761
  6977   002958  EFB0  F014         	goto	u2760
  6978   00295C                     u2761:
  6979   00295C  EF02  F015         	goto	l2892
  6980   002960                     u2760:
  6981   002960  0E01               	movlw	1
  6982   002962  6E11               	movwf	___aodiv@counter^0,c
  6983   002964  EFBE  F014         	goto	l2878
  6984   002968                     l2876:
  6985   002968  90D8               	bcf	status,0,c
  6986   00296A  3609               	rlcf	___aodiv@divisor^0,f,c
  6987   00296C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6988   00296E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6989   002970  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6990   002972  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6991   002974  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6992   002976  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6993   002978  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6994   00297A  2A11               	incf	___aodiv@counter^0,f,c
  6995   00297C                     l2878:
  6996   00297C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6997   00297E  EFC3  F014         	goto	u2771
  6998   002982  EFC5  F014         	goto	u2770
  6999   002986                     u2771:
  7000   002986  EFB4  F014         	goto	l2876
  7001   00298A                     u2770:
  7002   00298A                     l2880:
  7003   00298A  90D8               	bcf	status,0,c
  7004   00298C  3613               	rlcf	___aodiv@quotient^0,f,c
  7005   00298E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7006   002990  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7007   002992  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7008   002994  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7009   002996  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7010   002998  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7011   00299A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7012   00299C  5009               	movf	___aodiv@divisor^0,w,c
  7013   00299E  5C01               	subwf	___aodiv@dividend^0,w,c
  7014   0029A0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7015   0029A2  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7016   0029A4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7017   0029A6  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7018   0029A8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7019   0029AA  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7020   0029AC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7021   0029AE  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7022   0029B0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7023   0029B2  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7024   0029B4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7025   0029B6  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7026   0029B8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7027   0029BA  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7028   0029BC  A0D8               	btfss	status,0,c
  7029   0029BE  EFE3  F014         	goto	u2781
  7030   0029C2  EFE5  F014         	goto	u2780
  7031   0029C6                     u2781:
  7032   0029C6  EFF6  F014         	goto	l2888
  7033   0029CA                     u2780:
  7034   0029CA  5009               	movf	___aodiv@divisor^0,w,c
  7035   0029CC  5E01               	subwf	___aodiv@dividend^0,f,c
  7036   0029CE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7037   0029D0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7038   0029D2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7039   0029D4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7040   0029D6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7041   0029D8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7042   0029DA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7043   0029DC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7044   0029DE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7045   0029E0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7046   0029E2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7047   0029E4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7048   0029E6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7049   0029E8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7050   0029EA  8013               	bsf	___aodiv@quotient^0,0,c
  7051   0029EC                     l2888:
  7052   0029EC  90D8               	bcf	status,0,c
  7053   0029EE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7054   0029F0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7055   0029F2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7056   0029F4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7057   0029F6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7058   0029F8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7059   0029FA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7060   0029FC  3209               	rrcf	___aodiv@divisor^0,f,c
  7061   0029FE  2E11               	decfsz	___aodiv@counter^0,f,c
  7062   002A00  EFC5  F014         	goto	l2880
  7063   002A04                     l2892:
  7064   002A04  5012               	movf	___aodiv@sign^0,w,c
  7065   002A06  B4D8               	btfsc	status,2,c
  7066   002A08  EF08  F015         	goto	u2791
  7067   002A0C  EF0A  F015         	goto	u2790
  7068   002A10                     u2791:
  7069   002A10  EF1A  F015         	goto	l2896
  7070   002A14                     u2790:
  7071   002A14  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7072   002A16  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7073   002A18  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7074   002A1A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7075   002A1C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7076   002A1E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7077   002A20  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7078   002A22  6C13               	negf	___aodiv@quotient^0,c
  7079   002A24  0E00               	movlw	0
  7080   002A26  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7081   002A28  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7082   002A2A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7083   002A2C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7084   002A2E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7085   002A30  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7086   002A32  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7087   002A34                     l2896:
  7088   002A34  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7089   002A38  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7090   002A3C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7091   002A40  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7092   002A44  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7093   002A48  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7094   002A4C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7095   002A50  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7096   002A54  0012               	return		;funcret
  7097   002A56                     __end_of___aodiv:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _atoi *****************
  7101 ;; Defined at:
  7102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7105 ;;		 -> STR_2(15), STR_1(15), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  n               2   13[COMRAM] int 
  7108 ;;  neg             2   11[COMRAM] int 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    6[COMRAM] int 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7118 ;;      Params:         2       0       0       0       0       0       0
  7119 ;;      Locals:         4       0       0       0       0       0       0
  7120 ;;      Temps:          3       0       0       0       0       0       0
  7121 ;;      Totals:         9       0       0       0       0       0       0
  7122 ;;Total ram usage:        9 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 1
  7125 ;; This function calls:
  7126 ;;		___wmul
  7127 ;;		_isdigit
  7128 ;;		_isspace
  7129 ;; This function is called by:
  7130 ;;		_vfpfcnvrt
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text28
  7135   002BBA                     __ptext28:
  7136                           	callstack 0
  7137   002BBA                     _atoi:
  7138                           	callstack 25
  7139   002BBA  0E00               	movlw	0
  7140   002BBC  6E0F               	movwf	(atoi@n+1)^0,c
  7141   002BBE  0E00               	movlw	0
  7142   002BC0  6E0E               	movwf	atoi@n^0,c
  7143   002BC2  0E00               	movlw	0
  7144   002BC4  6E0D               	movwf	(atoi@neg+1)^0,c
  7145   002BC6  0E00               	movlw	0
  7146   002BC8  6E0C               	movwf	atoi@neg^0,c
  7147   002BCA  EFE9  F015         	goto	l3720
  7148   002BCE                     l3716:
  7149   002BCE  4A07               	infsnz	atoi@s^0,f,c
  7150   002BD0  2A08               	incf	(atoi@s+1)^0,f,c
  7151   002BD2                     l3720:
  7152   002BD2  C007  FFF6         	movff	atoi@s,tblptrl
  7153   002BD6  C008  FFF7         	movff	atoi@s+1,tblptrh
  7154   002BDA                     	if	0	;tblptru may be non-zero
  7155   002BDA                     	endif
  7156   002BDA                     	if	0	;tblptru may be non-zero
  7157   002BDA                     	endif
  7158   002BDA  0008               	tblrd		*
  7159   002BDC  50F5               	movf	tablat,w,c
  7160   002BDE  0A20               	xorlw	32
  7161   002BE0  B4D8               	btfsc	status,2,c
  7162   002BE2  EFF5  F015         	goto	u4221
  7163   002BE6  EFF7  F015         	goto	u4220
  7164   002BEA                     u4221:
  7165   002BEA  EFE7  F015         	goto	l3716
  7166   002BEE                     u4220:
  7167   002BEE  C007  FFF6         	movff	atoi@s,tblptrl
  7168   002BF2  C008  FFF7         	movff	atoi@s+1,tblptrh
  7169   002BF6                     	if	0	;tblptru may be non-zero
  7170   002BF6                     	endif
  7171   002BF6                     	if	0	;tblptru may be non-zero
  7172   002BF6                     	endif
  7173   002BF6  0008               	tblrd		*
  7174   002BF8  CFF5 F009          	movff	tablat,??_atoi
  7175   002BFC  0EF7               	movlw	247
  7176   002BFE  2409               	addwf	??_atoi^0,w,c
  7177   002C00  6E0A               	movwf	(??_atoi+1)^0,c
  7178   002C02  6A0B               	clrf	(??_atoi+2)^0,c
  7179   002C04  0EFF               	movlw	255
  7180   002C06  220B               	addwfc	(??_atoi+2)^0,f,c
  7181   002C08  500B               	movf	(??_atoi+2)^0,w,c
  7182   002C0A  E109               	bnz	u4230
  7183   002C0C  0E05               	movlw	5
  7184   002C0E  5C0A               	subwf	(??_atoi+1)^0,w,c
  7185   002C10  A0D8               	btfss	status,0,c
  7186   002C12  EF0D  F016         	goto	u4231
  7187   002C16  EF0F  F016         	goto	u4230
  7188   002C1A                     u4231:
  7189   002C1A  EFE7  F015         	goto	l3716
  7190   002C1E                     u4230:
  7191   002C1E  EF19  F016         	goto	l3728
  7192   002C22                     l3724:
  7193   002C22  0E00               	movlw	0
  7194   002C24  6E0D               	movwf	(atoi@neg+1)^0,c
  7195   002C26  0E01               	movlw	1
  7196   002C28  6E0C               	movwf	atoi@neg^0,c
  7197   002C2A                     l3726:
  7198   002C2A  4A07               	infsnz	atoi@s^0,f,c
  7199   002C2C  2A08               	incf	(atoi@s+1)^0,f,c
  7200   002C2E  EF4E  F016         	goto	l3736
  7201   002C32                     l3728:
  7202   002C32  C007  FFF6         	movff	atoi@s,tblptrl
  7203   002C36  C008  FFF7         	movff	atoi@s+1,tblptrh
  7204   002C3A                     	if	0	;tblptru may be non-zero
  7205   002C3A                     	endif
  7206   002C3A                     	if	0	;tblptru may be non-zero
  7207   002C3A                     	endif
  7208   002C3A  0008               	tblrd		*
  7209   002C3C  50F5               	movf	tablat,w,c
  7210   002C3E  6E09               	movwf	??_atoi^0,c
  7211   002C40  6A0A               	clrf	(??_atoi+1)^0,c
  7212                           
  7213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7214                           ; Switch size 1, requested type "simple"
  7215                           ; Number of cases is 1, Range of values is 0 to 0
  7216                           ; switch strategies available:
  7217                           ; Name         Instructions Cycles
  7218                           ; simple_byte            4     3 (average)
  7219                           ;	Chosen strategy is simple_byte
  7220   002C42  500A               	movf	(??_atoi+1)^0,w,c
  7221   002C44  0A00               	xorlw	0	; case 0
  7222   002C46  B4D8               	btfsc	status,2,c
  7223   002C48  EF28  F016         	goto	l4176
  7224   002C4C  EF4E  F016         	goto	l3736
  7225   002C50                     l4176:
  7226                           
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 2, Range of values is 43 to 45
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            7     4 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233   002C50  5009               	movf	??_atoi^0,w,c
  7234   002C52  0A2B               	xorlw	43	; case 43
  7235   002C54  B4D8               	btfsc	status,2,c
  7236   002C56  EF15  F016         	goto	l3726
  7237   002C5A  0A06               	xorlw	6	; case 45
  7238   002C5C  B4D8               	btfsc	status,2,c
  7239   002C5E  EF11  F016         	goto	l3724
  7240   002C62  EF4E  F016         	goto	l3736
  7241   002C66                     l3730:
  7242   002C66  C00E  F001         	movff	atoi@n,___wmul@multiplier
  7243   002C6A  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7244   002C6E  0E00               	movlw	0
  7245   002C70  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7246   002C72  0E0A               	movlw	10
  7247   002C74  6E03               	movwf	___wmul@multiplicand^0,c
  7248   002C76  EC5B  F01C         	call	___wmul	;wreg free
  7249   002C7A  C007  FFF6         	movff	atoi@s,tblptrl
  7250   002C7E  C008  FFF7         	movff	atoi@s+1,tblptrh
  7251   002C82                     	if	0	;tblptru may be non-zero
  7252   002C82                     	endif
  7253   002C82                     	if	0	;tblptru may be non-zero
  7254   002C82                     	endif
  7255   002C82  0008               	tblrd		*
  7256   002C84  50F5               	movf	tablat,w,c
  7257   002C86  5E01               	subwf	?___wmul^0,f,c
  7258   002C88  0E00               	movlw	0
  7259   002C8A  5A02               	subwfb	(?___wmul+1)^0,f,c
  7260   002C8C  0E30               	movlw	48
  7261   002C8E  2401               	addwf	?___wmul^0,w,c
  7262   002C90  6E0E               	movwf	atoi@n^0,c
  7263   002C92  0E00               	movlw	0
  7264   002C94  2002               	addwfc	(?___wmul+1)^0,w,c
  7265   002C96  6E0F               	movwf	(atoi@n+1)^0,c
  7266   002C98  EF15  F016         	goto	l3726
  7267   002C9C                     l3736:
  7268   002C9C  C007  FFF6         	movff	atoi@s,tblptrl
  7269   002CA0  C008  FFF7         	movff	atoi@s+1,tblptrh
  7270   002CA4                     	if	0	;tblptru may be non-zero
  7271   002CA4                     	endif
  7272   002CA4                     	if	0	;tblptru may be non-zero
  7273   002CA4                     	endif
  7274   002CA4  0008               	tblrd		*
  7275   002CA6  CFF5 F009          	movff	tablat,??_atoi
  7276   002CAA  0ED0               	movlw	208
  7277   002CAC  2409               	addwf	??_atoi^0,w,c
  7278   002CAE  6E0A               	movwf	(??_atoi+1)^0,c
  7279   002CB0  6A0B               	clrf	(??_atoi+2)^0,c
  7280   002CB2  0EFF               	movlw	255
  7281   002CB4  220B               	addwfc	(??_atoi+2)^0,f,c
  7282   002CB6  500B               	movf	(??_atoi+2)^0,w,c
  7283   002CB8  E109               	bnz	u4240
  7284   002CBA  0E0A               	movlw	10
  7285   002CBC  5C0A               	subwf	(??_atoi+1)^0,w,c
  7286   002CBE  A0D8               	btfss	status,0,c
  7287   002CC0  EF64  F016         	goto	u4241
  7288   002CC4  EF66  F016         	goto	u4240
  7289   002CC8                     u4241:
  7290   002CC8  EF33  F016         	goto	l3730
  7291   002CCC                     u4240:
  7292   002CCC  500C               	movf	atoi@neg^0,w,c
  7293   002CCE  100D               	iorwf	(atoi@neg+1)^0,w,c
  7294   002CD0  A4D8               	btfss	status,2,c
  7295   002CD2  EF6D  F016         	goto	u4251
  7296   002CD6  EF6F  F016         	goto	u4250
  7297   002CDA                     u4251:
  7298   002CDA  EF7D  F016         	goto	l1004
  7299   002CDE                     u4250:
  7300   002CDE  C00E  F009         	movff	atoi@n,??_atoi
  7301   002CE2  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  7302   002CE6  1E09               	comf	??_atoi^0,f,c
  7303   002CE8  1E0A               	comf	(??_atoi+1)^0,f,c
  7304   002CEA  4A09               	infsnz	??_atoi^0,f,c
  7305   002CEC  2A0A               	incf	(??_atoi+1)^0,f,c
  7306   002CEE  C009  F007         	movff	??_atoi,?_atoi
  7307   002CF2  C00A  F008         	movff	??_atoi+1,?_atoi+1
  7308   002CF6  EF81  F016         	goto	l1007
  7309   002CFA                     l1004:
  7310   002CFA  C00E  F007         	movff	atoi@n,?_atoi
  7311   002CFE  C00F  F008         	movff	atoi@n+1,?_atoi+1
  7312   002D02                     l1007:
  7313   002D02  0012               	return		;funcret
  7314   002D04                     __end_of_atoi:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function _isspace *****************
  7318 ;; Defined at:
  7319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  c               2    0[COMRAM] int 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  2    0[COMRAM] int 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7333 ;;      Params:         2       0       0       0       0       0       0
  7334 ;;      Locals:         1       0       0       0       0       0       0
  7335 ;;      Temps:          2       0       0       0       0       0       0
  7336 ;;      Totals:         5       0       0       0       0       0       0
  7337 ;;Total ram usage:        5 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_atoi
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text29
  7347   0036EC                     __ptext29:
  7348                           	callstack 0
  7349   0036EC                     _isspace:
  7350                           	callstack 25
  7351   0036EC  0E01               	movlw	1
  7352   0036EE  6E05               	movwf	_isspace$1129^0,c
  7353   0036F0  0E20               	movlw	32
  7354   0036F2  1801               	xorwf	isspace@c^0,w,c
  7355   0036F4  1002               	iorwf	(isspace@c+1)^0,w,c
  7356   0036F6  B4D8               	btfsc	status,2,c
  7357   0036F8  EF80  F01B         	goto	u3711
  7358   0036FC  EF82  F01B         	goto	u3710
  7359   003700                     u3711:
  7360   003700  EF95  F01B         	goto	l3404
  7361   003704                     u3710:
  7362   003704  0EF7               	movlw	247
  7363   003706  2401               	addwf	isspace@c^0,w,c
  7364   003708  6E03               	movwf	??_isspace^0,c
  7365   00370A  0EFF               	movlw	255
  7366   00370C  2002               	addwfc	(isspace@c+1)^0,w,c
  7367   00370E  6E04               	movwf	(??_isspace+1)^0,c
  7368   003710  5004               	movf	(??_isspace+1)^0,w,c
  7369   003712  E109               	bnz	u3720
  7370   003714  0E05               	movlw	5
  7371   003716  5C03               	subwf	??_isspace^0,w,c
  7372   003718  A0D8               	btfss	status,0,c
  7373   00371A  EF91  F01B         	goto	u3721
  7374   00371E  EF93  F01B         	goto	u3720
  7375   003722                     u3721:
  7376   003722  EF95  F01B         	goto	l3404
  7377   003726                     u3720:
  7378   003726  0E00               	movlw	0
  7379   003728  6E05               	movwf	_isspace$1129^0,c
  7380   00372A                     l3404:
  7381   00372A  C005  F001         	movff	_isspace$1129,?_isspace
  7382   00372E  6A02               	clrf	(?_isspace+1)^0,c
  7383   003730  0012               	return		;funcret
  7384   003732                     __end_of_isspace:
  7385                           	callstack 0
  7386                           
  7387 ;; *************** function _isdigit *****************
  7388 ;; Defined at:
  7389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  c               2    0[COMRAM] int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  2    0[COMRAM] int 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7403 ;;      Params:         2       0       0       0       0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0
  7405 ;;      Temps:          2       0       0       0       0       0       0
  7406 ;;      Totals:         4       0       0       0       0       0       0
  7407 ;;Total ram usage:        4 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_vfpfcnvrt
  7413 ;;		_atoi
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text30
  7418   003864                     __ptext30:
  7419                           	callstack 0
  7420   003864                     _isdigit:
  7421                           	callstack 26
  7422   003864  0ED0               	movlw	208
  7423   003866  2401               	addwf	isdigit@c^0,w,c
  7424   003868  6E03               	movwf	??_isdigit^0,c
  7425   00386A  0EFF               	movlw	255
  7426   00386C  2002               	addwfc	(isdigit@c+1)^0,w,c
  7427   00386E  6E04               	movwf	(??_isdigit+1)^0,c
  7428   003870  5004               	movf	(??_isdigit+1)^0,w,c
  7429   003872  E10A               	bnz	u3690
  7430   003874  0E0A               	movlw	10
  7431   003876  5C03               	subwf	??_isdigit^0,w,c
  7432   003878  A0D8               	btfss	status,0,c
  7433   00387A  EF41  F01C         	goto	u3691
  7434   00387E  EF44  F01C         	goto	u3690
  7435   003882                     u3691:
  7436   003882  0E01               	movlw	1
  7437   003884  EF45  F01C         	goto	u3700
  7438   003888                     u3690:
  7439   003888  0E00               	movlw	0
  7440   00388A                     u3700:
  7441   00388A  6E01               	movwf	?_isdigit^0,c
  7442   00388C  6A02               	clrf	(?_isdigit+1)^0,c
  7443   00388E  0012               	return		;funcret
  7444   003890                     __end_of_isdigit:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function ___wmul *****************
  7448 ;; Defined at:
  7449 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  multiplier      2    0[COMRAM] unsigned int 
  7452 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  product         2    4[COMRAM] unsigned int 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2    0[COMRAM] unsigned int 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0, prodl, prodh
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7464 ;;      Params:         4       0       0       0       0       0       0
  7465 ;;      Locals:         2       0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0
  7467 ;;      Totals:         6       0       0       0       0       0       0
  7468 ;;Total ram usage:        6 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_atoi
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text31
  7478   0038B6                     __ptext31:
  7479                           	callstack 0
  7480   0038B6                     ___wmul:
  7481                           	callstack 25
  7482   0038B6  5001               	movf	___wmul@multiplier^0,w,c
  7483   0038B8  0203               	mulwf	___wmul@multiplicand^0,c
  7484   0038BA  CFF3 F005          	movff	prodl,___wmul@product
  7485   0038BE  CFF4 F006          	movff	prodh,___wmul@product+1
  7486   0038C2  5001               	movf	___wmul@multiplier^0,w,c
  7487   0038C4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7488   0038C6  50F3               	movf	243,w,c
  7489   0038C8  2606               	addwf	(___wmul@product+1)^0,f,c
  7490   0038CA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7491   0038CC  0203               	mulwf	___wmul@multiplicand^0,c
  7492   0038CE  50F3               	movf	243,w,c
  7493   0038D0  2606               	addwf	(___wmul@product+1)^0,f,c
  7494   0038D2  C005  F001         	movff	___wmul@product,?___wmul
  7495   0038D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7496   0038DA  0012               	return		;funcret
  7497   0038DC                     __end_of___wmul:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _lcd_write *****************
  7501 ;; Defined at:
  7502 ;;		line 79 in file "LCD4b_EXSTO.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  lin             1    wreg     unsigned char 
  7505 ;;  col             1    6[COMRAM] unsigned char 
  7506 ;;  str             2    7[COMRAM] PTR unsigned char 
  7507 ;;		 -> STR_6(16), STR_5(15), STR_4(12), STR_3(8), 
  7508 ;;		 -> VoltageBuffer(16), VdigBuffer(16), 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  lin             1   10[COMRAM] unsigned char 
  7511 ;;  end             1    9[COMRAM] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7521 ;;      Params:         3       0       0       0       0       0       0
  7522 ;;      Locals:         2       0       0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0
  7524 ;;      Totals:         5       0       0       0       0       0       0
  7525 ;;Total ram usage:        5 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; Hardware stack levels required when called: 3
  7528 ;; This function calls:
  7529 ;;		_lcd_send_byte
  7530 ;; This function is called by:
  7531 ;;		_lcd_AD
  7532 ;;		_lcd_BUTTON
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text32
  7537   00330E                     __ptext32:
  7538                           	callstack 0
  7539   00330E                     _lcd_write:
  7540                           	callstack 26
  7541                           
  7542                           ;incstack = 0
  7543                           ;lcd_write@lin stored from wreg
  7544   00330E  6E0B               	movwf	lcd_write@lin^0,c
  7545   003310                     
  7546                           ;LCD4b_EXSTO.c: 79: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 80: {;L
      +                          CD4b_EXSTO.c: 81:     char end;;LCD4b_EXSTO.c: 83:     if(lin == 1)
  7547   003310  040B               	decf	lcd_write@lin^0,w,c
  7548   003312  A4D8               	btfss	status,2,c
  7549   003314  EF8E  F019         	goto	u4391
  7550   003318  EF90  F019         	goto	u4390
  7551   00331C                     u4391:
  7552   00331C  EF95  F019         	goto	l3916
  7553   003320                     u4390:
  7554   003320                     
  7555                           ;LCD4b_EXSTO.c: 84:     {;LCD4b_EXSTO.c: 85:         end = col + 0X80 - 1;
  7556   003320  5007               	movf	lcd_write@col^0,w,c
  7557   003322  0F7F               	addlw	127
  7558   003324  6E0A               	movwf	lcd_write@end^0,c
  7559                           
  7560                           ;LCD4b_EXSTO.c: 86:     }
  7561   003326  EFA1  F019         	goto	l3920
  7562   00332A                     l3916:
  7563   00332A  0E02               	movlw	2
  7564   00332C  180B               	xorwf	lcd_write@lin^0,w,c
  7565   00332E  A4D8               	btfss	status,2,c
  7566   003330  EF9C  F019         	goto	u4401
  7567   003334  EF9E  F019         	goto	u4400
  7568   003338                     u4401:
  7569   003338  EFA1  F019         	goto	l3920
  7570   00333C                     u4400:
  7571   00333C                     
  7572                           ;LCD4b_EXSTO.c: 88:     {;LCD4b_EXSTO.c: 89:         end = col + 0xC0 - 1;
  7573   00333C  5007               	movf	lcd_write@col^0,w,c
  7574   00333E  0FBF               	addlw	191
  7575   003340  6E0A               	movwf	lcd_write@end^0,c
  7576   003342                     l3920:
  7577                           
  7578                           ;LCD4b_EXSTO.c: 91:     lcd_send_byte(0,end);
  7579   003342  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  7580   003346  0E00               	movlw	0
  7581   003348  EC90  F01C         	call	_lcd_send_byte
  7582                           
  7583                           ;LCD4b_EXSTO.c: 93:     while(*str)
  7584   00334C  EFBE  F019         	goto	l3926
  7585   003350                     l3922:
  7586                           
  7587                           ;LCD4b_EXSTO.c: 94:     {;LCD4b_EXSTO.c: 95:         lcd_send_byte(1,*str);
  7588   003350  C008  FFF6         	movff	lcd_write@str,tblptrl
  7589   003354  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  7590   003358  6AF8               	clrf	tblptru,c
  7591   00335A  0E05               	movlw	(high __ramtop+-1)
  7592   00335C  64F7               	cpfsgt	tblptrh,c
  7593   00335E  D003               	bra	u4417
  7594   003360  0008               	tblrd		*
  7595   003362  50F5               	movf	tablat,w,c
  7596   003364  D005               	bra	u4410
  7597   003366                     u4417:
  7598   003366  CFF6 FFE1          	movff	tblptrl,fsr1l
  7599   00336A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7600   00336E  50E7               	movf	indf1,w,c
  7601   003370                     u4410:
  7602   003370  6E05               	movwf	lcd_send_byte@data^0,c
  7603   003372  0E01               	movlw	1
  7604   003374  EC90  F01C         	call	_lcd_send_byte
  7605   003378                     
  7606                           ;LCD4b_EXSTO.c: 96:         str++;
  7607   003378  4A08               	infsnz	lcd_write@str^0,f,c
  7608   00337A  2A09               	incf	(lcd_write@str+1)^0,f,c
  7609   00337C                     l3926:
  7610                           
  7611                           ;LCD4b_EXSTO.c: 93:     while(*str)
  7612   00337C  C008  FFF6         	movff	lcd_write@str,tblptrl
  7613   003380  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  7614   003384  6AF8               	clrf	tblptru,c
  7615   003386  0E05               	movlw	(high __ramtop+-1)
  7616   003388  64F7               	cpfsgt	tblptrh,c
  7617   00338A  D003               	bra	u4427
  7618   00338C  0008               	tblrd		*
  7619   00338E  50F5               	movf	tablat,w,c
  7620   003390  D005               	bra	u4420
  7621   003392                     u4427:
  7622   003392  CFF6 FFE1          	movff	tblptrl,fsr1l
  7623   003396  CFF7 FFE2          	movff	tblptrh,fsr1h
  7624   00339A  50E7               	movf	indf1,w,c
  7625   00339C                     u4420:
  7626   00339C  0900               	iorlw	0
  7627   00339E  A4D8               	btfss	status,2,c
  7628   0033A0  EFD4  F019         	goto	u4431
  7629   0033A4  EFD6  F019         	goto	u4430
  7630   0033A8                     u4431:
  7631   0033A8  EFA8  F019         	goto	l3922
  7632   0033AC                     u4430:
  7633   0033AC  0012               	return		;funcret
  7634   0033AE                     __end_of_lcd_write:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _lcd_send_byte *****************
  7638 ;; Defined at:
  7639 ;;		line 63 in file "LCD4b_EXSTO.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  level           1    wreg     unsigned char 
  7642 ;;  data            1    4[COMRAM] unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  level           1    5[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7654 ;;      Params:         1       0       0       0       0       0       0
  7655 ;;      Locals:         1       0       0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0
  7657 ;;      Totals:         2       0       0       0       0       0       0
  7658 ;;Total ram usage:        2 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 2
  7661 ;; This function calls:
  7662 ;;		_lcd_cmd
  7663 ;; This function is called by:
  7664 ;;		_lcd_write
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text33
  7669   003920                     __ptext33:
  7670                           	callstack 0
  7671   003920                     _lcd_send_byte:
  7672                           	callstack 26
  7673                           
  7674                           ;incstack = 0
  7675                           ;lcd_send_byte@level stored from wreg
  7676   003920  6E06               	movwf	lcd_send_byte@level^0,c
  7677   003922                     
  7678                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  7679   003922  B006               	btfsc	lcd_send_byte@level^0,0,c
  7680   003924  D002               	bra	u4375
  7681   003926  9084               	bcf	132,0,c	;volatile
  7682   003928  D001               	bra	u4376
  7683   00392A                     u4375:
  7684   00392A  8084               	bsf	132,0,c	;volatile
  7685   00392C                     u4376:
  7686   00392C                     
  7687                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7688   00392C  0E42               	movlw	66
  7689   00392E                     u4647:
  7690   00392E  2EE8               	decfsz	wreg,f,c
  7691   003930  D7FE               	bra	u4647
  7692   003932  D000               	nop2	
  7693   003934                     
  7694                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  7695   003934  9484               	bcf	132,2,c	;volatile
  7696   003936                     
  7697                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  7698   003936  5005               	movf	lcd_send_byte@data^0,w,c
  7699   003938  EC06  F018         	call	_lcd_cmd
  7700   00393C  0012               	return		;funcret
  7701   00393E                     __end_of_lcd_send_byte:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _lcd_cmd *****************
  7705 ;; Defined at:
  7706 ;;		line 42 in file "LCD4b_EXSTO.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  cmd             1    wreg     unsigned char 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  cmd             1    3[COMRAM] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7720 ;;      Params:         0       0       0       0       0       0       0
  7721 ;;      Locals:         1       0       0       0       0       0       0
  7722 ;;      Temps:          1       0       0       0       0       0       0
  7723 ;;      Totals:         2       0       0       0       0       0       0
  7724 ;;Total ram usage:        2 bytes
  7725 ;; Hardware stack levels used: 1
  7726 ;; Hardware stack levels required when called: 1
  7727 ;; This function calls:
  7728 ;;		_set_bit
  7729 ;; This function is called by:
  7730 ;;		_lcd_init
  7731 ;;		_lcd_send_byte
  7732 ;;		_lcd_clear
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text34
  7737   00300C                     __ptext34:
  7738                           	callstack 0
  7739   00300C                     _lcd_cmd:
  7740                           	callstack 28
  7741                           
  7742                           ;incstack = 0
  7743                           ;lcd_cmd@cmd stored from wreg
  7744   00300C  6E04               	movwf	lcd_cmd@cmd^0,c
  7745   00300E                     
  7746                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  7747   00300E  0E10               	movlw	16
  7748   003010  6E01               	movwf	set_bit@comp^0,c
  7749   003012  5004               	movf	lcd_cmd@cmd^0,w,c
  7750   003014  EC80  F01C         	call	_set_bit
  7751   003018  6E03               	movwf	??_lcd_cmd^0,c
  7752   00301A  3A03               	swapf	??_lcd_cmd^0,f,c
  7753   00301C  5083               	movf	131,w,c	;volatile
  7754   00301E  1803               	xorwf	??_lcd_cmd^0,w,c
  7755   003020  0BEF               	andlw	-17
  7756   003022  1803               	xorwf	??_lcd_cmd^0,w,c
  7757   003024  6E83               	movwf	131,c	;volatile
  7758                           
  7759                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  7760   003026  0E20               	movlw	32
  7761   003028  6E01               	movwf	set_bit@comp^0,c
  7762   00302A  5004               	movf	lcd_cmd@cmd^0,w,c
  7763   00302C  EC80  F01C         	call	_set_bit
  7764   003030  6E03               	movwf	??_lcd_cmd^0,c
  7765   003032  3A03               	swapf	??_lcd_cmd^0,f,c
  7766   003034  4603               	rlncf	??_lcd_cmd^0,f,c
  7767   003036  5083               	movf	131,w,c	;volatile
  7768   003038  1803               	xorwf	??_lcd_cmd^0,w,c
  7769   00303A  0BDF               	andlw	-33
  7770   00303C  1803               	xorwf	??_lcd_cmd^0,w,c
  7771   00303E  6E83               	movwf	131,c	;volatile
  7772                           
  7773                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  7774   003040  0E40               	movlw	64
  7775   003042  6E01               	movwf	set_bit@comp^0,c
  7776   003044  5004               	movf	lcd_cmd@cmd^0,w,c
  7777   003046  EC80  F01C         	call	_set_bit
  7778   00304A  6E03               	movwf	??_lcd_cmd^0,c
  7779   00304C  3A03               	swapf	??_lcd_cmd^0,f,c
  7780   00304E  4603               	rlncf	??_lcd_cmd^0,f,c
  7781   003050  4603               	rlncf	??_lcd_cmd^0,f,c
  7782   003052  5083               	movf	131,w,c	;volatile
  7783   003054  1803               	xorwf	??_lcd_cmd^0,w,c
  7784   003056  0BBF               	andlw	-65
  7785   003058  1803               	xorwf	??_lcd_cmd^0,w,c
  7786   00305A  6E83               	movwf	131,c	;volatile
  7787                           
  7788                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  7789   00305C  0E80               	movlw	128
  7790   00305E  6E01               	movwf	set_bit@comp^0,c
  7791   003060  5004               	movf	lcd_cmd@cmd^0,w,c
  7792   003062  EC80  F01C         	call	_set_bit
  7793   003066  6E03               	movwf	??_lcd_cmd^0,c
  7794   003068  3203               	rrcf	??_lcd_cmd^0,f,c
  7795   00306A  3203               	rrcf	??_lcd_cmd^0,f,c
  7796   00306C  5083               	movf	131,w,c	;volatile
  7797   00306E  1803               	xorwf	??_lcd_cmd^0,w,c
  7798   003070  0B7F               	andlw	-129
  7799   003072  1803               	xorwf	??_lcd_cmd^0,w,c
  7800   003074  6E83               	movwf	131,c	;volatile
  7801   003076                     
  7802                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  7803   003076  8484               	bsf	132,2,c	;volatile
  7804   003078                     
  7805                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  7806   003078  9484               	bcf	132,2,c	;volatile
  7807   00307A                     
  7808                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7809   00307A  0E42               	movlw	66
  7810   00307C                     u4657:
  7811   00307C  2EE8               	decfsz	wreg,f,c
  7812   00307E  D7FE               	bra	u4657
  7813   003080  D000               	nop2	
  7814   003082                     
  7815                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  7816   003082  0E01               	movlw	1
  7817   003084  6E01               	movwf	set_bit@comp^0,c
  7818   003086  5004               	movf	lcd_cmd@cmd^0,w,c
  7819   003088  EC80  F01C         	call	_set_bit
  7820   00308C  6E03               	movwf	??_lcd_cmd^0,c
  7821   00308E  3A03               	swapf	??_lcd_cmd^0,f,c
  7822   003090  5083               	movf	131,w,c	;volatile
  7823   003092  1803               	xorwf	??_lcd_cmd^0,w,c
  7824   003094  0BEF               	andlw	-17
  7825   003096  1803               	xorwf	??_lcd_cmd^0,w,c
  7826   003098  6E83               	movwf	131,c	;volatile
  7827   00309A                     
  7828                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  7829   00309A  0E02               	movlw	2
  7830   00309C  6E01               	movwf	set_bit@comp^0,c
  7831   00309E  5004               	movf	lcd_cmd@cmd^0,w,c
  7832   0030A0  EC80  F01C         	call	_set_bit
  7833   0030A4  6E03               	movwf	??_lcd_cmd^0,c
  7834   0030A6  3A03               	swapf	??_lcd_cmd^0,f,c
  7835   0030A8  4603               	rlncf	??_lcd_cmd^0,f,c
  7836   0030AA  5083               	movf	131,w,c	;volatile
  7837   0030AC  1803               	xorwf	??_lcd_cmd^0,w,c
  7838   0030AE  0BDF               	andlw	-33
  7839   0030B0  1803               	xorwf	??_lcd_cmd^0,w,c
  7840   0030B2  6E83               	movwf	131,c	;volatile
  7841   0030B4                     
  7842                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  7843   0030B4  0E04               	movlw	4
  7844   0030B6  6E01               	movwf	set_bit@comp^0,c
  7845   0030B8  5004               	movf	lcd_cmd@cmd^0,w,c
  7846   0030BA  EC80  F01C         	call	_set_bit
  7847   0030BE  6E03               	movwf	??_lcd_cmd^0,c
  7848   0030C0  3A03               	swapf	??_lcd_cmd^0,f,c
  7849   0030C2  4603               	rlncf	??_lcd_cmd^0,f,c
  7850   0030C4  4603               	rlncf	??_lcd_cmd^0,f,c
  7851   0030C6  5083               	movf	131,w,c	;volatile
  7852   0030C8  1803               	xorwf	??_lcd_cmd^0,w,c
  7853   0030CA  0BBF               	andlw	-65
  7854   0030CC  1803               	xorwf	??_lcd_cmd^0,w,c
  7855   0030CE  6E83               	movwf	131,c	;volatile
  7856   0030D0                     
  7857                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  7858   0030D0  0E08               	movlw	8
  7859   0030D2  6E01               	movwf	set_bit@comp^0,c
  7860   0030D4  5004               	movf	lcd_cmd@cmd^0,w,c
  7861   0030D6  EC80  F01C         	call	_set_bit
  7862   0030DA  6E03               	movwf	??_lcd_cmd^0,c
  7863   0030DC  3203               	rrcf	??_lcd_cmd^0,f,c
  7864   0030DE  3203               	rrcf	??_lcd_cmd^0,f,c
  7865   0030E0  5083               	movf	131,w,c	;volatile
  7866   0030E2  1803               	xorwf	??_lcd_cmd^0,w,c
  7867   0030E4  0B7F               	andlw	-129
  7868   0030E6  1803               	xorwf	??_lcd_cmd^0,w,c
  7869   0030E8  6E83               	movwf	131,c	;volatile
  7870   0030EA                     
  7871                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  7872   0030EA  8484               	bsf	132,2,c	;volatile
  7873   0030EC                     
  7874                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  7875   0030EC  9484               	bcf	132,2,c	;volatile
  7876   0030EE  0012               	return		;funcret
  7877   0030F0                     __end_of_lcd_cmd:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _set_bit *****************
  7881 ;; Defined at:
  7882 ;;		line 36 in file "LCD4b_EXSTO.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  cmd             1    wreg     unsigned char 
  7885 ;;  comp            1    0[COMRAM] unsigned char 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  cmd             1    1[COMRAM] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      unsigned char 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7897 ;;      Params:         1       0       0       0       0       0       0
  7898 ;;      Locals:         1       0       0       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0
  7900 ;;      Totals:         2       0       0       0       0       0       0
  7901 ;;Total ram usage:        2 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_lcd_cmd
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text35
  7911   003900                     __ptext35:
  7912                           	callstack 0
  7913   003900                     _set_bit:
  7914                           	callstack 28
  7915                           
  7916                           ;incstack = 0
  7917                           ;set_bit@cmd stored from wreg
  7918   003900  6E02               	movwf	set_bit@cmd^0,c
  7919   003902                     
  7920                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  7921   003902  5002               	movf	set_bit@cmd^0,w,c
  7922   003904  1401               	andwf	set_bit@comp^0,w,c
  7923   003906  0900               	iorlw	0
  7924   003908  B4D8               	btfsc	status,2,c
  7925   00390A  EF89  F01C         	goto	u3731
  7926   00390E  EF8B  F01C         	goto	u3730
  7927   003912                     u3731:
  7928   003912  EF8E  F01C         	goto	l3416
  7929   003916                     u3730:
  7930   003916  0E01               	movlw	1
  7931   003918  EF8F  F01C         	goto	l23
  7932   00391C                     l3416:
  7933   00391C  0E00               	movlw	0
  7934   00391E                     l23:
  7935   00391E  0012               	return		;funcret
  7936   003920                     __end_of_set_bit:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _conv_AN0 *****************
  7940 ;; Defined at:
  7941 ;;		line 94 in file "Program_main.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7955 ;;      Params:         0       0       0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0
  7957 ;;      Temps:          2       0       0       0       0       0       0
  7958 ;;      Totals:         2       0       0       0       0       0       0
  7959 ;;Total ram usage:        2 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 1
  7962 ;; This function calls:
  7963 ;;		___flmul
  7964 ;;		___xxtofl
  7965 ;; This function is called by:
  7966 ;;		_main
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text36
  7971   0034DA                     __ptext36:
  7972                           	callstack 0
  7973   0034DA                     _conv_AN0:
  7974                           	callstack 29
  7975   0034DA                     
  7976                           ;Program_main.c: 96:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  7977   0034DA  0E0D               	movlw	13
  7978   0034DC                     u4667:
  7979   0034DC  2EE8               	decfsz	wreg,f,c
  7980   0034DE  D7FE               	bra	u4667
  7981   0034E0  F000               	nop	
  7982   0034E2                     
  7983                           ;Program_main.c: 97:     ADCON0bits.GO = 1;
  7984   0034E2  82C2               	bsf	194,1,c	;volatile
  7985   0034E4                     l90:
  7986   0034E4  B2C2               	btfsc	194,1,c	;volatile
  7987   0034E6  EF77  F01A         	goto	u4551
  7988   0034EA  EF79  F01A         	goto	u4550
  7989   0034EE                     u4551:
  7990   0034EE  EF72  F01A         	goto	l90
  7991   0034F2                     u4550:
  7992   0034F2                     
  7993                           ;Program_main.c: 99:     VdigADC_AN0 = ADRESH;
  7994   0034F2  CFC4 F090          	movff	4036,_VdigADC_AN0	;volatile
  7995   0034F6  0100               	movlb	0	; () banked
  7996   0034F8  6B91               	clrf	(_VdigADC_AN0+1)& (0+255),b
  7997   0034FA                     
  7998                           ; BSR set to: 0
  7999                           ;Program_main.c: 100:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
  8000   0034FA  5190               	movf	_VdigADC_AN0& (0+255),w,b
  8001   0034FC  6E28               	movwf	??_conv_AN0^0,c
  8002   0034FE  50C3               	movf	195,w,c	;volatile
  8003   003500  6F90               	movwf	_VdigADC_AN0& (0+255),b
  8004   003502  C028  F091         	movff	??_conv_AN0,_VdigADC_AN0+1
  8005   003506                     
  8006                           ; BSR set to: 0
  8007                           ;Program_main.c: 101:     Voltage_AN0 = VdigADC_AN0 * 4.89e-3;
  8008   003506  C090  F001         	movff	_VdigADC_AN0,___xxtofl@val
  8009   00350A  C091  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  8010   00350E  6A03               	clrf	(___xxtofl@val+2)^0,c
  8011   003510  6A04               	clrf	(___xxtofl@val+3)^0,c
  8012   003512  0E00               	movlw	0
  8013   003514  EC8D  F013         	call	___xxtofl
  8014   003518  C001  F00F         	movff	?___xxtofl,___flmul@b
  8015   00351C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8016   003520  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8017   003524  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8018   003528  0E4B               	movlw	75
  8019   00352A  6E13               	movwf	___flmul@a^0,c
  8020   00352C  0E3C               	movlw	60
  8021   00352E  6E14               	movwf	(___flmul@a+1)^0,c
  8022   003530  0EA0               	movlw	160
  8023   003532  6E15               	movwf	(___flmul@a+2)^0,c
  8024   003534  0E3B               	movlw	59
  8025   003536  6E16               	movwf	(___flmul@a+3)^0,c
  8026   003538  EC47  F00D         	call	___flmul	;wreg free
  8027   00353C  C00F  F088         	movff	?___flmul,_Voltage_AN0
  8028   003540  C010  F089         	movff	?___flmul+1,_Voltage_AN0+1
  8029   003544  C011  F08A         	movff	?___flmul+2,_Voltage_AN0+2
  8030   003548  C012  F08B         	movff	?___flmul+3,_Voltage_AN0+3
  8031   00354C  0012               	return		;funcret
  8032   00354E                     __end_of_conv_AN0:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function ___xxtofl *****************
  8036 ;; Defined at:
  8037 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  sign            1    wreg     unsigned char 
  8040 ;;  val             4    0[COMRAM] long 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  sign            1    8[COMRAM] unsigned char 
  8043 ;;  arg             4   10[COMRAM] unsigned long 
  8044 ;;  exp             1    9[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  4    0[COMRAM] unsigned char 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8054 ;;      Params:         4       0       0       0       0       0       0
  8055 ;;      Locals:         6       0       0       0       0       0       0
  8056 ;;      Temps:          4       0       0       0       0       0       0
  8057 ;;      Totals:        14       0       0       0       0       0       0
  8058 ;;Total ram usage:       14 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_conv_AN0
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text37
  8068   00271A                     __ptext37:
  8069                           	callstack 0
  8070   00271A                     ___xxtofl:
  8071                           	callstack 29
  8072                           
  8073                           ;incstack = 0
  8074                           ;___xxtofl@sign stored from wreg
  8075   00271A  6E09               	movwf	___xxtofl@sign^0,c
  8076   00271C  5009               	movf	___xxtofl@sign^0,w,c
  8077   00271E  B4D8               	btfsc	status,2,c
  8078   002720  EF94  F013         	goto	u4441
  8079   002724  EF96  F013         	goto	u4440
  8080   002728                     u4441:
  8081   002728  EFB8  F013         	goto	l767
  8082   00272C                     u4440:
  8083   00272C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8084   00272E  EF9D  F013         	goto	u4450
  8085   002732  EF9B  F013         	goto	u4451
  8086   002736                     u4451:
  8087   002736  EFB8  F013         	goto	l767
  8088   00273A                     u4450:
  8089   00273A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8090   00273E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8091   002742  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8092   002746  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8093   00274A  1E05               	comf	??___xxtofl^0,f,c
  8094   00274C  1E06               	comf	(??___xxtofl+1)^0,f,c
  8095   00274E  1E07               	comf	(??___xxtofl+2)^0,f,c
  8096   002750  1E08               	comf	(??___xxtofl+3)^0,f,c
  8097   002752  2A05               	incf	??___xxtofl^0,f,c
  8098   002754  0E00               	movlw	0
  8099   002756  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8100   002758  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8101   00275A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8102   00275C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8103   002760  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8104   002764  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8105   002768  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8106   00276C  EFC0  F013         	goto	l3946
  8107   002770                     l767:
  8108   002770  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8109   002774  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8110   002778  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8111   00277C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8112   002780                     l3946:
  8113   002780  5001               	movf	___xxtofl@val^0,w,c
  8114   002782  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8115   002784  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8116   002786  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8117   002788  A4D8               	btfss	status,2,c
  8118   00278A  EFC9  F013         	goto	u4461
  8119   00278E  EFCB  F013         	goto	u4460
  8120   002792                     u4461:
  8121   002792  EFD5  F013         	goto	l3952
  8122   002796                     u4460:
  8123   002796  0E00               	movlw	0
  8124   002798  6E01               	movwf	?___xxtofl^0,c
  8125   00279A  0E00               	movlw	0
  8126   00279C  6E02               	movwf	(?___xxtofl+1)^0,c
  8127   00279E  0E00               	movlw	0
  8128   0027A0  6E03               	movwf	(?___xxtofl+2)^0,c
  8129   0027A2  0E00               	movlw	0
  8130   0027A4  6E04               	movwf	(?___xxtofl+3)^0,c
  8131   0027A6  EF66  F014         	goto	l770
  8132   0027AA                     l3952:
  8133   0027AA  0E96               	movlw	150
  8134   0027AC  6E0A               	movwf	___xxtofl@exp^0,c
  8135   0027AE  EFDF  F013         	goto	l3956
  8136   0027B2                     l3954:
  8137   0027B2  2A0A               	incf	___xxtofl@exp^0,f,c
  8138   0027B4  90D8               	bcf	status,0,c
  8139   0027B6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8140   0027B8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8141   0027BA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8142   0027BC  320B               	rrcf	___xxtofl@arg^0,f,c
  8143   0027BE                     l3956:
  8144   0027BE  0E00               	movlw	0
  8145   0027C0  140B               	andwf	___xxtofl@arg^0,w,c
  8146   0027C2  6E05               	movwf	??___xxtofl^0,c
  8147   0027C4  0E00               	movlw	0
  8148   0027C6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8149   0027C8  6E06               	movwf	(??___xxtofl+1)^0,c
  8150   0027CA  0E00               	movlw	0
  8151   0027CC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8152   0027CE  6E07               	movwf	(??___xxtofl+2)^0,c
  8153   0027D0  0EFE               	movlw	254
  8154   0027D2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8155   0027D4  6E08               	movwf	(??___xxtofl+3)^0,c
  8156   0027D6  5005               	movf	??___xxtofl^0,w,c
  8157   0027D8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8158   0027DA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8159   0027DC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8160   0027DE  A4D8               	btfss	status,2,c
  8161   0027E0  EFF4  F013         	goto	u4471
  8162   0027E4  EFF6  F013         	goto	u4470
  8163   0027E8                     u4471:
  8164   0027E8  EFD9  F013         	goto	l3954
  8165   0027EC                     u4470:
  8166   0027EC  EF04  F014         	goto	l774
  8167   0027F0                     l3958:
  8168   0027F0  2A0A               	incf	___xxtofl@exp^0,f,c
  8169   0027F2  0E01               	movlw	1
  8170   0027F4  260B               	addwf	___xxtofl@arg^0,f,c
  8171   0027F6  0E00               	movlw	0
  8172   0027F8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8173   0027FA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8174   0027FC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8175   0027FE  90D8               	bcf	status,0,c
  8176   002800  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8177   002802  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8178   002804  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8179   002806  320B               	rrcf	___xxtofl@arg^0,f,c
  8180   002808                     l774:
  8181   002808  0E00               	movlw	0
  8182   00280A  140B               	andwf	___xxtofl@arg^0,w,c
  8183   00280C  6E05               	movwf	??___xxtofl^0,c
  8184   00280E  0E00               	movlw	0
  8185   002810  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8186   002812  6E06               	movwf	(??___xxtofl+1)^0,c
  8187   002814  0E00               	movlw	0
  8188   002816  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8189   002818  6E07               	movwf	(??___xxtofl+2)^0,c
  8190   00281A  0EFF               	movlw	255
  8191   00281C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8192   00281E  6E08               	movwf	(??___xxtofl+3)^0,c
  8193   002820  5005               	movf	??___xxtofl^0,w,c
  8194   002822  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8195   002824  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8196   002826  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8197   002828  A4D8               	btfss	status,2,c
  8198   00282A  EF19  F014         	goto	u4481
  8199   00282E  EF1B  F014         	goto	u4480
  8200   002832                     u4481:
  8201   002832  EFF8  F013         	goto	l3958
  8202   002836                     u4480:
  8203   002836  EF23  F014         	goto	l3966
  8204   00283A                     l3964:
  8205   00283A  060A               	decf	___xxtofl@exp^0,f,c
  8206   00283C  90D8               	bcf	status,0,c
  8207   00283E  360B               	rlcf	___xxtofl@arg^0,f,c
  8208   002840  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8209   002842  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8210   002844  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8211   002846                     l3966:
  8212   002846  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8213   002848  EF28  F014         	goto	u4491
  8214   00284C  EF2A  F014         	goto	u4490
  8215   002850                     u4491:
  8216   002850  EF32  F014         	goto	l781
  8217   002854                     u4490:
  8218   002854  0E02               	movlw	2
  8219   002856  600A               	cpfslt	___xxtofl@exp^0,c
  8220   002858  EF30  F014         	goto	u4501
  8221   00285C  EF32  F014         	goto	u4500
  8222   002860                     u4501:
  8223   002860  EF1D  F014         	goto	l3964
  8224   002864                     u4500:
  8225   002864                     l781:
  8226   002864  B00A               	btfsc	___xxtofl@exp^0,0,c
  8227   002866  EF37  F014         	goto	u4511
  8228   00286A  EF39  F014         	goto	u4510
  8229   00286E                     u4511:
  8230   00286E  EF3A  F014         	goto	l3972
  8231   002872                     u4510:
  8232   002872  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8233   002874                     l3972:
  8234   002874  90D8               	bcf	status,0,c
  8235   002876  320A               	rrcf	___xxtofl@exp^0,f,c
  8236   002878  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8237   00287C  6A06               	clrf	(??___xxtofl+1)^0,c
  8238   00287E  6A07               	clrf	(??___xxtofl+2)^0,c
  8239   002880  6A08               	clrf	(??___xxtofl+3)^0,c
  8240   002882  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8241   002886  6A07               	clrf	(??___xxtofl+2)^0,c
  8242   002888  6A06               	clrf	(??___xxtofl+1)^0,c
  8243   00288A  6A05               	clrf	??___xxtofl^0,c
  8244   00288C  5005               	movf	??___xxtofl^0,w,c
  8245   00288E  120B               	iorwf	___xxtofl@arg^0,f,c
  8246   002890  5006               	movf	(??___xxtofl+1)^0,w,c
  8247   002892  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8248   002894  5007               	movf	(??___xxtofl+2)^0,w,c
  8249   002896  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8250   002898  5008               	movf	(??___xxtofl+3)^0,w,c
  8251   00289A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8252   00289C  5009               	movf	___xxtofl@sign^0,w,c
  8253   00289E  B4D8               	btfsc	status,2,c
  8254   0028A0  EF54  F014         	goto	u4521
  8255   0028A4  EF56  F014         	goto	u4520
  8256   0028A8                     u4521:
  8257   0028A8  EF5E  F014         	goto	l3982
  8258   0028AC                     u4520:
  8259   0028AC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8260   0028AE  EF5D  F014         	goto	u4530
  8261   0028B2  EF5B  F014         	goto	u4531
  8262   0028B6                     u4531:
  8263   0028B6  EF5E  F014         	goto	l3982
  8264   0028BA                     u4530:
  8265   0028BA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8266   0028BC                     l3982:
  8267   0028BC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8268   0028C0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8269   0028C4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8270   0028C8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8271   0028CC                     l770:
  8272   0028CC  0012               	return		;funcret
  8273   0028CE                     __end_of___xxtofl:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function ___flmul *****************
  8277 ;; Defined at:
  8278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  b               4   14[COMRAM] unsigned char 
  8281 ;;  a               4   18[COMRAM] unsigned char 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  prod            4   33[COMRAM] struct .
  8284 ;;  grs             4   27[COMRAM] unsigned long 
  8285 ;;  temp            2   37[COMRAM] struct .
  8286 ;;  bexp            1   32[COMRAM] unsigned char 
  8287 ;;  aexp            1   31[COMRAM] unsigned char 
  8288 ;;  sign            1   26[COMRAM] unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  4   14[COMRAM] unsigned char 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, prodl, prodh
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8298 ;;      Params:         8       0       0       0       0       0       0
  8299 ;;      Locals:        13       0       0       0       0       0       0
  8300 ;;      Temps:          4       0       0       0       0       0       0
  8301 ;;      Totals:        25       0       0       0       0       0       0
  8302 ;;Total ram usage:       25 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_conv_AN0
  8308 ;;		_efgtoa
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text38
  8313   001A8E                     __ptext38:
  8314                           	callstack 0
  8315   001A8E                     ___flmul:
  8316                           	callstack 25
  8317   001A8E  5012               	movf	(___flmul@b+3)^0,w,c
  8318   001A90  0B80               	andlw	128
  8319   001A92  6E1B               	movwf	___flmul@sign^0,c
  8320   001A94  5012               	movf	(___flmul@b+3)^0,w,c
  8321   001A96  2412               	addwf	(___flmul@b+3)^0,w,c
  8322   001A98  6E21               	movwf	___flmul@bexp^0,c
  8323   001A9A  AE11               	btfss	(___flmul@b+2)^0,7,c
  8324   001A9C  EF52  F00D         	goto	u3091
  8325   001AA0  EF54  F00D         	goto	u3090
  8326   001AA4                     u3091:
  8327   001AA4  EF55  F00D         	goto	l3080
  8328   001AA8                     u3090:
  8329   001AA8  8021               	bsf	___flmul@bexp^0,0,c
  8330   001AAA                     l3080:
  8331   001AAA  5021               	movf	___flmul@bexp^0,w,c
  8332   001AAC  B4D8               	btfsc	status,2,c
  8333   001AAE  EF5B  F00D         	goto	u3101
  8334   001AB2  EF5D  F00D         	goto	u3100
  8335   001AB6                     u3101:
  8336   001AB6  EF70  F00D         	goto	l3088
  8337   001ABA                     u3100:
  8338   001ABA  2821               	incf	___flmul@bexp^0,w,c
  8339   001ABC  A4D8               	btfss	status,2,c
  8340   001ABE  EF63  F00D         	goto	u3111
  8341   001AC2  EF65  F00D         	goto	u3110
  8342   001AC6                     u3111:
  8343   001AC6  EF6D  F00D         	goto	l3086
  8344   001ACA                     u3110:
  8345   001ACA  0E00               	movlw	0
  8346   001ACC  6E0F               	movwf	___flmul@b^0,c
  8347   001ACE  0E00               	movlw	0
  8348   001AD0  6E10               	movwf	(___flmul@b+1)^0,c
  8349   001AD2  0E00               	movlw	0
  8350   001AD4  6E11               	movwf	(___flmul@b+2)^0,c
  8351   001AD6  0E00               	movlw	0
  8352   001AD8  6E12               	movwf	(___flmul@b+3)^0,c
  8353   001ADA                     l3086:
  8354   001ADA  8E11               	bsf	(___flmul@b+2)^0,7,c
  8355   001ADC  EF78  F00D         	goto	l3090
  8356   001AE0                     l3088:
  8357   001AE0  0E00               	movlw	0
  8358   001AE2  6E0F               	movwf	___flmul@b^0,c
  8359   001AE4  0E00               	movlw	0
  8360   001AE6  6E10               	movwf	(___flmul@b+1)^0,c
  8361   001AE8  0E00               	movlw	0
  8362   001AEA  6E11               	movwf	(___flmul@b+2)^0,c
  8363   001AEC  0E00               	movlw	0
  8364   001AEE  6E12               	movwf	(___flmul@b+3)^0,c
  8365   001AF0                     l3090:
  8366   001AF0  5016               	movf	(___flmul@a+3)^0,w,c
  8367   001AF2  0B80               	andlw	128
  8368   001AF4  1A1B               	xorwf	___flmul@sign^0,f,c
  8369   001AF6  5016               	movf	(___flmul@a+3)^0,w,c
  8370   001AF8  2416               	addwf	(___flmul@a+3)^0,w,c
  8371   001AFA  6E20               	movwf	___flmul@aexp^0,c
  8372   001AFC  AE15               	btfss	(___flmul@a+2)^0,7,c
  8373   001AFE  EF83  F00D         	goto	u3121
  8374   001B02  EF85  F00D         	goto	u3120
  8375   001B06                     u3121:
  8376   001B06  EF86  F00D         	goto	l3098
  8377   001B0A                     u3120:
  8378   001B0A  8020               	bsf	___flmul@aexp^0,0,c
  8379   001B0C                     l3098:
  8380   001B0C  5020               	movf	___flmul@aexp^0,w,c
  8381   001B0E  B4D8               	btfsc	status,2,c
  8382   001B10  EF8C  F00D         	goto	u3131
  8383   001B14  EF8E  F00D         	goto	u3130
  8384   001B18                     u3131:
  8385   001B18  EFA1  F00D         	goto	l3106
  8386   001B1C                     u3130:
  8387   001B1C  2820               	incf	___flmul@aexp^0,w,c
  8388   001B1E  A4D8               	btfss	status,2,c
  8389   001B20  EF94  F00D         	goto	u3141
  8390   001B24  EF96  F00D         	goto	u3140
  8391   001B28                     u3141:
  8392   001B28  EF9E  F00D         	goto	l3104
  8393   001B2C                     u3140:
  8394   001B2C  0E00               	movlw	0
  8395   001B2E  6E13               	movwf	___flmul@a^0,c
  8396   001B30  0E00               	movlw	0
  8397   001B32  6E14               	movwf	(___flmul@a+1)^0,c
  8398   001B34  0E00               	movlw	0
  8399   001B36  6E15               	movwf	(___flmul@a+2)^0,c
  8400   001B38  0E00               	movlw	0
  8401   001B3A  6E16               	movwf	(___flmul@a+3)^0,c
  8402   001B3C                     l3104:
  8403   001B3C  8E15               	bsf	(___flmul@a+2)^0,7,c
  8404   001B3E  EFA9  F00D         	goto	l726
  8405   001B42                     l3106:
  8406   001B42  0E00               	movlw	0
  8407   001B44  6E13               	movwf	___flmul@a^0,c
  8408   001B46  0E00               	movlw	0
  8409   001B48  6E14               	movwf	(___flmul@a+1)^0,c
  8410   001B4A  0E00               	movlw	0
  8411   001B4C  6E15               	movwf	(___flmul@a+2)^0,c
  8412   001B4E  0E00               	movlw	0
  8413   001B50  6E16               	movwf	(___flmul@a+3)^0,c
  8414   001B52                     l726:
  8415   001B52  5020               	movf	___flmul@aexp^0,w,c
  8416   001B54  B4D8               	btfsc	status,2,c
  8417   001B56  EFAF  F00D         	goto	u3151
  8418   001B5A  EFB1  F00D         	goto	u3150
  8419   001B5E                     u3151:
  8420   001B5E  EFB9  F00D         	goto	l3110
  8421   001B62                     u3150:
  8422   001B62  5021               	movf	___flmul@bexp^0,w,c
  8423   001B64  A4D8               	btfss	status,2,c
  8424   001B66  EFB7  F00D         	goto	u3161
  8425   001B6A  EFB9  F00D         	goto	u3160
  8426   001B6E                     u3161:
  8427   001B6E  EFC3  F00D         	goto	l3114
  8428   001B72                     u3160:
  8429   001B72                     l3110:
  8430   001B72  0E00               	movlw	0
  8431   001B74  6E0F               	movwf	?___flmul^0,c
  8432   001B76  0E00               	movlw	0
  8433   001B78  6E10               	movwf	(?___flmul+1)^0,c
  8434   001B7A  0E00               	movlw	0
  8435   001B7C  6E11               	movwf	(?___flmul+2)^0,c
  8436   001B7E  0E00               	movlw	0
  8437   001B80  6E12               	movwf	(?___flmul+3)^0,c
  8438   001B82  EF5B  F00F         	goto	l730
  8439   001B86                     l3114:
  8440   001B86  5015               	movf	(___flmul@a+2)^0,w,c
  8441   001B88  020F               	mulwf	___flmul@b^0,c
  8442   001B8A  CFF3 F026          	movff	prodl,___flmul@temp
  8443   001B8E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8444   001B92  5026               	movf	___flmul@temp^0,w,c
  8445   001B94  6E1C               	movwf	___flmul@grs^0,c
  8446   001B96  6A1D               	clrf	(___flmul@grs+1)^0,c
  8447   001B98  6A1E               	clrf	(___flmul@grs+2)^0,c
  8448   001B9A  6A1F               	clrf	(___flmul@grs+3)^0,c
  8449   001B9C  5027               	movf	(___flmul@temp+1)^0,w,c
  8450   001B9E  6E22               	movwf	___flmul@prod^0,c
  8451   001BA0  6A23               	clrf	(___flmul@prod+1)^0,c
  8452   001BA2  6A24               	clrf	(___flmul@prod+2)^0,c
  8453   001BA4  6A25               	clrf	(___flmul@prod+3)^0,c
  8454   001BA6  5014               	movf	(___flmul@a+1)^0,w,c
  8455   001BA8  0210               	mulwf	(___flmul@b+1)^0,c
  8456   001BAA  CFF3 F026          	movff	prodl,___flmul@temp
  8457   001BAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8458   001BB2  5026               	movf	___flmul@temp^0,w,c
  8459   001BB4  261C               	addwf	___flmul@grs^0,f,c
  8460   001BB6  0E00               	movlw	0
  8461   001BB8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8462   001BBA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8463   001BBC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8464   001BBE  5027               	movf	(___flmul@temp+1)^0,w,c
  8465   001BC0  2622               	addwf	___flmul@prod^0,f,c
  8466   001BC2  0E00               	movlw	0
  8467   001BC4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8468   001BC6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8469   001BC8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8470   001BCA  5013               	movf	___flmul@a^0,w,c
  8471   001BCC  0211               	mulwf	(___flmul@b+2)^0,c
  8472   001BCE  CFF3 F026          	movff	prodl,___flmul@temp
  8473   001BD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  8474   001BD6  5026               	movf	___flmul@temp^0,w,c
  8475   001BD8  261C               	addwf	___flmul@grs^0,f,c
  8476   001BDA  0E00               	movlw	0
  8477   001BDC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8478   001BDE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8479   001BE0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8480   001BE2  5027               	movf	(___flmul@temp+1)^0,w,c
  8481   001BE4  2622               	addwf	___flmul@prod^0,f,c
  8482   001BE6  0E00               	movlw	0
  8483   001BE8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8484   001BEA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8485   001BEC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8486   001BEE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8487   001BF2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8488   001BF6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8489   001BFA  6A1C               	clrf	___flmul@grs^0,c
  8490   001BFC  5013               	movf	___flmul@a^0,w,c
  8491   001BFE  0210               	mulwf	(___flmul@b+1)^0,c
  8492   001C00  CFF3 F026          	movff	prodl,___flmul@temp
  8493   001C04  CFF4 F027          	movff	prodh,___flmul@temp+1
  8494   001C08  5026               	movf	___flmul@temp^0,w,c
  8495   001C0A  261C               	addwf	___flmul@grs^0,f,c
  8496   001C0C  5027               	movf	(___flmul@temp+1)^0,w,c
  8497   001C0E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8498   001C10  0E00               	movlw	0
  8499   001C12  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8500   001C14  0E00               	movlw	0
  8501   001C16  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8502   001C18  5014               	movf	(___flmul@a+1)^0,w,c
  8503   001C1A  020F               	mulwf	___flmul@b^0,c
  8504   001C1C  CFF3 F026          	movff	prodl,___flmul@temp
  8505   001C20  CFF4 F027          	movff	prodh,___flmul@temp+1
  8506   001C24  5026               	movf	___flmul@temp^0,w,c
  8507   001C26  261C               	addwf	___flmul@grs^0,f,c
  8508   001C28  5027               	movf	(___flmul@temp+1)^0,w,c
  8509   001C2A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8510   001C2C  0E00               	movlw	0
  8511   001C2E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8512   001C30  0E00               	movlw	0
  8513   001C32  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8514   001C34  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8515   001C38  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8516   001C3C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8517   001C40  6A1C               	clrf	___flmul@grs^0,c
  8518   001C42  5013               	movf	___flmul@a^0,w,c
  8519   001C44  020F               	mulwf	___flmul@b^0,c
  8520   001C46  CFF3 F026          	movff	prodl,___flmul@temp
  8521   001C4A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8522   001C4E  5026               	movf	___flmul@temp^0,w,c
  8523   001C50  261C               	addwf	___flmul@grs^0,f,c
  8524   001C52  5027               	movf	(___flmul@temp+1)^0,w,c
  8525   001C54  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8526   001C56  0E00               	movlw	0
  8527   001C58  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8528   001C5A  0E00               	movlw	0
  8529   001C5C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8530   001C5E  5015               	movf	(___flmul@a+2)^0,w,c
  8531   001C60  0210               	mulwf	(___flmul@b+1)^0,c
  8532   001C62  CFF3 F026          	movff	prodl,___flmul@temp
  8533   001C66  CFF4 F027          	movff	prodh,___flmul@temp+1
  8534   001C6A  5026               	movf	___flmul@temp^0,w,c
  8535   001C6C  2622               	addwf	___flmul@prod^0,f,c
  8536   001C6E  5027               	movf	(___flmul@temp+1)^0,w,c
  8537   001C70  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8538   001C72  0E00               	movlw	0
  8539   001C74  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8540   001C76  0E00               	movlw	0
  8541   001C78  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8542   001C7A  5014               	movf	(___flmul@a+1)^0,w,c
  8543   001C7C  0211               	mulwf	(___flmul@b+2)^0,c
  8544   001C7E  CFF3 F026          	movff	prodl,___flmul@temp
  8545   001C82  CFF4 F027          	movff	prodh,___flmul@temp+1
  8546   001C86  5026               	movf	___flmul@temp^0,w,c
  8547   001C88  2622               	addwf	___flmul@prod^0,f,c
  8548   001C8A  5027               	movf	(___flmul@temp+1)^0,w,c
  8549   001C8C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8550   001C8E  0E00               	movlw	0
  8551   001C90  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8552   001C92  0E00               	movlw	0
  8553   001C94  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8554   001C96  5015               	movf	(___flmul@a+2)^0,w,c
  8555   001C98  0211               	mulwf	(___flmul@b+2)^0,c
  8556   001C9A  CFF3 F026          	movff	prodl,___flmul@temp
  8557   001C9E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8558   001CA2  5026               	movf	___flmul@temp^0,w,c
  8559   001CA4  6E17               	movwf	??___flmul^0,c
  8560   001CA6  5027               	movf	(___flmul@temp+1)^0,w,c
  8561   001CA8  6E18               	movwf	(??___flmul+1)^0,c
  8562   001CAA  6A19               	clrf	(??___flmul+2)^0,c
  8563   001CAC  6A1A               	clrf	(??___flmul+3)^0,c
  8564   001CAE  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8565   001CB2  C018  F019         	movff	??___flmul+1,??___flmul+2
  8566   001CB6  C017  F018         	movff	??___flmul,??___flmul+1
  8567   001CBA  6A17               	clrf	??___flmul^0,c
  8568   001CBC  5017               	movf	??___flmul^0,w,c
  8569   001CBE  2622               	addwf	___flmul@prod^0,f,c
  8570   001CC0  5018               	movf	(??___flmul+1)^0,w,c
  8571   001CC2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8572   001CC4  5019               	movf	(??___flmul+2)^0,w,c
  8573   001CC6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8574   001CC8  501A               	movf	(??___flmul+3)^0,w,c
  8575   001CCA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8576   001CCC  C01C  F017         	movff	___flmul@grs,??___flmul
  8577   001CD0  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8578   001CD4  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8579   001CD8  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8580   001CDC  0E19               	movlw	25
  8581   001CDE  EF76  F00E         	goto	u3170
  8582   001CE2                     u3175:
  8583   001CE2  90D8               	bcf	status,0,c
  8584   001CE4  321A               	rrcf	(??___flmul+3)^0,f,c
  8585   001CE6  3219               	rrcf	(??___flmul+2)^0,f,c
  8586   001CE8  3218               	rrcf	(??___flmul+1)^0,f,c
  8587   001CEA  3217               	rrcf	??___flmul^0,f,c
  8588   001CEC                     u3170:
  8589   001CEC  2EE8               	decfsz	wreg,f,c
  8590   001CEE  EF71  F00E         	goto	u3175
  8591   001CF2  5017               	movf	??___flmul^0,w,c
  8592   001CF4  2622               	addwf	___flmul@prod^0,f,c
  8593   001CF6  5018               	movf	(??___flmul+1)^0,w,c
  8594   001CF8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8595   001CFA  5019               	movf	(??___flmul+2)^0,w,c
  8596   001CFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8597   001CFE  501A               	movf	(??___flmul+3)^0,w,c
  8598   001D00  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8599   001D02  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8600   001D06  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8601   001D0A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8602   001D0E  6A1C               	clrf	___flmul@grs^0,c
  8603   001D10  5020               	movf	___flmul@aexp^0,w,c
  8604   001D12  C021  F017         	movff	___flmul@bexp,??___flmul
  8605   001D16  6A18               	clrf	(??___flmul+1)^0,c
  8606   001D18  2617               	addwf	??___flmul^0,f,c
  8607   001D1A  0E00               	movlw	0
  8608   001D1C  2218               	addwfc	(??___flmul+1)^0,f,c
  8609   001D1E  0E82               	movlw	130
  8610   001D20  2417               	addwf	??___flmul^0,w,c
  8611   001D22  6E26               	movwf	___flmul@temp^0,c
  8612   001D24  0EFF               	movlw	255
  8613   001D26  2018               	addwfc	(??___flmul+1)^0,w,c
  8614   001D28  6E27               	movwf	(___flmul@temp+1)^0,c
  8615   001D2A  EFAC  F00E         	goto	l3162
  8616   001D2E                     l3156:
  8617   001D2E  90D8               	bcf	status,0,c
  8618   001D30  3622               	rlcf	___flmul@prod^0,f,c
  8619   001D32  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8620   001D34  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8621   001D36  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8622   001D38  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8623   001D3A  EFA1  F00E         	goto	u3181
  8624   001D3E  EFA3  F00E         	goto	u3180
  8625   001D42                     u3181:
  8626   001D42  EFA4  F00E         	goto	l733
  8627   001D46                     u3180:
  8628   001D46  8022               	bsf	___flmul@prod^0,0,c
  8629   001D48                     l733:
  8630   001D48  90D8               	bcf	status,0,c
  8631   001D4A  361C               	rlcf	___flmul@grs^0,f,c
  8632   001D4C  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8633   001D4E  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8634   001D50  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8635   001D52  0626               	decf	___flmul@temp^0,f,c
  8636   001D54  A0D8               	btfss	status,0,c
  8637   001D56  0627               	decf	(___flmul@temp+1)^0,f,c
  8638   001D58                     l3162:
  8639   001D58  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8640   001D5A  EFB1  F00E         	goto	u3191
  8641   001D5E  EFB3  F00E         	goto	u3190
  8642   001D62                     u3191:
  8643   001D62  EF97  F00E         	goto	l3156
  8644   001D66                     u3190:
  8645   001D66  0E00               	movlw	0
  8646   001D68  6E20               	movwf	___flmul@aexp^0,c
  8647   001D6A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8648   001D6C  EFBA  F00E         	goto	u3201
  8649   001D70  EFBC  F00E         	goto	u3200
  8650   001D74                     u3201:
  8651   001D74  EFE0  F00E         	goto	l735
  8652   001D78                     u3200:
  8653   001D78  0EFF               	movlw	255
  8654   001D7A  141C               	andwf	___flmul@grs^0,w,c
  8655   001D7C  6E17               	movwf	??___flmul^0,c
  8656   001D7E  0EFF               	movlw	255
  8657   001D80  141D               	andwf	(___flmul@grs+1)^0,w,c
  8658   001D82  6E18               	movwf	(??___flmul+1)^0,c
  8659   001D84  0EFF               	movlw	255
  8660   001D86  141E               	andwf	(___flmul@grs+2)^0,w,c
  8661   001D88  6E19               	movwf	(??___flmul+2)^0,c
  8662   001D8A  0E7F               	movlw	127
  8663   001D8C  141F               	andwf	(___flmul@grs+3)^0,w,c
  8664   001D8E  6E1A               	movwf	(??___flmul+3)^0,c
  8665   001D90  5017               	movf	??___flmul^0,w,c
  8666   001D92  1018               	iorwf	(??___flmul+1)^0,w,c
  8667   001D94  1019               	iorwf	(??___flmul+2)^0,w,c
  8668   001D96  101A               	iorwf	(??___flmul+3)^0,w,c
  8669   001D98  B4D8               	btfsc	status,2,c
  8670   001D9A  EFD1  F00E         	goto	u3211
  8671   001D9E  EFD3  F00E         	goto	u3210
  8672   001DA2                     u3211:
  8673   001DA2  EFD7  F00E         	goto	l736
  8674   001DA6                     u3210:
  8675   001DA6                     l3170:
  8676   001DA6  0E01               	movlw	1
  8677   001DA8  6E20               	movwf	___flmul@aexp^0,c
  8678   001DAA  EFE0  F00E         	goto	l735
  8679   001DAE                     l736:
  8680   001DAE  A022               	btfss	___flmul@prod^0,0,c
  8681   001DB0  EFDC  F00E         	goto	u3221
  8682   001DB4  EFDE  F00E         	goto	u3220
  8683   001DB8                     u3221:
  8684   001DB8  EFE0  F00E         	goto	l735
  8685   001DBC                     u3220:
  8686   001DBC  EFD3  F00E         	goto	l3170
  8687   001DC0                     l735:
  8688   001DC0  5020               	movf	___flmul@aexp^0,w,c
  8689   001DC2  B4D8               	btfsc	status,2,c
  8690   001DC4  EFE6  F00E         	goto	u3231
  8691   001DC8  EFE8  F00E         	goto	u3230
  8692   001DCC                     u3231:
  8693   001DCC  EF0C  F00F         	goto	l3182
  8694   001DD0                     u3230:
  8695   001DD0  0E01               	movlw	1
  8696   001DD2  2622               	addwf	___flmul@prod^0,f,c
  8697   001DD4  0E00               	movlw	0
  8698   001DD6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8699   001DD8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8700   001DDA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8701   001DDC  A025               	btfss	(___flmul@prod+3)^0,0,c
  8702   001DDE  EFF3  F00E         	goto	u3241
  8703   001DE2  EFF5  F00E         	goto	u3240
  8704   001DE6                     u3241:
  8705   001DE6  EF0C  F00F         	goto	l3182
  8706   001DEA                     u3240:
  8707   001DEA  C022  F017         	movff	___flmul@prod,??___flmul
  8708   001DEE  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8709   001DF2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8710   001DF6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8711   001DFA  341A               	rlcf	(??___flmul+3)^0,w,c
  8712   001DFC  321A               	rrcf	(??___flmul+3)^0,f,c
  8713   001DFE  3219               	rrcf	(??___flmul+2)^0,f,c
  8714   001E00  3218               	rrcf	(??___flmul+1)^0,f,c
  8715   001E02  3217               	rrcf	??___flmul^0,f,c
  8716   001E04  C017  F022         	movff	??___flmul,___flmul@prod
  8717   001E08  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8718   001E0C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8719   001E10  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8720   001E14  4A26               	infsnz	___flmul@temp^0,f,c
  8721   001E16  2A27               	incf	(___flmul@temp+1)^0,f,c
  8722   001E18                     l3182:
  8723   001E18  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8724   001E1A  EF17  F00F         	goto	u3251
  8725   001E1E  5027               	movf	(___flmul@temp+1)^0,w,c
  8726   001E20  E108               	bnz	u3250
  8727   001E22  2826               	incf	___flmul@temp^0,w,c
  8728   001E24  A0D8               	btfss	status,0,c
  8729   001E26  EF17  F00F         	goto	u3251
  8730   001E2A  EF19  F00F         	goto	u3250
  8731   001E2E                     u3251:
  8732   001E2E  EF23  F00F         	goto	l3186
  8733   001E32                     u3250:
  8734   001E32  0E00               	movlw	0
  8735   001E34  6E22               	movwf	___flmul@prod^0,c
  8736   001E36  0E00               	movlw	0
  8737   001E38  6E23               	movwf	(___flmul@prod+1)^0,c
  8738   001E3A  0E80               	movlw	128
  8739   001E3C  6E24               	movwf	(___flmul@prod+2)^0,c
  8740   001E3E  0E7F               	movlw	127
  8741   001E40  6E25               	movwf	(___flmul@prod+3)^0,c
  8742   001E42  EF51  F00F         	goto	l3198
  8743   001E46                     l3186:
  8744   001E46  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8745   001E48  EF30  F00F         	goto	u3260
  8746   001E4C  5027               	movf	(___flmul@temp+1)^0,w,c
  8747   001E4E  E106               	bnz	u3261
  8748   001E50  0426               	decf	___flmul@temp^0,w,c
  8749   001E52  B0D8               	btfsc	status,0,c
  8750   001E54  EF2E  F00F         	goto	u3261
  8751   001E58  EF30  F00F         	goto	u3260
  8752   001E5C                     u3261:
  8753   001E5C  EF3C  F00F         	goto	l743
  8754   001E60                     u3260:
  8755   001E60  0E00               	movlw	0
  8756   001E62  6E22               	movwf	___flmul@prod^0,c
  8757   001E64  0E00               	movlw	0
  8758   001E66  6E23               	movwf	(___flmul@prod+1)^0,c
  8759   001E68  0E00               	movlw	0
  8760   001E6A  6E24               	movwf	(___flmul@prod+2)^0,c
  8761   001E6C  0E00               	movlw	0
  8762   001E6E  6E25               	movwf	(___flmul@prod+3)^0,c
  8763   001E70  0E00               	movlw	0
  8764   001E72  6E1B               	movwf	___flmul@sign^0,c
  8765   001E74  EF51  F00F         	goto	l3198
  8766   001E78                     l743:
  8767   001E78  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8768   001E7C  0EFF               	movlw	255
  8769   001E7E  1622               	andwf	___flmul@prod^0,f,c
  8770   001E80  0EFF               	movlw	255
  8771   001E82  1623               	andwf	(___flmul@prod+1)^0,f,c
  8772   001E84  0E7F               	movlw	127
  8773   001E86  1624               	andwf	(___flmul@prod+2)^0,f,c
  8774   001E88  0E00               	movlw	0
  8775   001E8A  1625               	andwf	(___flmul@prod+3)^0,f,c
  8776   001E8C  A021               	btfss	___flmul@bexp^0,0,c
  8777   001E8E  EF4B  F00F         	goto	u3271
  8778   001E92  EF4D  F00F         	goto	u3270
  8779   001E96                     u3271:
  8780   001E96  EF4E  F00F         	goto	l3196
  8781   001E9A                     u3270:
  8782   001E9A  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8783   001E9C                     l3196:
  8784   001E9C  90D8               	bcf	status,0,c
  8785   001E9E  3021               	rrcf	___flmul@bexp^0,w,c
  8786   001EA0  6E25               	movwf	(___flmul@prod+3)^0,c
  8787   001EA2                     l3198:
  8788   001EA2  501B               	movf	___flmul@sign^0,w,c
  8789   001EA4  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8790   001EA6  C022  F00F         	movff	___flmul@prod,?___flmul
  8791   001EAA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8792   001EAE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8793   001EB2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8794   001EB6                     l730:
  8795   001EB6  0012               	return		;funcret
  8796   001EB8                     __end_of___flmul:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _config_IO *****************
  8800 ;; Defined at:
  8801 ;;		line 82 in file "Program_main.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8815 ;;      Params:         0       0       0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used: 1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_main
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text39
  8829   003956                     __ptext39:
  8830                           	callstack 0
  8831   003956                     _config_IO:
  8832                           	callstack 30
  8833   003956                     
  8834                           ;Program_main.c: 84:     TRISB = 0X01;
  8835   003956  0E01               	movlw	1
  8836   003958  6E93               	movwf	147,c	;volatile
  8837   00395A  0012               	return		;funcret
  8838   00395C                     __end_of_config_IO:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _config_FOSC *****************
  8842 ;; Defined at:
  8843 ;;		line 76 in file "Program_main.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;		None
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8857 ;;      Params:         0       0       0       0       0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0
  8860 ;;      Totals:         0       0       0       0       0       0       0
  8861 ;;Total ram usage:        0 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text40
  8871   00394C                     __ptext40:
  8872                           	callstack 0
  8873   00394C                     _config_FOSC:
  8874                           	callstack 30
  8875   00394C                     
  8876                           ;Program_main.c: 78:     OSCCON = 0X00;
  8877   00394C  0E00               	movlw	0
  8878   00394E  6ED3               	movwf	211,c	;volatile
  8879                           
  8880                           ;Program_main.c: 79:     OSCTUNE = 0X00;
  8881   003950  0E00               	movlw	0
  8882   003952  6E9B               	movwf	155,c	;volatile
  8883   003954  0012               	return		;funcret
  8884   003956                     __end_of_config_FOSC:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _config_ADC *****************
  8888 ;; Defined at:
  8889 ;;		line 87 in file "Program_main.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8903 ;;      Params:         0       0       0       0       0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0
  8906 ;;      Totals:         0       0       0       0       0       0       0
  8907 ;;Total ram usage:        0 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text41
  8917   00393E                     __ptext41:
  8918                           	callstack 0
  8919   00393E                     _config_ADC:
  8920                           	callstack 30
  8921   00393E                     
  8922                           ;Program_main.c: 89:     ADCON0 = 0X01;
  8923   00393E  0E01               	movlw	1
  8924   003940  6EC2               	movwf	194,c	;volatile
  8925                           
  8926                           ;Program_main.c: 90:     ADCON1 = 0X0E;
  8927   003942  0E0E               	movlw	14
  8928   003944  6EC1               	movwf	193,c	;volatile
  8929                           
  8930                           ;Program_main.c: 91:     ADCON2 = 0X87;
  8931   003946  0E87               	movlw	135
  8932   003948  6EC0               	movwf	192,c	;volatile
  8933   00394A  0012               	return		;funcret
  8934   00394C                     __end_of_config_ADC:
  8935                           	callstack 0
  8936                           
  8937                           	psect	rparam
  8938   000000                     
  8939                           	psect	idloc
  8940                           
  8941                           ;Config register IDLOC0 @ 0x200000
  8942                           ;	unspecified, using default values
  8943   200000                     	org	2097152
  8944   200000  FF                 	db	255
  8945                           
  8946                           ;Config register IDLOC1 @ 0x200001
  8947                           ;	unspecified, using default values
  8948   200001                     	org	2097153
  8949   200001  FF                 	db	255
  8950                           
  8951                           ;Config register IDLOC2 @ 0x200002
  8952                           ;	unspecified, using default values
  8953   200002                     	org	2097154
  8954   200002  FF                 	db	255
  8955                           
  8956                           ;Config register IDLOC3 @ 0x200003
  8957                           ;	unspecified, using default values
  8958   200003                     	org	2097155
  8959   200003  FF                 	db	255
  8960                           
  8961                           ;Config register IDLOC4 @ 0x200004
  8962                           ;	unspecified, using default values
  8963   200004                     	org	2097156
  8964   200004  FF                 	db	255
  8965                           
  8966                           ;Config register IDLOC5 @ 0x200005
  8967                           ;	unspecified, using default values
  8968   200005                     	org	2097157
  8969   200005  FF                 	db	255
  8970                           
  8971                           ;Config register IDLOC6 @ 0x200006
  8972                           ;	unspecified, using default values
  8973   200006                     	org	2097158
  8974   200006  FF                 	db	255
  8975                           
  8976                           ;Config register IDLOC7 @ 0x200007
  8977                           ;	unspecified, using default values
  8978   200007                     	org	2097159
  8979   200007  FF                 	db	255
  8980                           
  8981                           	psect	config
  8982                           
  8983                           ; Padding undefined space
  8984   300000                     	org	3145728
  8985   300000  FF                 	db	255
  8986                           
  8987                           ;Config register CONFIG1H @ 0x300001
  8988                           ;	Oscillator Selection bits
  8989                           ;	OSC = HS, HS oscillator
  8990                           ;	Fail-Safe Clock Monitor Enable bit
  8991                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8992                           ;	Internal/External Oscillator Switchover bit
  8993                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8994   300001                     	org	3145729
  8995   300001  02                 	db	2
  8996                           
  8997                           ;Config register CONFIG2L @ 0x300002
  8998                           ;	Power-up Timer Enable bit
  8999                           ;	PWRT = OFF, PWRT disabled
  9000                           ;	Brown-out Reset Enable bits
  9001                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9002                           ;	Brown Out Reset Voltage bits
  9003                           ;	BORV = 3, Minimum setting
  9004   300002                     	org	3145730
  9005   300002  1F                 	db	31
  9006                           
  9007                           ;Config register CONFIG2H @ 0x300003
  9008                           ;	Watchdog Timer Enable bit
  9009                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9010                           ;	Watchdog Timer Postscale Select bits
  9011                           ;	WDTPS = 32768, 1:32768
  9012   300003                     	org	3145731
  9013   300003  1E                 	db	30
  9014                           
  9015                           ; Padding undefined space
  9016   300004                     	org	3145732
  9017   300004  FF                 	db	255
  9018                           
  9019                           ;Config register CONFIG3H @ 0x300005
  9020                           ;	CCP2 MUX bit
  9021                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9022                           ;	PORTB A/D Enable bit
  9023                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9024                           ;	Low-Power Timer1 Oscillator Enable bit
  9025                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9026                           ;	MCLR Pin Enable bit
  9027                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9028   300005                     	org	3145733
  9029   300005  81                 	db	129
  9030                           
  9031                           ;Config register CONFIG4L @ 0x300006
  9032                           ;	Stack Full/Underflow Reset Enable bit
  9033                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9034                           ;	Single-Supply ICSP Enable bit
  9035                           ;	LVP = OFF, Single-Supply ICSP disabled
  9036                           ;	Extended Instruction Set Enable bit
  9037                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9038                           ;	Background Debugger Enable bit
  9039                           ;	DEBUG = 0x1, unprogrammed default
  9040   300006                     	org	3145734
  9041   300006  81                 	db	129
  9042                           
  9043                           ; Padding undefined space
  9044   300007                     	org	3145735
  9045   300007  FF                 	db	255
  9046                           
  9047                           ;Config register CONFIG5L @ 0x300008
  9048                           ;	Code Protection bit
  9049                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9050                           ;	Code Protection bit
  9051                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9052                           ;	Code Protection bit
  9053                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  9054                           ;	Code Protection bit
  9055                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  9056   300008                     	org	3145736
  9057   300008  0F                 	db	15
  9058                           
  9059                           ;Config register CONFIG5H @ 0x300009
  9060                           ;	Boot Block Code Protection bit
  9061                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9062                           ;	Data EEPROM Code Protection bit
  9063                           ;	CPD = OFF, Data EEPROM not code-protected
  9064   300009                     	org	3145737
  9065   300009  C0                 	db	192
  9066                           
  9067                           ;Config register CONFIG6L @ 0x30000A
  9068                           ;	Write Protection bit
  9069                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9070                           ;	Write Protection bit
  9071                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9072                           ;	Write Protection bit
  9073                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  9074                           ;	Write Protection bit
  9075                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  9076   30000A                     	org	3145738
  9077   30000A  0F                 	db	15
  9078                           
  9079                           ;Config register CONFIG6H @ 0x30000B
  9080                           ;	Configuration Register Write Protection bit
  9081                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9082                           ;	Boot Block Write Protection bit
  9083                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9084                           ;	Data EEPROM Write Protection bit
  9085                           ;	WRTD = OFF, Data EEPROM not write-protected
  9086   30000B                     	org	3145739
  9087   30000B  E0                 	db	224
  9088                           
  9089                           ;Config register CONFIG7L @ 0x30000C
  9090                           ;	Table Read Protection bit
  9091                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9092                           ;	Table Read Protection bit
  9093                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9094                           ;	Table Read Protection bit
  9095                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9096                           ;	Table Read Protection bit
  9097                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9098   30000C                     	org	3145740
  9099   30000C  0F                 	db	15
  9100                           
  9101                           ;Config register CONFIG7H @ 0x30000D
  9102                           ;	Boot Block Table Read Protection bit
  9103                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9104   30000D                     	org	3145741
  9105   30000D  40                 	db	64
  9106                           tosu	equ	0xFFF
  9107                           tosh	equ	0xFFE
  9108                           tosl	equ	0xFFD
  9109                           stkptr	equ	0xFFC
  9110                           pclatu	equ	0xFFB
  9111                           pclath	equ	0xFFA
  9112                           pcl	equ	0xFF9
  9113                           tblptru	equ	0xFF8
  9114                           tblptrh	equ	0xFF7
  9115                           tblptrl	equ	0xFF6
  9116                           tablat	equ	0xFF5
  9117                           prodh	equ	0xFF4
  9118                           prodl	equ	0xFF3
  9119                           indf0	equ	0xFEF
  9120                           postinc0	equ	0xFEE
  9121                           postdec0	equ	0xFED
  9122                           preinc0	equ	0xFEC
  9123                           plusw0	equ	0xFEB
  9124                           fsr0h	equ	0xFEA
  9125                           fsr0l	equ	0xFE9
  9126                           wreg	equ	0xFE8
  9127                           indf1	equ	0xFE7
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           preinc1	equ	0xFE4
  9131                           plusw1	equ	0xFE3
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           bsr	equ	0xFE0
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           preinc2	equ	0xFDC
  9139                           plusw2	equ	0xFDB
  9140                           fsr2h	equ	0xFDA
  9141                           fsr2l	equ	0xFD9
  9142                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128     29      79
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S980$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> VoltageBuffer(BANK0[16]), VdigBuffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S896$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S896$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[8]), 
		 -> VoltageBuffer(BANK0[16]), VdigBuffer(BANK0[16]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_cmd
    _lcd_BUTTON->_lcd_write
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    _conv_AN0->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _lcd_AD->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   36297
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                             _lcd_AD
                         _lcd_BUTTON
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_BUTTON                                           0     0      0    2093
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_AD                                               0     0      0   30276
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   28183
                                              8 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   27672
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   27297
                                            104 COMRAM    22    16      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   19268
                                             51 COMRAM    53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4551
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2879
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     313
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    2093
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0    3054
                                             39 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _lcd_AD
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
           _set_bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _lcd_BUTTON
     _lcd_write
   _lcd_init
     _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      4F       5       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITBIGSFRhh         2C      0       0      16        0.0%
BITBIGSFRhlhl       24      0       0      18        0.0%
BITBIGSFRhlhhh       E      0       0      17        0.0%
BITBIGSFRlhl         E      0       0      21        0.0%
BITBIGSFRhll         4      0       0      19        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BITBIGSFRlhh         1      0       0      20        0.0%
BITBIGSFRlll         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      24        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 21 19:12:28 2023

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l30 393C                       l23 391E                       l42 33AC  
                     l27 30EE                       l19 344A                       l81 3954  
                     l90 34E4                       l84 395A                       l92 34F2  
                     l93 354C                       l87 394A                       l96 34D8  
                     l99 38B4           ?_lcd_send_byte 0005      ___wmul@multiplicand 0003  
                    l112 38DA                      l226 2A54                      l239 2BB8  
                    l409 2E08                      l371 3262                      l382 2F0C  
                    l640 17BC                      l705 20F6                      l377 2EC6  
                    l641 17AA                      l730 1EB6                      l386 382C  
                    l642 1770                      l707 216E                      l708 215C  
                    l733 1D48                      l726 1B52                      l830 32EA  
                    l743 1E78                      l735 1DC0                      l736 1DAE  
                    l832 330C                      l840 22F6                      l841 233C  
                    l657 18D6                      l649 1A8C                      l770 28CC  
                    l666 19A6                      l682 36EA                      l827 32A8  
                    l667 1994                      l781 2864                      l774 2808  
                    l854 2506                      l838 22EE                      l694 2250  
                    l870 0828                      l942 15CC                      l790 3604  
                    l767 2770                      l696 20B0                      l865 1096  
                    l699 2074                      l868 09DA                      l964 3654  
                    l982 37F4                      l974 300A                      l898 0E14  
                    l979 37EC                      _abs 37B6                      _pad 3264  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           ___fltol@exp1 000A                     l1004 2CFA                     l1013 2718  
                   l1023 388E                     l1031 3730                     l1007 2D02  
                   l1016 265C                     l1041 35B2                     ?_abs 0013  
                   l1070 395C                     l1038 35A2                     l1047 36A4  
                   l3000 2028                     l3010 2072                     l3002 2038  
                   l1059 31B8                     l1067 3774                     l3100 1B1C  
                   l3020 20C0                     l3012 207E                     l3004 2040  
                   l1076 37B4                     l3110 1B72                     l3102 1B2C  
                   l3022 20D6                     l3030 2106                     l3014 209C  
                   l3006 2050                     l3200 1EA6                     l3120 1BB2  
                   l3104 1B3C                     l3032 2114                     l3024 20DC  
                   l3016 209E                     l3008 2064                     l4000 33C2  
                   l3130 1BFC                     l3122 1BBE                     l3114 1B86  
                   l3106 1B42                     l3042 217E                     l3050 21C6  
                   l3034 2118                     l3026 20E6                     l3018 20AE  
                   l3210 31BA                     l4010 33DC                     l4002 33D2  
                   l3140 1C4E                     l3132 1C08                     l3124 1BD6  
                   l3116 1B92                     l3108 1B62                     l3300 3264  
                   l3060 2230                     l3052 21E0                     l3044 218A  
                   l3036 2126                     l3028 20F4                     l3220 325A  
                   l3212 31E8                     l3204 36A6                     l4020 340A  
                   l4012 33EA                     l3150 1CCC                     l3142 1C5E  
                   l3134 1C18                     l3126 1BE2                     l3118 1B9C  
                   l4030 34DA                     l3310 32B4                     l3302 3272  
                   l3062 223E                     l3054 21F6                     l3046 2198  
                   l3038 2154                     l3222 3260                     l3214 31F8  
                   l3230 2E48                     l3206 36B6                     l4022 3418  
                   l4014 33EC                     l3160 1D46                     l3152 1D02  
                   l3144 1C7A                     l3136 1C24                     l3128 1BEE  
                   l3080 1AAA                     l4032 34E2                     l3400 3704  
                   l3320 37D0                     l3312 32C8                     l3304 3286  
                   l3064 2244                     l3056 2210                     l3048 21C2  
                   l3216 3226                     l3240 2EB4                     l3232 2E76  
                   l4040 3490                     l4024 341E                     l4016 33FC  
                   l4008 33D6                     l3170 1DA6                     l3162 1D58  
                   l3154 1D10                     l3146 1C86                     l3138 1C34  
                   l3090 1AF0                     l3082 1ABA                     l3074 1A8E  
                   l4034 34FA                     l3410 3916                     l3402 3726  
                   l3314 32CC                     l3306 3294                     l3066 2246  
                   l3058 222C                     l3218 3236                     l3242 2F04  
                   l3234 2E86                     l3226 2E0A                     l3250 380C  
                   l3330 2FA0                     l3322 2F0E                     l4042 34A2  
                   l4026 3434                     l4018 3402                     l3180 1E14  
                   l3164 1D66                     l3156 1D2E                     l3148 1CA2  
                   l3092 1AF6                     l3084 1ACA                     l3076 1A9A  
                   l4036 3506                     l3404 372A                     l3316 32F8  
                   l3308 32A0                     l3420 2252                     l3244 2F0A  
                   l3236 2E94                     l3228 2E38                     l3252 381C  
                   l2700 16EA                     l3340 3002                     l3324 2F2E  
                   l3500 06E2                     l4044 34B4                     l4028 343C  
                   l4060 383E                     l3190 1E7C                     l3174 1DD0  
                   l3182 1E18                     l3166 1D6A                     l3158 1D38  
                   l3094 1AFC                     l3086 1ADA                     l3078 1AA8  
                   l3318 37B6                     l2630 3114                     l3430 22C6  
                   l3422 2272                     l3238 2EA6                     l2710 16FE  
                   l2702 16EE                     l3270 2D6E                     l3262 2D2E  
                   l3326 2F6C                     l3334 2FAC                     l3350 356C  
                   l3510 0728                     l3502 06EA                     l4046 34C6  
                   l4038 344C                     l4062 3842                     l3192 1E8C  
                   l3184 1E32                     l3176 1DDC                     l3168 1D78  
                   l3096 1B0A                     l3088 1AE0                     l3416 391C  
                   l3408 3902                     l2632 311E                     l3440 2314  
                   l3432 22C8                     l3424 2286                     l3248 37F6  
                   l2800 1964                     l2720 1712                     l2712 1702  
                   l2704 16F2                     l2640 15CE                     l3280 2D9E  
                   l3272 2D7C                     l3264 2D58                     l3256 2D04  
                   l3336 2FBE                     l3328 2F94                     l3360 25A0  
                   l3352 2508                     l3344 3776                     l3600 0B80  
                   l3512 072E                     l3504 06EE                     l4048 3890  
                   l4064 3850                     l4056 382E                     l2482 394C  
                   l3194 1E9A                     l3186 1E46                     l3178 1DEA  
                   l3098 1B0C                     l2634 313C                     l2626 30F0  
                   l3450 234E                     l3442 2324                     l3434 22E2  
                   l3426 2296                     l2810 19B6                     l2802 1968  
                   l2730 178A                     l2722 173C                     l2714 1706  
                   l2706 16F6                     l2650 160A                     l2642 15DA  
                   l3290 2DC8                     l3282 2DA8                     l3266 2D5A  
                   l3258 2D1A                     l3370 26BC                     l3354 2528  
                   l3346 3786                     l3610 0C1C                     l3602 0B84  
                   l3530 07B6                     l3514 0736                     l3506 0714  
                   l3522 0776                     l4170 1448                     l4066 3858  
                   l4058 383A                     l2484 3956                     l3196 1E9C  
                   l3188 1E60                     l2900 2A56                     l2636 3172  
                   l2628 3102                     l3452 2354                     l3460 2446  
                   l3444 2330                     l3436 22FE                     l3428 22B6  
                   l2820 1A1C                     l2812 19C2                     l2804 1976  
                   l2740 17CA                     l2732 178E                     l2724 1758  
                   l2716 170A                     l2708 16FA                     l2660 163A  
                   l2652 161A                     l2644 15E8                     l3292 2DD8  
                   l3268 2D6A                     l3372 26D0                     l3364 2610  
                   l3356 257E                     l3348 354E                     l3380 3656  
                   l3700 100C                     l3620 0CF6                     l3612 0C4E  
                   l3604 0BA2                     l3532 07BE                     l3524 079C  
                   l3540 07DA                     l3516 074E                     l3508 0724  
                   l4172 1502                     l2486 393E                     l3198 1EA2  
                   l2910 2A9A                     l2902 2A5A                     l3462 2460  
                   l3470 24C0                     l3454 23D6                     l3446 2338  
                   l3438 230E                     l2830 1A64                     l2822 1A2C  
                   l2814 19D0                     l2806 198C                     l2750 180C  
                   l2742 17DA                     l2734 179C                     l2726 1768  
                   l2718 170E                     l2670 1664                     l2662 164C  
                   l2654 161C                     l2646 15EA                     l3294 2DE8  
                   l3278 2D94                     l3374 26F8                     l3366 264C  
                   l3358 2592                     l3382 366A                     l3390 368A  
                   l3710 1076                     l3702 102A                     l3630 0D54  
                   l3622 0CFA                     l3614 0C5C                     l3606 0BD6  
                   l3550 0870                     l3542 07F2                     l3526 07AC  
                   l3518 0756                     l4174 1584                     l3392 3864  
                   l4176 2C50                     l3720 2BD2                     l2920 2B02  
                   l2912 2ABA                     l2904 2A68                     l3472 24D0  
                   l3464 247E                     l3456 23DC                     l3448 2344  
                   l2832 1A66                     l2824 1A4C                     l2816 1A0A  
                   l2760 183A                     l2752 181A                     l2736 179E  
                   l2728 177E                     l2672 1674                     l2680 169E  
                   l2664 164E                     l2648 15FA                     l2656 1624  
                   l3296 2DF8                     l3288 2DBC                     l3376 2708  
                   l3368 2680                     l3384 3676                     l3704 1048  
                   l3640 0DEC                     l3632 0D5C                     l3624 0D2E  
                   l3616 0C6C                     l3608 0C08                     l3560 0962  
                   l3552 08AC                     l3528 07B0                     l3480 065C  
                   l4168 112E                     l2850 38B6                     l3730 2C66  
                   l3722 2BEE                     l3714 2BBA                     l2930 2B78  
                   l2922 2B30                     l2914 2AD8                     l2906 2A88  
                   l2842 3732                     l3474 24D6                     l3466 2498  
                   l3458 23E2                     l2834 1A6C                     l2826 1A50  
                   l2818 1A0C                     l2770 18A6                     l2762 1844  
                   l2754 1826                     l2746 17EE                     l2738 17A8  
                   l2690 16D6                     l2682 16AE                     l2674 1684  
                   l2666 1654                     l2658 1634                     l3386 367A  
                   l3706 1058                     l3650 0E46                     l3642 0E0C  
                   l3634 0D60                     l3626 0D40                     l3618 0CA0  
                   l3570 09F2                     l3562 0968                     l3554 08DE  
                   l3546 0838                     l3490 06A6                     l3482 0660  
                   l3810 1268                     l3802 11F4                     l3900 3936  
                   l2852 38D2                     l3396 36EC                     l3740 2CDE  
                   l3724 2C22                     l3716 2BCE                     l2860 28E0  
                   l2932 2B98                     l2924 2B50                     l2916 2AE0  
                   l2908 2A8C                     l2844 373E                     l3476 24E6  
                   l3468 24B2                     l2940 1ED2                     l2836 1A7A  
                   l2828 1A5E                     l2772 18B6                     l2756 182A  
                   l2748 17FE                     l2764 184A                     l2692 16DA  
                   l2684 16C0                     l2676 1694                     l2668 1662  
                   l3388 3686                     l3708 106E                     l3660 0E6E  
                   l3652 0E4C                     l3644 0E24                     l3636 0D68  
                   l3628 0D44                     l3580 0A24                     l3572 09FE  
                   l3556 091A                     l3548 083C                     l3492 06AE  
                   l3484 0670                     l3820 12F4                     l3812 128C  
                   l3804 122C                     l3750 3078                     l3398 36F0  
                   l3726 2C2A                     l2870 2936                     l2862 2900  
                   l2926 2B62                     l2918 2AF4                     l2846 3750  
                   l2950 1F06                     l2942 1ED4                     l2838 1A7C  
                   l2790 1938                     l2782 1910                     l2766 1870  
                   l2774 18C6                     l2758 1838                     l2694 16DE  
                   l2686 16CE                     l2678 1696                     l3670 0EA2  
                   l3654 0E54                     l3646 0E32                     l3662 0E74  
                   l3638 0D74                     l3590 0A6C                     l3582 0A32  
                   l3574 0A06                     l3558 092E                     l3566 09A8  
                   l3494 06B6                     l3486 067E                     l3830 13CA  
                   l3814 12C6                     l3806 1250                     l3822 132C  
                   l3902 3606                     ?_pad 0011                     l3760 30D0  
                   l3752 307A                     l3920 3342                     l3912 3310  
                   l3736 2C9C                     l3728 2C32                     l2880 298A  
                   l2872 2942                     l2864 2904                     l2856 28CE  
                   l2928 2B68                     l2848 3754                     l2960 1F38  
                   l2944 1EE4                     l2952 1F0E                     l2936 1EB8  
                   l2792 1940                     l2784 191A                     l2776 18EC  
                   l2768 18A4                     l2696 16E2                     l2688 16D2  
                   l3680 0F56                     l3672 0EFA                     l3664 0E86  
                   l3656 0E64                     l3648 0E42                     l3592 0A7C  
                   l3584 0A4A                     l3576 0A0E                     l3568 09E2  
                   l3496 06C6                     l3488 0682                     l3840 1424  
                   l3824 133C                     l3816 12E6                     l3808 125A  
                   l3904 3612                     l3762 30EA                     l3754 3082  
                   l3746 300E                     l3922 3350                     l3914 3320  
                   l3738 2CCC                     l2890 29FE                     l2882 299C  
                   l2874 2960                     l2866 2912                     l2858 28D2  
                   l2970 1F6C                     l2962 1F3A                     l2954 1F1E  
                   l2946 1EF4                     l2938 1EC4                     l2794 1944  
                   l2786 1928                     l2778 18FC                     l2698 16E6  
                   l3690 0FC6                     l3682 0F72                     l3674 0F2E  
                   l3666 0E98                     l3658 0E68                     l3594 0A90  
                   l3586 0A5C                     l3578 0A12                     l3498 06D6  
                   l3850 1486                     l3842 142C                     l3834 13FA  
                   l3826 1358                     l3770 10CA                     l3906 362E  
                   l3930 35C6                     l3940 271C                     l3764 30EC  
                   l3756 309A                     l3748 3076                     l3924 3378  
                   l3916 332A                     l2884 29CA                     l2876 2968  
                   l2892 2A04                     l2868 2932                     l2980 1FB2  
                   l2964 1F4A                     l2972 1F74                     l2956 1F24  
                   l2948 1F04                     l2796 1954                     l2788 192A  
                   l3692 0FDE                     l3684 0F7A                     l3676 0F34  
                   l3668 0E9C                     l3596 0AF4                     l3588 0A64  
                   l3860 1538                     l3852 14BA                     l3836 140A  
                   l3828 1374                     l3780 10FC                     l3772 10D8  
                   l3908 364A                     l3932 35CE                     l3942 272C  
                   l3758 30B4                     l3926 337C                     l3918 333C  
                   l2894 2A14                     l2886 29EA                     l2878 297C  
                   l2990 1FDA                     l2982 1FB6                     l2974 1F84  
                   l2966 1F5A                     l2958 1F2A                     l2798 1956  
                   l3686 0F8A                     l3678 0F38                     l3598 0B4C  
                   l3838 141C                     l3846 1434                     l3790 1172  
                   l3774 10DC                     l3766 1098                     l3934 35D6  
                   l3960 27F2                     l3952 27AA                     l3944 273A  
                   l2896 2A34                     l2888 29EC                     l2976 1F9A  
                   l2968 1F6A                     l3696 0FF0                     l3688 0FBA  
                   l3856 14EE                     l3848 1466                     l3792 11A8  
                   l3784 1108                     l3776 10E8                     l3768 10BC  
                   l3872 15A4                     l3936 35F2                     l3928 35B4  
                   l3970 2872                     l3962 27FE                     l3954 27B2  
                   l3946 2780                     l2994 1FEE                     l2978 1FAA  
                   l2986 1FCA                     l3698 1006                     l3866 1566  
                   l3858 1518                     l3794 11B8                     l3778 10EA  
                   l3786 113C                     l3980 28BA                     l3972 2874  
                   l3964 283A                     l3956 27BE                     l3948 2796  
                   l2996 2008                     l2988 1FDA                     l3868 1592  
                   l3796 11C6                     l3788 114E                     l3982 28BC  
                   l3974 2878                     l3966 2846                     l3958 27F0  
                   l3894 3922                     l2998 2018                     l3798 11E6  
                   l3990 33B4                     l3976 289C                     l3968 2854  
                   l3896 392C                     l3992 33B6                     l3978 28AC  
                   l3898 3934                     l3994 33BC                     l3986 33AE  
                   l3996 33BE                     l3988 33B2                     l3998 33C0  
                   STR_1 0620                     STR_2 0611                     STR_3 064A  
                   STR_4 063E                     STR_5 062F                     STR_6 0601  
                   STR_7 0652                     u3000 2114                     u3001 2110  
                   u3010 2126                     u3011 2122                     u3100 1ABA  
                   u2300 3114                     u3020 2154                     u3101 1AB6  
                   u2301 3110                     u3021 2150                     u3110 1ACA  
                   u2310 313C                     u3030 216A                     u3111 1AC6  
                   u2311 3138                     u3031 2166                     u3200 1D78  
                   u3120 1B0A                     u2320 3172                     u3040 217E  
                   u2400 16C0                     u4000 09F2                     u3201 1D74  
                   u3121 1B06                     u2321 316E                     u3041 217A  
                   u2401 16BC                     u4001 09EE                     u3210 1DA6  
                   u3130 1B1C                     u3050 2198                     u2410 16CE  
                   u2330 15E8                     u4010 0A24                     u3211 1DA2  
                   u3131 1B18                     u3051 2194                     u2411 16CA  
                   u2331 15E4                     u4011 0A20                     u3220 1DBC  
                   u3140 1B2C                     u3060 21E0                     u3300 325A  
                   u2500 180C                     u2420 173C                     u2340 15FA  
                   u4100 0DEC                     u4020 0A32                     u3221 1DB8  
                   u3141 1B28                     u3061 21DC                     u3301 3256  
                   u2501 1808                     u2421 1738                     u2341 15F6  
                   u4101 0DE8                     u4021 0A2E                     u3230 1DD0  
                   u3150 1B62                     u3070 2210                     u3310 2E38  
                   u2510 181A                     u2430 1754                     u2350 160A  
                   u4110 0E24                     u4030 0A5C                     u3231 1DCC  
                   u3151 1B5E                     u3071 220C                     u3311 2E34  
                   u2511 1816                     u2431 174E                     u2351 1606  
                   u4111 0E20                     u4031 0A58                     u3240 1DEA  
                   u3160 1B72                     u3080 223E                     u3320 2E76  
                   u2600 1964                     u2520 1838                     u2440 1756  
                   u2360 164C                     u3400 2D90                     u4200 1048  
                   u4120 0E32                     u4040 0BA2                     u3241 1DE6  
                   u3161 1B6E                     u3081 223A                     u3321 2E72  
                   u2601 1960                     u2521 1834                     u2361 1648  
                   u3401 2D8C                     u4201 1044                     u4121 0E2E  
                   u4041 0B9E                     u3250 1E32                     u3170 1CEC  
                   u3090 1AA8                     u2290 3102                     u3330 2E94  
                   u2610 1976                     u2530 1870                     u2450 177E  
                   u2370 1662                     u3410 2DB8                     u4210 1058  
                   u4130 0E86                     u4050 0C08                     u3251 1E2E  
                   u3091 1AA4                     u2291 30FE                     u3331 2E90  
                   u2611 1972                     u2531 186C                     u2451 177A  
                   u2371 165E                     u3411 2DB4                     u4211 1054  
                   u4131 0E82                     u4051 0C04                     u3260 1E60  
                   u3180 1D46                     u4220 2BEE                     u3340 2EB4  
                   u2700 1A5E                     u2620 198C                     u2540 18B6  
                   u2460 179C                     u2380 1674                     u3420 2DD8  
                   u3500 2F6C                     u4140 0F56                     u4060 0C4E  
                   u4300 122C                     u3261 1E5C                     u3181 1D42  
                   u4221 2BEA                     u3341 2EB0                     u2701 1A5A  
                   u2621 1988                     u2541 18B2                     u2461 1798  
                   u2381 1670                     u3421 2DD4                     u3501 2F68  
                   u4141 0F52                     u4061 0C4A                     u4301 1228  
                   u3270 1E9A                     u3190 1D66                     u4230 2C1E  
                   u3350 2F04                     u2710 1A7A                     u2630 19A2  
                   u2550 18EC                     u2470 17BC                     u2390 1684  
                   u3430 2DE8                     u3510 2F94                     u4150 0F72  
                   u4070 0C5C                     u4310 1250                     u3271 1E96  
                   u3191 1D62                     u3175 1CE2                     u4231 2C1A  
                   u3351 2F00                     u2711 1A76                     u2631 199E  
                   u2551 18E8                     u2471 17B8                     u2391 1680  
                   u3431 2DE4                     u3511 2F90                     u4151 0F6E  
                   u4071 0C58                     u4311 124C                     u4400 333C  
                   u4240 2CCC                     u2800 2A68                     u2720 3774  
                   u3440 3272                     u3280 31E8                     u3360 380C  
                   u2640 19B6                     u2560 18FC                     u2480 17CA  
                   u3520 2FBE                     u3600 25A0                     u4160 0FD8  
                   u4080 0CF6                     u4320 128C                     u4401 3338  
                   u4241 2CC8                     u2801 2A64                     u2721 3770  
                   u3441 326E                     u3281 31E4                     u3361 3808  
                   u2641 19B2                     u2561 18F8                     u2481 17C6  
                   u3521 2FBA                     u3601 259C                     u4161 0FD2  
                   u4081 0CF2                     u4321 1288                     u4410 3370  
                   u4250 2CDE                     u2730 28E0                     u2810 2A9A  
                   u3450 3294                     u3290 3226                     u2650 19D0  
                   u2570 1928                     u2490 17DA                     u3370 2D1A  
                   u4170 0FDA                     u4090 0D40                     u4330 132C  
                   u4251 2CDA                     u2731 28DC                     u2811 2A96  
                   u3451 3290                     u3291 3222                     u2651 19CC  
                   u2571 1924                     u2491 17D6                     u3371 2D16  
                   u4091 0D3C                     u4331 1328                     u4500 2864  
                   u4420 339C                     u3700 388A                     u2740 2912  
                   u2820 2AD8                     u3460 32EA                     u2900 1F4A  
                   u2660 1A0A                     u2580 1938                     u3380 2D4E  
                   u3540 2FF8                     u3620 260C                     u4180 0FEC  
                   u4340 1358                     u4260 10BC                     u4501 2860  
                   u2741 290E                     u2821 2AD4                     u3461 32E6  
                   u2901 1F46                     u2661 1A06                     u2581 1934  
                   u3541 2FF2                     u3621 2608                     u4181 0FE8  
                   u4341 1354                     u4261 10B8                     u4510 2872  
                   u4430 33AC                     u3710 3704                     u2830 2B02  
                   u3470 32F8                     u2910 1F5A                     u2670 1A1C  
                   u2590 1954                     u3390 2D7C                     u3550 2FFA  
                   u3630 2630                     u4190 102A                     u4350 1374  
                   u4270 114E                     u4511 286E                     u4431 33A8  
                   u3711 3700                     u2751 293C                     u2831 2AFE  
                   u3471 32F4                     u2911 1F56                     u2671 1A18  
                   u2591 1950                     u3391 2D78                     u3535 2FD0  
                   u3615 25B4                     u4191 1026                     u4351 1370  
                   u4271 114A                     u4520 28AC                     u4440 272C  
                   u3720 3726                     u2760 2960                     u2840 2B30  
                   u3480 37D0                     u3800 2324                     u2920 1F9A  
                   u2680 1A2C                     u3640 264C                     u3616 25BE  
                   u3560 37B4                     u4360 1482                     u4280 1172  
                   u4521 28A8                     u4441 2728                     u4417 3366  
                   u3721 3722                     u2761 295C                     u2841 2B2C  
                   u3481 37CC                     u3801 2320                     u2921 1F96  
                   u2681 1A28                     u3385 2D44                     u3641 2648  
                   u3617 25CE                     u3561 37B0                     u4361 147E  
                   u4281 116E                     u4530 28BA                     u4450 273A  
                   u3730 3916                     u2770 298A                     u2850 2B78  
                   u3810 2460                     u2930 1FDA                     u2690 1A4C  
                   u3490 2F4E                     u3650 26A0                     u3570 356C  
                   u4290 11B8                     u4531 28B6                     u4451 2736  
                   u3731 3912                     u4427 3392                     u2771 2986  
                   u2851 2B74                     u3811 245C                     u2931 1FD6  
                   u2691 1A48                     u3635 2626                     u3571 3568  
                   u4291 11B4                     u4460 2796                     u2780 29CA  
                   u3820 247E                     u3740 2282                     u2940 2050  
                   u2860 1ED2                     u3660 26BC                     u3580 2550  
                   u3900 0714                     u4380 364A                     u4540 33FC  
                   u4461 2792                     u2781 29C6                     u3821 247A  
                   u3741 227C                     u2941 204C                     u2861 1ECE  
                   u3661 26B8                     u3901 0710                     u4381 3646  
                   u4541 33F8                     u4470 27EC                     u4550 34F2  
                   u4390 3320                     u2790 2A14                     u3830 2498  
                   u3750 2284                     u2950 2072                     u2870 1EE4  
                   u3670 26F8                     u3590 257E                     u3910 0724  
                   u4471 27E8                     u4551 34EE                     u4375 392A  
                   u4391 331C                     u2791 2A10                     u3831 2494  
                   u2951 206E                     u2871 1EE0                     u3495 2F44  
                   u3671 26F4                     u3655 2696                     u3591 257A  
                   u3911 0720                     u4607 3412                     u4480 2836  
                   u4376 392C                     u3840 24B2                     u3760 2296  
                   u2960 209C                     u2880 1EF4                     u3680 36A4  
                   u3920 079C                     u4560 3850                     u4481 2832  
                   u3841 24AE                     u3761 2292                     u2961 2098  
                   u2881 1EF0                     u3585 2546                     u3681 36A0  
                   u3921 0798                     u4617 3424                     u4561 384C  
                   u4490 2854                     u3690 3888                     u3850 24C0  
                   u3770 22C6                     u2970 20C0                     u2890 1F38  
                   u3930 07AC                     u4491 2850                     u3691 3882  
                   u3851 24BC                     u3771 22C2                     u2971 20BC  
                   u2891 1F34                     u3931 07A8                     u4627 3436  
                   u3860 24D0                     u3780 22E2                     u2980 20D6  
                   u3940 0824                     u3861 24CC                     u3781 22DE  
                   u2981 20D2                     u3941 0820                     u4637 3444  
                   u3790 230E                     u2990 20F4                     u3950 08AC  
                   u3870 067E                     u4647 392E                     u3791 230A  
                   u2991 20F0                     u3951 08A8                     u3871 067A  
                   u3960 08DE                     u3880 06C6                     u4657 307C  
                   u3961 08DA                     u3881 06C2                     u4577 33C8  
                   u3970 091A                     u3890 06D6                     u4667 34DC  
                   u3971 0916                     u3891 06D2                     u4587 33E2  
                   u3980 09A4                     u3981 09A0                     u4597 3404  
                   u3990 09DA                     u3991 09D6                     abs@a 0013  
                   _dbuf 0100                     _labs 354E                     _atoi 2BBA  
                   _main 382E                     _dtoa 2252                     _prec 008E  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 2F0E                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0012             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0017            _VoltageBuffer 0092  
          ___fltol@sign1 0009          __end_of___aodiv 2A56                    ?_labs 0001  
                  ?_atoi 0007          __end_of___fladd 1A8E                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 2BBA          __end_of___fldiv 2252  
        __end_of___flneg 382E                    STR_10 0656          __end_of___flmul 1EB8  
        __end_of___flsub 36EC          __end_of___fltol 2E0A             vfpfcnvrt@fmt 006B  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
        __end_of_lcd_cmd 30F0                    _flags 007F                    _fputc 30F0  
                  _fputs 3732          __end_of_isdigit 3890                    labs@a 0001  
                  atoi@n 000E                    pad@fp 0011                    atoi@s 0007  
                  _width 008C                    _putch 395C                    dtoa@d 001E  
                  dtoa@i 003C                    dtoa@n 0034                    dtoa@p 0030  
                  dtoa@s 003E                    dtoa@w 0032          __end_of_isspace 3732  
        __end_of_set_bit 3920                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 3606           ?___fpclassifyf 0001             lcd_write@end 000A  
           lcd_write@col 0007             lcd_write@lin 000B             lcd_write@str 0008  
        __initialization 38DC             __end_of_labs 35B4             __end_of_atoi 2D04  
           __end_of_main 3864             __end_of_dtoa 2508          ??_lcd_send_byte 0006  
                 ??_labs 0005                   ??_atoi 0009                   ??_main 007F  
                 ??_dtoa 0026            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001                   _OSCCON 000FD3               _VdigBuffer 00A2  
          vfpfcnvrt@done 0072         __end_of___xxtofl 28CE         __end_of_conv_AN0 354E  
           vfprintf@cfmt 00B8         __end_of_lcd_init 344C                   ___flge 2E0A  
                 ___fleq 31BA                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 38B6                ??___fldiv 0009  
              ??___flneg 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _lcd_AD 344C                   _efgtoa 065C  
                 _floorf 2508                   _memcpy 3656                   clear_0 38E2  
                 clear_1 38EE                   isa$std 000001                   pad@buf 0013  
              ??_lcd_cmd 0003                   dtoa@fp 001C                   _strcpy 3776  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                ??_set_bit 0002                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3656                ??_sprintf 007F               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0080  __end_of__initialization 38F6  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 31BA            __end_of_fputs 3776  
          __end_of_putch 395E                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 0080               __pbssBANK1 0100  
            _VdigADC_AN0 0090               _lcd_BUTTON 3890                  ?___flge 0028  
                ?___fleq 0001                  ?___wmul 0001                  ?_lcd_AD 0001  
                ?_efgtoa 0034                  ?_floorf 001A                  ?_memcpy 0001  
                ?_strcpy 0001               _config_ADC 393E                ?___xxtofl 0001  
     lcd_send_byte@level 0006                  _OSCTUNE 000F9B                ?_conv_AN0 0001  
              ?_lcd_init 0001                  __Hparam 0000                  __Lparam 0000  
      __end_of_config_IO 395C                  ___aodiv 28CE                  ___fladd 15CE  
                ___aomod 2A56                  ___fldiv 1EB8                  ___flneg 37F6  
                ___flmul 1A8E                  ___flsub 36A6                  ___fltol 2D04  
      __end_of_lcd_write 33AE                ?_vfprintf 00B2              set_bit@comp 0001  
           __psmallconst 0600                  __pcinit 38DC                  __ramtop 0600  
                __ptext0 382E                  __ptext1 33AE                  __ptext2 3890  
                __ptext3 344C                  __ptext4 35B4                  __ptext5 3606  
                __ptext6 1098                  __ptext7 065C                  __ptext8 3776  
                __ptext9 3656                  _lcd_cmd 300C                  _isdigit 3864  
             ??___xxtofl 0005                  _isspace 36EC                  _set_bit 3900  
                efgtoa@c 003A                  efgtoa@d 0048                  efgtoa@e 004C  
                efgtoa@f 0036                  efgtoa@g 005F                  efgtoa@h 0054  
                efgtoa@i 005C                  efgtoa@l 0058                  efgtoa@m 004A  
                efgtoa@n 0063                  efgtoa@p 003F                  efgtoa@t 0041  
                efgtoa@u 0065                  efgtoa@w 004E                  atoi@neg 000C  
             ??_conv_AN0 0028                  _sprintf 35B4               ??_lcd_init 0005  
   end_of_initialization 38F6                  floorf@e 0028                  floorf@m 0024  
                floorf@u 002A                  floorf@x 001A                  memcpy@d 0007  
                memcpy@n 0005                  memcpy@s 0009                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C              ?_lcd_BUTTON 0001  
      __end_of_vfpfcnvrt 15CE               efgtoa@mode 0046               efgtoa@sign 005E  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE         vfpfcnvrt@convarg 0074               ??_vfprintf 007F  
  __end_of_lcd_send_byte 393E                  strcpy@d 0007                  strcpy@s 0005  
              _PORTBbits 000F81                _PORTDbits 000F83                _PORTEbits 000F84  
            ___fladd@grs 0010              ?_config_ADC 0001            ___xxtofl@sign 0009  
              _TRISEbits 000F96               lcd_cmd@cmd 0004              ___fldiv@grs 0014  
            ___fldiv@rem 000D              ___flmul@grs 001C              _Voltage_AN0 0088  
          ??_config_FOSC 0001           __end_of___flge 2F0E           __end_of___fleq 3264  
            vfpfcnvrt@ap 006D              vfpfcnvrt@cp 007D              vfpfcnvrt@fp 0069  
         __end_of___wmul 38DC           __end_of_lcd_AD 34DA           __end_of_efgtoa 1098  
         __end_of_floorf 271A           __end_of_memcpy 36A6               floorf@F526 0080  
         __end_of_strcpy 37B6      start_initialization 38DC              __end_of_abs 37F6  
            __end_of_pad 330E    __end_of___fpclassifyf 300C              vfprintf@fmt 00B4  
               ??___flge 0030                 ??___fleq 0009      __end_of_config_FOSC 3956  
               ??___wmul 0005                 ??_lcd_AD 007F                 ??_efgtoa 003B  
               ??_floorf 001E                 ??_memcpy 0007                 ??_strcpy 0005  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 0005  
              ___fldiv@b 0001                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 007F                ___flsub@a 002C                ___flsub@b 0028  
          __pcstackBANK0 00B2         ___aodiv@dividend 0001              _efgtoa$1049 0043  
              _dtoa$1018 002E                 ?___aodiv 0001                 ?___fladd 0001  
               ?___aomod 0001                 ?___fldiv 0001         ___aodiv@quotient 0013  
               ?___flneg 0001                 ?___flmul 000F                 ?___flsub 0028  
               ?___fltol 0001                _config_IO 3956        lcd_send_byte@data 0005  
               ?_lcd_cmd 0001                _lcd_write 330E              __smallconst 0600  
               ?_isdigit 0001                 ?_isspace 0001                 ?_set_bit 0001  
             set_bit@cmd 0002                 ?_sprintf 00BA           ___wmul@product 0005  
            _config_FOSC 394C             ??_lcd_BUTTON 000C                _vfpfcnvrt 1098  
             ?_config_IO 0001               _ADCON0bits 000FC2               ?_lcd_write 0007  
      ___wmul@multiplier 0001                lcd_init@i 0006             ??_config_ADC 0001  
           _isspace$1129 0005               vfpfcnvrt@c 007C       __end_of_lcd_BUTTON 38B6  
               __Hrparam 0000                memcpy@tmp 000B               vfprintf@ap 00B6  
               __Lrparam 0000               vfprintf@fp 00B2       __end_of_config_ADC 394C  
             ?_vfpfcnvrt 0069          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F465 0084               sprintf@fmt 00BC                 ___xxtofl 271A  
               __ptext10 354E                 __ptext11 2508                 __ptext20 2252  
               __ptext12 2F0E                 __ptext21 3264                 __ptext13 2D04  
               __ptext30 3864                 __ptext22 3732                 __ptext14 36A6  
               __ptext31 38B6                 __ptext23 30F0                 __ptext15 15CE  
               __ptext40 394C                 __ptext32 330E                 __ptext24 395C  
               __ptext16 37F6                 __ptext41 393E                 __ptext33 3920  
               __ptext25 37B6                 __ptext17 2E0A                 __ptext34 300C  
               __ptext26 2A56                 __ptext18 31BA                 __ptext35 3900  
               __ptext27 28CE                 __ptext19 1EB8                 __ptext36 34DA  
               __ptext28 2BBA                 __ptext37 271A                 __ptext29 36EC  
               __ptext38 1A8E                 __ptext39 3956                 _conv_AN0 34DA  
               _lcd_init 33AE               strcpy@dest 0001                 efgtoa@fp 0034  
               efgtoa@ne 003D                 efgtoa@pp 0045                 efgtoa@ou 0050  
               isa$xinst 000000                 _vfprintf 3606              ??_config_IO 0001  
            ??_lcd_write 000A         ___aomod@dividend 0001                 memcpy@d1 0001  
               memcpy@s1 0003                 isdigit@c 0001                sprintf@ap 00C2  
               isspace@c 0001                strcpy@src 0003              efgtoa@nmode 0047  
        ___aomod@divisor 0009              ??_vfpfcnvrt 006F          ___aomod@counter 0011  
          _lcd_send_byte 3920                 sprintf@f 00C4                 sprintf@s 00BA  
          ___fladd@signs 000D             ___aodiv@sign 0012             ___fladd@aexp 000E  
           ___fladd@bexp 000F             ?_config_FOSC 0001             ___aomod@sign 0012  
