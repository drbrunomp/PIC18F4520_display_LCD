

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 04 13:53:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 17/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _ADRESL	set	4035
    94   000000                     _ADRESH	set	4036
    95   000000                     _TRISC	set	3988
    96   000000                     _PORTCbits	set	3970
    97   000000                     _ADCON0bits	set	4034
    98   000000                     _PORTDbits	set	3971
    99   000000                     _PORTBbits	set	3969
   100   000000                     _PORTC	set	3970
   101   000000                     _PORTD	set	3971
   102   000000                     _TRISD	set	3989
   103   000000                     _OSCTUNE	set	3995
   104   000000                     _OSCCON	set	4051
   105   000000                     _TRISEbits	set	3990
   106   000000                     _TRISB	set	3987
   107   000000                     _PORTEbits	set	3972
   108   000000                     _ADCON2	set	4032
   109   000000                     _ADCON1	set	4033
   110   000000                     _ADCON0	set	4034
   111                           
   112                           	psect	smallconst
   113   000600                     __psmallconst:
   114                           	callstack 0
   115   000600  00                 	db	0
   116   000601                     STR_3:
   117   000601  53                 	db	83	;'S'
   118   000602  45                 	db	69	;'E'
   119   000603  4E                 	db	78	;'N'
   120   000604  53                 	db	83	;'S'
   121   000605  4F                 	db	79	;'O'
   122   000606  52                 	db	82	;'R'
   123   000607  3A                 	db	58	;':'
   124   000608  20                 	db	32
   125   000609  20                 	db	32
   126   00060A  20                 	db	32
   127   00060B  20                 	db	32
   128   00060C  20                 	db	32
   129   00060D  20                 	db	32
   130   00060E  20                 	db	32
   131   00060F  20                 	db	32
   132   000610  00                 	db	0
   133   000611                     STR_4:
   134   000611  50                 	db	80	;'P'
   135   000612  52                 	db	82	;'R'
   136   000613  45                 	db	69	;'E'
   137   000614  53                 	db	83	;'S'
   138   000615  53                 	db	83	;'S'
   139   000616  41                 	db	65	;'A'
   140   000617  4F                 	db	79	;'O'
   141   000618  3A                 	db	58	;':'
   142   000619  20                 	db	32
   143   00061A  20                 	db	32
   144   00061B  20                 	db	32
   145   00061C  20                 	db	32
   146   00061D  20                 	db	32
   147   00061E  20                 	db	32
   148   00061F  20                 	db	32
   149   000620  00                 	db	0
   150   000621                     STR_1:
   151   000621  25                 	db	37
   152   000622  30                 	db	48	;'0'
   153   000623  2E                 	db	46
   154   000624  31                 	db	49	;'1'
   155   000625  66                 	db	102	;'f'
   156   000626  42                 	db	66	;'B'
   157   000627  41                 	db	65	;'A'
   158   000628  52                 	db	82	;'R'
   159   000629  20                 	db	32
   160   00062A  20                 	db	32
   161   00062B  20                 	db	32
   162   00062C  20                 	db	32
   163   00062D  20                 	db	32
   164   00062E  20                 	db	32
   165   00062F  00                 	db	0
   166   000630                     STR_2:
   167   000630  25                 	db	37
   168   000631  30                 	db	48	;'0'
   169   000632  2E                 	db	46
   170   000633  32                 	db	50	;'2'
   171   000634  66                 	db	102	;'f'
   172   000635  56                 	db	86	;'V'
   173   000636  20                 	db	32
   174   000637  20                 	db	32
   175   000638  20                 	db	32
   176   000639  20                 	db	32
   177   00063A  20                 	db	32
   178   00063B  00                 	db	0
   179   00063C                     STR_5:
   180   00063C  25                 	db	37
   181   00063D  30                 	db	48	;'0'
   182   00063E  31                 	db	49	;'1'
   183   00063F  64                 	db	100	;'d'
   184   000640  20                 	db	32
   185   000641  20                 	db	32
   186   000642  20                 	db	32
   187   000643  20                 	db	32
   188   000644  20                 	db	32
   189   000645  00                 	db	0
   190   000646                     STR_12:
   191   000646  53                 	db	83	;'S'
   192   000647  34                 	db	52	;'4'
   193   000648  3A                 	db	58	;':'
   194   000649  20                 	db	32
   195   00064A  00                 	db	0
   196   00064B                     STR_13:
   197   00064B  69                 	db	105	;'i'
   198   00064C  6E                 	db	110	;'n'
   199   00064D  66                 	db	102	;'f'
   200   00064E  00                 	db	0
   201   00064F                     STR_16:
   202   00064F  6E                 	db	110	;'n'
   203   000650  61                 	db	97	;'a'
   204   000651  6E                 	db	110	;'n'
   205   000652  00                 	db	0
   206   000653                     STR_9:
   207   000653  53                 	db	83	;'S'
   208   000654  31                 	db	49	;'1'
   209   000655  3A                 	db	58	;':'
   210   000656  00                 	db	0
   211   000657                     STR_10:
   212   000657  53                 	db	83	;'S'
   213   000658  32                 	db	50	;'2'
   214   000659  3A                 	db	58	;':'
   215   00065A  00                 	db	0
   216   00065B                     STR_11:
   217   00065B  53                 	db	83	;'S'
   218   00065C  33                 	db	51	;'3'
   219   00065D  3A                 	db	58	;':'
   220   00065E  00                 	db	0
   221   00065F  00                 	db	0	; dummy byte at the end
   222   000000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   003602                     __pcinit:
   227                           	callstack 0
   228   003602                     start_initialization:
   229                           	callstack 0
   230   003602                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Clear objects allocated to BANK1 (96 bytes)
   234   003602  EE01  F000         	lfsr	0,__pbssBANK1
   235   003606  0E60               	movlw	96
   236   003608                     clear_0:
   237   003608  6AEE               	clrf	postinc0,c
   238   00360A  06E8               	decf	wreg,f,c
   239   00360C  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to BANK0 (74 bytes)
   242   00360E  EE00  F080         	lfsr	0,__pbssBANK0
   243   003612  0E4A               	movlw	74
   244   003614                     clear_1:
   245   003614  6AEE               	clrf	postinc0,c
   246   003616  06E8               	decf	wreg,f,c
   247   003618  E1FD               	bnz	clear_1
   248                           
   249                           ; Clear objects allocated to COMRAM (9 bytes)
   250   00361A  EE00  F077         	lfsr	0,__pbssCOMRAM
   251   00361E  0E09               	movlw	9
   252   003620                     clear_2:
   253   003620  6AEE               	clrf	postinc0,c
   254   003622  06E8               	decf	wreg,f,c
   255   003624  E1FD               	bnz	clear_2
   256   003626                     end_of_initialization:
   257                           	callstack 0
   258   003626                     __end_of__initialization:
   259                           	callstack 0
   260   003626  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261   003628  6EF8               	movwf	tblptru,c
   262   00362A  0100               	movlb	0
   263   00362C  EF5D  F01A         	goto	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMRAM
   266   000077                     __pbssCOMRAM:
   267                           	callstack 0
   268   000077                     _PressSensor:
   269                           	callstack 0
   270   000077                     	ds	4
   271   00007B                     _width:
   272                           	callstack 0
   273   00007B                     	ds	2
   274   00007D                     _prec:
   275                           	callstack 0
   276   00007D                     	ds	2
   277   00007F                     _flags:
   278                           	callstack 0
   279   00007F                     	ds	1
   280                           
   281                           	psect	bssBANK0
   282   000080                     __pbssBANK0:
   283                           	callstack 0
   284   000080                     floorf@F521:
   285                           	callstack 0
   286   000080                     	ds	4
   287   000084                     ___fpclassifyf@F465:
   288                           	callstack 0
   289   000084                     	ds	4
   290   000088                     _PressPercent:
   291                           	callstack 0
   292   000088                     	ds	4
   293   00008C                     _VoltageSensor:
   294                           	callstack 0
   295   00008C                     	ds	4
   296   000090                     _SolS4:
   297                           	callstack 0
   298   000090                     	ds	2
   299   000092                     _SolS3:
   300                           	callstack 0
   301   000092                     	ds	2
   302   000094                     _SolS2:
   303                           	callstack 0
   304   000094                     	ds	2
   305   000096                     _SolS1:
   306                           	callstack 0
   307   000096                     	ds	2
   308   000098                     _BufferLCD_Voltage:
   309                           	callstack 0
   310   000098                     	ds	16
   311   0000A8                     _BufferS4:
   312                           	callstack 0
   313   0000A8                     	ds	8
   314   0000B0                     _BufferS3:
   315                           	callstack 0
   316   0000B0                     	ds	8
   317   0000B8                     _BufferS2:
   318                           	callstack 0
   319   0000B8                     	ds	8
   320   0000C0                     _BufferS1:
   321                           	callstack 0
   322   0000C0                     	ds	8
   323   0000C8                     _VdigADC_AN0:
   324                           	callstack 0
   325   0000C8                     	ds	2
   326                           
   327                           	psect	bssBANK1
   328   000100                     __pbssBANK1:
   329                           	callstack 0
   330   000100                     _dbuf:
   331                           	callstack 0
   332   000100                     	ds	80
   333   000150                     _BufferLCD_Press:
   334                           	callstack 0
   335   000150                     	ds	16
   336                           
   337                           	psect	cstackBANK0
   338   0000CA                     __pcstackBANK0:
   339                           	callstack 0
   340   0000CA                     efgtoa@ne:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x0
   344   0000CA                     	ds	2
   345   0000CC                     efgtoa@p:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x2
   349   0000CC                     	ds	2
   350   0000CE                     efgtoa@t:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x4
   354   0000CE                     	ds	2
   355   0000D0                     _efgtoa$1146:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x6
   359   0000D0                     	ds	2
   360   0000D2                     efgtoa@pp:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x8
   364   0000D2                     	ds	1
   365   0000D3                     efgtoa@mode:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x9
   369   0000D3                     	ds	1
   370   0000D4                     efgtoa@nmode:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xA
   374   0000D4                     	ds	1
   375   0000D5                     efgtoa@d:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xB
   379   0000D5                     	ds	2
   380   0000D7                     efgtoa@m:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0xD
   384   0000D7                     	ds	2
   385   0000D9                     efgtoa@e:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xF
   389   0000D9                     	ds	2
   390   0000DB                     efgtoa@ou:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x11
   394   0000DB                     	ds	4
   395   0000DF                     efgtoa@w:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x15
   399   0000DF                     	ds	2
   400   0000E1                     efgtoa@h:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x17
   404   0000E1                     	ds	4
   405   0000E5                     efgtoa@l:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x1B
   409   0000E5                     	ds	4
   410   0000E9                     efgtoa@i:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x1F
   414   0000E9                     	ds	2
   415   0000EB                     efgtoa@sign:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x21
   419   0000EB                     	ds	1
   420   0000EC                     efgtoa@g:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x22
   424   0000EC                     	ds	4
   425   0000F0                     efgtoa@n:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x26
   429   0000F0                     	ds	2
   430   0000F2                     efgtoa@u:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x28
   434   0000F2                     	ds	4
   435   0000F6                     ?_vfprintf:
   436                           	callstack 0
   437   0000F6                     vfprintf@fp:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x2C
   441   0000F6                     	ds	1
   442   0000F7                     vfprintf@fmt:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x2D
   446   0000F7                     	ds	1
   447   0000F8                     vfprintf@ap:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x2E
   451   0000F8                     	ds	1
   452   0000F9                     ?_sprintf:
   453                           	callstack 0
   454   0000F9                     sprintf@s:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2F
   458   0000F9                     	ds	2
   459   0000FB                     sprintf@fmt:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x31
   463   0000FB                     	ds	5
   464                           
   465                           	psect	cstackCOMRAM
   466   000001                     __pcstackCOMRAM:
   467                           	callstack 0
   468   000001                     ??_conv_AN0:
   469   000001                     ?___fpclassifyf:
   470                           	callstack 0
   471   000001                     ?___wmul:
   472                           	callstack 0
   473   000001                     ?___awdiv:
   474                           	callstack 0
   475   000001                     ?___awmod:
   476                           	callstack 0
   477   000001                     ?___fladd:
   478                           	callstack 0
   479   000001                     ?_labs:
   480                           	callstack 0
   481   000001                     ?___flneg:
   482                           	callstack 0
   483   000001                     ?___fltol:
   484                           	callstack 0
   485   000001                     ?___xxtofl:
   486                           	callstack 0
   487   000001                     set_bit@comp:
   488                           	callstack 0
   489   000001                     ___wmul@multiplier:
   490                           	callstack 0
   491   000001                     ___awdiv@dividend:
   492                           	callstack 0
   493   000001                     ___awmod@dividend:
   494                           	callstack 0
   495   000001                     memcpy@d1:
   496                           	callstack 0
   497   000001                     fputc@c:
   498                           	callstack 0
   499   000001                     strcpy@dest:
   500                           	callstack 0
   501   000001                     ___fleq@ff1:
   502                           	callstack 0
   503   000001                     ___flneg@f1:
   504                           	callstack 0
   505   000001                     ___fltol@f1:
   506                           	callstack 0
   507   000001                     ___fladd@b:
   508                           	callstack 0
   509   000001                     ___xxtofl@val:
   510                           	callstack 0
   511   000001                     ___fpclassifyf@x:
   512                           	callstack 0
   513   000001                     labs@a:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x0
   517   000001                     	ds	1
   518   000002                     set_bit@cmd:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1
   522   000002                     	ds	1
   523   000003                     ??_lcd_cmd:
   524   000003                     fputc@fp:
   525                           	callstack 0
   526   000003                     strcpy@src:
   527                           	callstack 0
   528   000003                     ___wmul@multiplicand:
   529                           	callstack 0
   530   000003                     ___awdiv@divisor:
   531                           	callstack 0
   532   000003                     ___awmod@divisor:
   533                           	callstack 0
   534   000003                     memcpy@s1:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538   000003                     	ds	1
   539   000004                     ??_fputc:
   540   000004                     ??_strcpy:
   541   000004                     lcd_cmd@cmd:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x3
   545   000004                     	ds	1
   546   000005                     ??___fpclassifyf:
   547   000005                     ??_labs:
   548   000005                     ??_lcd_init:
   549   000005                     ??_lcd_clear:
   550   000005                     ??___fltol:
   551   000005                     ??___xxtofl:
   552   000005                     lcd_send_byte@data:
   553                           	callstack 0
   554   000005                     ___awdiv@counter:
   555                           	callstack 0
   556   000005                     ___awmod@counter:
   557                           	callstack 0
   558   000005                     ___wmul@product:
   559                           	callstack 0
   560   000005                     memcpy@n:
   561                           	callstack 0
   562   000005                     strcpy@d:
   563                           	callstack 0
   564   000005                     ___fleq@ff2:
   565                           	callstack 0
   566   000005                     ___fladd@a:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x4
   570   000005                     	ds	1
   571   000006                     lcd_init@i:
   572                           	callstack 0
   573   000006                     lcd_send_byte@level:
   574                           	callstack 0
   575   000006                     ___awdiv@sign:
   576                           	callstack 0
   577   000006                     ___awmod@sign:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581   000006                     	ds	1
   582   000007                     ?_abs:
   583                           	callstack 0
   584   000007                     ?_read_prec_or_width:
   585                           	callstack 0
   586   000007                     lcd_write@col:
   587                           	callstack 0
   588   000007                     read_prec_or_width@fmt:
   589                           	callstack 0
   590   000007                     memcpy@tmp:
   591                           	callstack 0
   592   000007                     ___awdiv@quotient:
   593                           	callstack 0
   594   000007                     abs@a:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x6
   598   000007                     	ds	1
   599   000008                     read_prec_or_width@ap:
   600                           	callstack 0
   601   000008                     lcd_write@str:
   602                           	callstack 0
   603   000008                     memcpy@d:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x7
   607   000008                     	ds	1
   608   000009                     ??___fladd:
   609   000009                     ??_abs:
   610   000009                     ??___fleq:
   611   000009                     ___fltol@sign1:
   612                           	callstack 0
   613   000009                     ___xxtofl@sign:
   614                           	callstack 0
   615   000009                     read_prec_or_width@c:
   616                           	callstack 0
   617   000009                     ___fpclassifyf@e:
   618                           	callstack 0
   619   000009                     fputs@s:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     lcd_write@end:
   625                           	callstack 0
   626   00000A                     ___fltol@exp1:
   627                           	callstack 0
   628   00000A                     ___xxtofl@exp:
   629                           	callstack 0
   630   00000A                     read_prec_or_width@n:
   631                           	callstack 0
   632   00000A                     memcpy@s:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636   00000A                     	ds	1
   637   00000B                     lcd_write@lin:
   638                           	callstack 0
   639   00000B                     fputs@fp:
   640                           	callstack 0
   641   00000B                     ___xxtofl@arg:
   642                           	callstack 0
   643   00000B                     ___fpclassifyf@u:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0xA
   647   00000B                     	ds	1
   648   00000C                     fputs@c:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0xB
   652   00000C                     	ds	1
   653   00000D                     ___fladd@signs:
   654                           	callstack 0
   655   00000D                     fputs@i:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xC
   659   00000D                     	ds	1
   660   00000E                     ___fladd@aexp:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0xD
   664   00000E                     	ds	1
   665   00000F                     ?___flmul:
   666                           	callstack 0
   667   00000F                     ___fladd@bexp:
   668                           	callstack 0
   669   00000F                     pad@fp:
   670                           	callstack 0
   671   00000F                     ___flmul@b:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0xE
   675   00000F                     	ds	1
   676   000010                     ___fladd@grs:
   677                           	callstack 0
   678   000010                     pad@buf:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0xF
   682   000010                     	ds	2
   683   000012                     pad@p:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x11
   687   000012                     	ds	1
   688   000013                     ___flmul@a:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x12
   692   000013                     	ds	1
   693   000014                     ??_pad:
   694                           
   695                           ; 1 bytes @ 0x13
   696   000014                     	ds	1
   697   000015                     pad@i:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x14
   701   000015                     	ds	2
   702   000017                     ??___flmul:
   703   000017                     dtoa@fp:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x16
   707   000017                     	ds	1
   708   000018                     dtoa@d:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x17
   712   000018                     	ds	2
   713   00001A                     _dtoa$1115:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x19
   717   00001A                     	ds	1
   718   00001B                     ___flmul@sign:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x1A
   722   00001B                     	ds	1
   723   00001C                     dtoa@p:
   724                           	callstack 0
   725   00001C                     ___flmul@grs:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x1B
   729   00001C                     	ds	2
   730   00001E                     dtoa@w:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1D
   734   00001E                     	ds	2
   735   000020                     ___flmul@aexp:
   736                           	callstack 0
   737   000020                     dtoa@s:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x1F
   741   000020                     	ds	1
   742   000021                     ___flmul@bexp:
   743                           	callstack 0
   744   000021                     dtoa@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x20
   748   000021                     	ds	1
   749   000022                     ___flmul@prod:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x21
   753   000022                     	ds	4
   754   000026                     ___flmul@temp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x25
   758   000026                     	ds	2
   759   000028                     ?___fldiv:
   760                           	callstack 0
   761   000028                     ?___flsub:
   762                           	callstack 0
   763   000028                     ___flge@ff1:
   764                           	callstack 0
   765   000028                     ___flsub@b:
   766                           	callstack 0
   767   000028                     ___fldiv@b:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x27
   771   000028                     	ds	4
   772   00002C                     ___flge@ff2:
   773                           	callstack 0
   774   00002C                     ___flsub@a:
   775                           	callstack 0
   776   00002C                     ___fldiv@a:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x2B
   780   00002C                     	ds	4
   781   000030                     ??___fldiv:
   782   000030                     ??___flge:
   783                           
   784                           ; 1 bytes @ 0x2F
   785   000030                     	ds	4
   786   000034                     ___fldiv@rem:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x33
   790   000034                     	ds	4
   791   000038                     ___fldiv@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x37
   795   000038                     	ds	1
   796   000039                     ___fldiv@new_exp:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x38
   800   000039                     	ds	2
   801   00003B                     ___fldiv@grs:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x3A
   805   00003B                     	ds	4
   806   00003F                     ___fldiv@bexp:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x3E
   810   00003F                     	ds	1
   811   000040                     ___fldiv@aexp:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x3F
   815   000040                     	ds	1
   816   000041                     ?_floorf:
   817                           	callstack 0
   818   000041                     floorf@x:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x40
   822   000041                     	ds	4
   823   000045                     ??_floorf:
   824                           
   825                           ; 1 bytes @ 0x44
   826   000045                     	ds	6
   827   00004B                     floorf@m:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x4A
   831   00004B                     	ds	4
   832   00004F                     floorf@e:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x4E
   836   00004F                     	ds	2
   837   000051                     floorf@u:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x50
   841   000051                     	ds	4
   842   000055                     efgtoa@fp:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x54
   846   000055                     	ds	1
   847   000056                     efgtoa@f:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x55
   851   000056                     	ds	4
   852   00005A                     efgtoa@c:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x59
   856   00005A                     	ds	1
   857   00005B                     ??_efgtoa:
   858                           
   859                           ; 1 bytes @ 0x5A
   860   00005B                     	ds	2
   861   00005D                     vfpfcnvrt@fp:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x5C
   865   00005D                     	ds	1
   866   00005E                     vfpfcnvrt@fmt:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x5D
   870   00005E                     	ds	1
   871   00005F                     vfpfcnvrt@ap:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x5E
   875   00005F                     	ds	1
   876   000060                     ??_vfpfcnvrt:
   877                           
   878                           ; 1 bytes @ 0x5F
   879   000060                     	ds	1
   880   000061                     vfpfcnvrt@done:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x60
   884   000061                     	ds	1
   885   000062                     vfpfcnvrt@convarg:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x61
   889   000062                     	ds	4
   890   000066                     vfpfcnvrt@c:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x65
   894   000066                     	ds	1
   895   000067                     vfpfcnvrt@cp:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x66
   899   000067                     	ds	1
   900   000068                     vfprintf@cfmt:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x67
   904   000068                     	ds	1
   905   000069                     sprintf@ap:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x68
   909   000069                     	ds	1
   910   00006A                     sprintf@f:
   911                           	callstack 0
   912                           
   913                           ; 12 bytes @ 0x69
   914   00006A                     	ds	12
   915   000076                     ??_lcd_PERIPHERAL:
   916                           
   917                           ; 1 bytes @ 0x75
   918   000076                     	ds	1
   919   000077                     
   920                           ; 1 bytes @ 0x76
   921 ;;
   922 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   923 ;;
   924 ;; *************** function _main *****************
   925 ;; Defined at:
   926 ;;		line 208 in file "Main_Program.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   940 ;;      Params:         0       0       0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0
   943 ;;      Totals:         0       0       0       0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels required when called: 9
   946 ;; This function calls:
   947 ;;		_config_ADC
   948 ;;		_config_FOSC
   949 ;;		_config_IO
   950 ;;		_conv_AN0
   951 ;;		_equation_SENSOR
   952 ;;		_lcd_PERIPHERAL
   953 ;;		_lcd_SENSOR
   954 ;;		_lcd_init
   955 ;;		_logic_CONTROL
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text0
   962   0034BA                     __ptext0:
   963                           	callstack 0
   964   0034BA                     _main:
   965                           	callstack 22
   966   0034BA                     
   967                           ;Main_Program.c: 210:     config_FOSC();
   968   0034BA  EC58  F01B         	call	_config_FOSC	;wreg free
   969                           
   970                           ;Main_Program.c: 211:     config_IO();
   971   0034BE  EC4A  F01B         	call	_config_IO	;wreg free
   972                           
   973                           ;Main_Program.c: 212:     config_ADC();
   974   0034C2  EC51  F01B         	call	_config_ADC	;wreg free
   975   0034C6                     
   976                           ;Main_Program.c: 213:     lcd_init();
   977   0034C6  ECA6  F018         	call	_lcd_init	;wreg free
   978   0034CA                     l4406:
   979                           
   980                           ;Main_Program.c: 215:     {;Main_Program.c: 216:         conv_AN0();
   981   0034CA  ECCF  F01A         	call	_conv_AN0	;wreg free
   982   0034CE                     
   983                           ;Main_Program.c: 217:         equation_SENSOR();
   984   0034CE  EC2D  F016         	call	_equation_SENSOR	;wreg free
   985   0034D2                     
   986                           ;Main_Program.c: 218:         logic_CONTROL();
   987   0034D2  EC04  F011         	call	_logic_CONTROL	;wreg free
   988   0034D6                     
   989                           ;Main_Program.c: 219:         if(PORTBbits.RB0 == 0) lcd_SENSOR();
   990   0034D6  B081               	btfsc	129,0,c	;volatile
   991   0034D8  EF70  F01A         	goto	u5151
   992   0034DC  EF72  F01A         	goto	u5150
   993   0034E0                     u5151:
   994   0034E0  EF76  F01A         	goto	l4416
   995   0034E4                     u5150:
   996   0034E4  ECF5  F018         	call	_lcd_SENSOR	;wreg free
   997   0034E8  EF65  F01A         	goto	l4406
   998   0034EC                     l4416:
   999   0034EC  ECB1  F013         	call	_lcd_PERIPHERAL	;wreg free
  1000   0034F0  EF65  F01A         	goto	l4406
  1001   0034F4  EF00  F000         	goto	start
  1002   0034F8                     __end_of_main:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _logic_CONTROL *****************
  1006 ;; Defined at:
  1007 ;;		line 172 in file "Main_Program.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1021 ;;      Params:         0       0       0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 1
  1028 ;; This function calls:
  1029 ;;		___flge
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text1
  1036   002208                     __ptext1:
  1037                           	callstack 0
  1038   002208                     _logic_CONTROL:
  1039                           	callstack 29
  1040   002208                     
  1041                           ;Main_Program.c: 174:     if(PressSensor <= (0.25*65))
  1042   002208  0E00               	movlw	0
  1043   00220A  6E28               	movwf	___flge@ff1^0,c
  1044   00220C  0E00               	movlw	0
  1045   00220E  6E29               	movwf	(___flge@ff1+1)^0,c
  1046   002210  0E82               	movlw	130
  1047   002212  6E2A               	movwf	(___flge@ff1+2)^0,c
  1048   002214  0E41               	movlw	65
  1049   002216  6E2B               	movwf	(___flge@ff1+3)^0,c
  1050   002218  C077  F02C         	movff	_PressSensor,___flge@ff2
  1051   00221C  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1052   002220  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1053   002224  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1054   002228  ECBA  F014         	call	___flge	;wreg free
  1055   00222C  A0D8               	btfss	status,0,c
  1056   00222E  EF1B  F011         	goto	u4421
  1057   002232  EF1D  F011         	goto	u4420
  1058   002236                     u4421:
  1059   002236  EF30  F011         	goto	l3890
  1060   00223A                     u4420:
  1061   00223A                     
  1062                           ;Main_Program.c: 175:     {;Main_Program.c: 176:         SolS1 = 1;
  1063   00223A  0E00               	movlw	0
  1064   00223C  0100               	movlb	0	; () banked
  1065   00223E  6F97               	movwf	(_SolS1+1)& (0+255),b
  1066   002240  0E01               	movlw	1
  1067   002242  6F96               	movwf	_SolS1& (0+255),b
  1068                           
  1069                           ;Main_Program.c: 177:         SolS2 = 0;
  1070   002244  0E00               	movlw	0
  1071   002246  6F95               	movwf	(_SolS2+1)& (0+255),b
  1072   002248  0E00               	movlw	0
  1073   00224A  6F94               	movwf	_SolS2& (0+255),b
  1074                           
  1075                           ;Main_Program.c: 178:         SolS3 = 0;
  1076   00224C  0E00               	movlw	0
  1077   00224E  6F93               	movwf	(_SolS3+1)& (0+255),b
  1078   002250  0E00               	movlw	0
  1079   002252  6F92               	movwf	_SolS3& (0+255),b
  1080                           
  1081                           ;Main_Program.c: 179:         SolS4 = 0;
  1082   002254  0E00               	movlw	0
  1083   002256  6F91               	movwf	(_SolS4+1)& (0+255),b
  1084   002258  0E00               	movlw	0
  1085   00225A  6F90               	movwf	_SolS4& (0+255),b
  1086                           
  1087                           ;Main_Program.c: 180:     }
  1088   00225C  EFE6  F011         	goto	l3906
  1089   002260                     l3890:
  1090   002260  0E00               	movlw	0
  1091   002262  6E28               	movwf	___flge@ff1^0,c
  1092   002264  0E00               	movlw	0
  1093   002266  6E29               	movwf	(___flge@ff1+1)^0,c
  1094   002268  0E82               	movlw	130
  1095   00226A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1096   00226C  0E41               	movlw	65
  1097   00226E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1098   002270  C077  F02C         	movff	_PressSensor,___flge@ff2
  1099   002274  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1100   002278  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1101   00227C  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1102   002280  ECBA  F014         	call	___flge	;wreg free
  1103   002284  B0D8               	btfsc	status,0,c
  1104   002286  EF47  F011         	goto	u4431
  1105   00228A  EF49  F011         	goto	u4430
  1106   00228E                     u4431:
  1107   00228E  EF75  F011         	goto	l3896
  1108   002292                     u4430:
  1109   002292  0E00               	movlw	0
  1110   002294  6E28               	movwf	___flge@ff1^0,c
  1111   002296  0E00               	movlw	0
  1112   002298  6E29               	movwf	(___flge@ff1+1)^0,c
  1113   00229A  0E02               	movlw	2
  1114   00229C  6E2A               	movwf	(___flge@ff1+2)^0,c
  1115   00229E  0E42               	movlw	66
  1116   0022A0  6E2B               	movwf	(___flge@ff1+3)^0,c
  1117   0022A2  C077  F02C         	movff	_PressSensor,___flge@ff2
  1118   0022A6  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1119   0022AA  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1120   0022AE  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1121   0022B2  ECBA  F014         	call	___flge	;wreg free
  1122   0022B6  A0D8               	btfss	status,0,c
  1123   0022B8  EF60  F011         	goto	u4441
  1124   0022BC  EF62  F011         	goto	u4440
  1125   0022C0                     u4441:
  1126   0022C0  EF75  F011         	goto	l3896
  1127   0022C4                     u4440:
  1128   0022C4                     
  1129                           ;Main_Program.c: 182:     {;Main_Program.c: 183:         SolS1 = 1;
  1130   0022C4  0E00               	movlw	0
  1131   0022C6  0100               	movlb	0	; () banked
  1132   0022C8  6F97               	movwf	(_SolS1+1)& (0+255),b
  1133   0022CA  0E01               	movlw	1
  1134   0022CC  6F96               	movwf	_SolS1& (0+255),b
  1135                           
  1136                           ;Main_Program.c: 184:         SolS2 = 1;
  1137   0022CE  0E00               	movlw	0
  1138   0022D0  6F95               	movwf	(_SolS2+1)& (0+255),b
  1139   0022D2  0E01               	movlw	1
  1140   0022D4  6F94               	movwf	_SolS2& (0+255),b
  1141                           
  1142                           ;Main_Program.c: 185:         SolS3 = 0;
  1143   0022D6  0E00               	movlw	0
  1144   0022D8  6F93               	movwf	(_SolS3+1)& (0+255),b
  1145   0022DA  0E00               	movlw	0
  1146   0022DC  6F92               	movwf	_SolS3& (0+255),b
  1147                           
  1148                           ;Main_Program.c: 186:         SolS4 = 0;
  1149   0022DE  0E00               	movlw	0
  1150   0022E0  6F91               	movwf	(_SolS4+1)& (0+255),b
  1151   0022E2  0E00               	movlw	0
  1152   0022E4  6F90               	movwf	_SolS4& (0+255),b
  1153                           
  1154                           ;Main_Program.c: 187:     }
  1155   0022E6  EFE6  F011         	goto	l3906
  1156   0022EA                     l3896:
  1157   0022EA  0E00               	movlw	0
  1158   0022EC  6E28               	movwf	___flge@ff1^0,c
  1159   0022EE  0E00               	movlw	0
  1160   0022F0  6E29               	movwf	(___flge@ff1+1)^0,c
  1161   0022F2  0E02               	movlw	2
  1162   0022F4  6E2A               	movwf	(___flge@ff1+2)^0,c
  1163   0022F6  0E42               	movlw	66
  1164   0022F8  6E2B               	movwf	(___flge@ff1+3)^0,c
  1165   0022FA  C077  F02C         	movff	_PressSensor,___flge@ff2
  1166   0022FE  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1167   002302  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1168   002306  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1169   00230A  ECBA  F014         	call	___flge	;wreg free
  1170   00230E  B0D8               	btfsc	status,0,c
  1171   002310  EF8C  F011         	goto	u4451
  1172   002314  EF8E  F011         	goto	u4450
  1173   002318                     u4451:
  1174   002318  EFBA  F011         	goto	l3902
  1175   00231C                     u4450:
  1176   00231C  0E00               	movlw	0
  1177   00231E  6E28               	movwf	___flge@ff1^0,c
  1178   002320  0E00               	movlw	0
  1179   002322  6E29               	movwf	(___flge@ff1+1)^0,c
  1180   002324  0E43               	movlw	67
  1181   002326  6E2A               	movwf	(___flge@ff1+2)^0,c
  1182   002328  0E42               	movlw	66
  1183   00232A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1184   00232C  C077  F02C         	movff	_PressSensor,___flge@ff2
  1185   002330  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1186   002334  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1187   002338  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1188   00233C  ECBA  F014         	call	___flge	;wreg free
  1189   002340  A0D8               	btfss	status,0,c
  1190   002342  EFA5  F011         	goto	u4461
  1191   002346  EFA7  F011         	goto	u4460
  1192   00234A                     u4461:
  1193   00234A  EFBA  F011         	goto	l3902
  1194   00234E                     u4460:
  1195   00234E                     
  1196                           ;Main_Program.c: 189:     {;Main_Program.c: 190:         SolS1 = 1;
  1197   00234E  0E00               	movlw	0
  1198   002350  0100               	movlb	0	; () banked
  1199   002352  6F97               	movwf	(_SolS1+1)& (0+255),b
  1200   002354  0E01               	movlw	1
  1201   002356  6F96               	movwf	_SolS1& (0+255),b
  1202                           
  1203                           ;Main_Program.c: 191:         SolS2 = 1;
  1204   002358  0E00               	movlw	0
  1205   00235A  6F95               	movwf	(_SolS2+1)& (0+255),b
  1206   00235C  0E01               	movlw	1
  1207   00235E  6F94               	movwf	_SolS2& (0+255),b
  1208                           
  1209                           ;Main_Program.c: 192:         SolS3 = 1;
  1210   002360  0E00               	movlw	0
  1211   002362  6F93               	movwf	(_SolS3+1)& (0+255),b
  1212   002364  0E01               	movlw	1
  1213   002366  6F92               	movwf	_SolS3& (0+255),b
  1214                           
  1215                           ;Main_Program.c: 193:         SolS4 = 0;
  1216   002368  0E00               	movlw	0
  1217   00236A  6F91               	movwf	(_SolS4+1)& (0+255),b
  1218   00236C  0E00               	movlw	0
  1219   00236E  6F90               	movwf	_SolS4& (0+255),b
  1220                           
  1221                           ;Main_Program.c: 194:     }
  1222   002370  EFE6  F011         	goto	l3906
  1223   002374                     l3902:
  1224   002374  0E00               	movlw	0
  1225   002376  6E28               	movwf	___flge@ff1^0,c
  1226   002378  0E00               	movlw	0
  1227   00237A  6E29               	movwf	(___flge@ff1+1)^0,c
  1228   00237C  0E43               	movlw	67
  1229   00237E  6E2A               	movwf	(___flge@ff1+2)^0,c
  1230   002380  0E42               	movlw	66
  1231   002382  6E2B               	movwf	(___flge@ff1+3)^0,c
  1232   002384  C077  F02C         	movff	_PressSensor,___flge@ff2
  1233   002388  C078  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1234   00238C  C079  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1235   002390  C07A  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1236   002394  ECBA  F014         	call	___flge	;wreg free
  1237   002398  B0D8               	btfsc	status,0,c
  1238   00239A  EFD1  F011         	goto	u4471
  1239   00239E  EFD3  F011         	goto	u4470
  1240   0023A2                     u4471:
  1241   0023A2  EFE6  F011         	goto	l136
  1242   0023A6                     u4470:
  1243   0023A6                     
  1244                           ;Main_Program.c: 196:     {;Main_Program.c: 197:         SolS1 = 1;
  1245   0023A6  0E00               	movlw	0
  1246   0023A8  0100               	movlb	0	; () banked
  1247   0023AA  6F97               	movwf	(_SolS1+1)& (0+255),b
  1248   0023AC  0E01               	movlw	1
  1249   0023AE  6F96               	movwf	_SolS1& (0+255),b
  1250                           
  1251                           ;Main_Program.c: 198:         SolS2 = 1;
  1252   0023B0  0E00               	movlw	0
  1253   0023B2  6F95               	movwf	(_SolS2+1)& (0+255),b
  1254   0023B4  0E01               	movlw	1
  1255   0023B6  6F94               	movwf	_SolS2& (0+255),b
  1256                           
  1257                           ;Main_Program.c: 199:         SolS3 = 1;
  1258   0023B8  0E00               	movlw	0
  1259   0023BA  6F93               	movwf	(_SolS3+1)& (0+255),b
  1260   0023BC  0E01               	movlw	1
  1261   0023BE  6F92               	movwf	_SolS3& (0+255),b
  1262                           
  1263                           ;Main_Program.c: 200:         SolS4 = 1;
  1264   0023C0  0E00               	movlw	0
  1265   0023C2  6F91               	movwf	(_SolS4+1)& (0+255),b
  1266   0023C4  0E01               	movlw	1
  1267   0023C6  6F90               	movwf	_SolS4& (0+255),b
  1268   0023C8  EFE6  F011         	goto	l3906
  1269   0023CC                     l136:
  1270   0023CC                     l3906:
  1271                           
  1272                           ;Main_Program.c: 203:     PORTCbits.RC0 = SolS1;
  1273   0023CC  0100               	movlb	0	; () banked
  1274   0023CE  B196               	btfsc	_SolS1& (0+255),0,b
  1275   0023D0  D002               	bra	u4485
  1276   0023D2  9082               	bcf	130,0,c	;volatile
  1277   0023D4  D001               	bra	u4486
  1278   0023D6                     u4485:
  1279   0023D6  8082               	bsf	130,0,c	;volatile
  1280   0023D8                     u4486:
  1281   0023D8                     
  1282                           ;Main_Program.c: 204:     PORTCbits.RC1 = SolS2;
  1283   0023D8  0100               	movlb	0	; () banked
  1284   0023DA  B194               	btfsc	_SolS2& (0+255),0,b
  1285   0023DC  D002               	bra	u4495
  1286   0023DE  9282               	bcf	130,1,c	;volatile
  1287   0023E0  D001               	bra	u4496
  1288   0023E2                     u4495:
  1289   0023E2  8282               	bsf	130,1,c	;volatile
  1290   0023E4                     u4496:
  1291   0023E4                     
  1292                           ;Main_Program.c: 205:     PORTCbits.RC2 = SolS3;
  1293   0023E4  0100               	movlb	0	; () banked
  1294   0023E6  B192               	btfsc	_SolS3& (0+255),0,b
  1295   0023E8  D002               	bra	u4505
  1296   0023EA  9482               	bcf	130,2,c	;volatile
  1297   0023EC  D001               	bra	u4506
  1298   0023EE                     u4505:
  1299   0023EE  8482               	bsf	130,2,c	;volatile
  1300   0023F0                     u4506:
  1301   0023F0                     
  1302                           ;Main_Program.c: 206:     PORTCbits.RC3 = SolS4;
  1303   0023F0  0100               	movlb	0	; () banked
  1304   0023F2  B190               	btfsc	_SolS4& (0+255),0,b
  1305   0023F4  D002               	bra	u4515
  1306   0023F6  9682               	bcf	130,3,c	;volatile
  1307   0023F8  D001               	bra	u4516
  1308   0023FA                     u4515:
  1309   0023FA  8682               	bsf	130,3,c	;volatile
  1310   0023FC                     u4516:
  1311   0023FC  0012               	return		;funcret
  1312   0023FE                     __end_of_logic_CONTROL:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function _lcd_init *****************
  1316 ;; Defined at:
  1317 ;;		line 3 in file "LCD4b_EXSTO.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  i               1    5[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         0       0       0       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0       0       0
  1333 ;;      Temps:          1       0       0       0       0       0       0
  1334 ;;      Totals:         2       0       0       0       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 2
  1338 ;; This function calls:
  1339 ;;		_lcd_cmd
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text2
  1346   00314C                     __ptext2:
  1347                           	callstack 0
  1348   00314C                     _lcd_init:
  1349                           	callstack 28
  1350   00314C                     
  1351                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
  1352   00314C  0E00               	movlw	0
  1353   00314E  6E95               	movwf	149,c	;volatile
  1354   003150                     
  1355                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
  1356   003150  9496               	bcf	150,2,c	;volatile
  1357   003152                     
  1358                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
  1359   003152  9296               	bcf	150,1,c	;volatile
  1360   003154                     
  1361                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1362   003154  9096               	bcf	150,0,c	;volatile
  1363                           
  1364                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1365   003156  0E00               	movlw	0
  1366   003158  6E83               	movwf	131,c	;volatile
  1367   00315A                     
  1368                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1369   00315A  9084               	bcf	132,0,c	;volatile
  1370   00315C                     
  1371                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1372   00315C  9284               	bcf	132,1,c	;volatile
  1373   00315E                     
  1374                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1375   00315E  9484               	bcf	132,2,c	;volatile
  1376   003160                     
  1377                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1378   003160  0E27               	movlw	39
  1379   003162  6E05               	movwf	??_lcd_init^0,c
  1380   003164  0EF5               	movlw	245
  1381   003166                     u5167:
  1382   003166  2EE8               	decfsz	wreg,f,c
  1383   003168  D7FE               	bra	u5167
  1384   00316A  2E05               	decfsz	??_lcd_init^0,f,c
  1385   00316C  D7FC               	bra	u5167
  1386   00316E  0000               	nop	
  1387   003170                     
  1388                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1389   003170  0E00               	movlw	0
  1390   003172  6E06               	movwf	lcd_init@i^0,c
  1391   003174                     l3820:
  1392                           
  1393                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1394   003174  0E30               	movlw	48
  1395   003176  ECBB  F015         	call	_lcd_cmd
  1396   00317A                     
  1397                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1398   00317A  0E0D               	movlw	13
  1399   00317C  6E05               	movwf	??_lcd_init^0,c
  1400   00317E  0EFC               	movlw	252
  1401   003180                     u5177:
  1402   003180  2EE8               	decfsz	wreg,f,c
  1403   003182  D7FE               	bra	u5177
  1404   003184  2E05               	decfsz	??_lcd_init^0,f,c
  1405   003186  D7FC               	bra	u5177
  1406   003188                     
  1407                           ;LCD4b_EXSTO.c: 22:     }
  1408   003188  2A06               	incf	lcd_init@i^0,f,c
  1409   00318A  0E02               	movlw	2
  1410   00318C  6406               	cpfsgt	lcd_init@i^0,c
  1411   00318E  EFCB  F018         	goto	u4401
  1412   003192  EFCD  F018         	goto	u4400
  1413   003196                     u4401:
  1414   003196  EFBA  F018         	goto	l3820
  1415   00319A                     u4400:
  1416   00319A                     
  1417                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1418   00319A  0E02               	movlw	2
  1419   00319C  ECBB  F015         	call	_lcd_cmd
  1420   0031A0                     
  1421                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1422   0031A0  0E1A               	movlw	26
  1423   0031A2                     u5187:
  1424   0031A2  2EE8               	decfsz	wreg,f,c
  1425   0031A4  D7FE               	bra	u5187
  1426   0031A6  D000               	nop2	
  1427   0031A8                     
  1428                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1429   0031A8  0E28               	movlw	40
  1430   0031AA  ECBB  F015         	call	_lcd_cmd
  1431                           
  1432                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1433   0031AE  0E1A               	movlw	26
  1434   0031B0                     u5197:
  1435   0031B0  2EE8               	decfsz	wreg,f,c
  1436   0031B2  D7FE               	bra	u5197
  1437   0031B4  D000               	nop2	
  1438   0031B6                     
  1439                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1440   0031B6  0E01               	movlw	1
  1441   0031B8  ECBB  F015         	call	_lcd_cmd
  1442   0031BC                     
  1443                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1444   0031BC  0E06               	movlw	6
  1445   0031BE  6E05               	movwf	??_lcd_init^0,c
  1446   0031C0  0E30               	movlw	48
  1447   0031C2                     u5207:
  1448   0031C2  2EE8               	decfsz	wreg,f,c
  1449   0031C4  D7FE               	bra	u5207
  1450   0031C6  2E05               	decfsz	??_lcd_init^0,f,c
  1451   0031C8  D7FC               	bra	u5207
  1452   0031CA  D000               	nop2	
  1453                           
  1454                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1455   0031CC  0E0C               	movlw	12
  1456   0031CE  ECBB  F015         	call	_lcd_cmd
  1457   0031D2                     
  1458                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1459   0031D2  0E1A               	movlw	26
  1460   0031D4                     u5217:
  1461   0031D4  2EE8               	decfsz	wreg,f,c
  1462   0031D6  D7FE               	bra	u5217
  1463   0031D8  D000               	nop2	
  1464   0031DA                     
  1465                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1466   0031DA  0E06               	movlw	6
  1467   0031DC  ECBB  F015         	call	_lcd_cmd
  1468                           
  1469                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1470   0031E0  0E1A               	movlw	26
  1471   0031E2                     u5227:
  1472   0031E2  2EE8               	decfsz	wreg,f,c
  1473   0031E4  D7FE               	bra	u5227
  1474   0031E6  D000               	nop2	
  1475   0031E8  0012               	return		;funcret
  1476   0031EA                     __end_of_lcd_init:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _lcd_SENSOR *****************
  1480 ;; Defined at:
  1481 ;;		line 126 in file "Main_Program.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1495 ;;      Params:         0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 8
  1502 ;; This function calls:
  1503 ;;		_lcd_write
  1504 ;;		_sprintf
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text3
  1511   0031EA                     __ptext3:
  1512                           	callstack 0
  1513   0031EA                     _lcd_SENSOR:
  1514                           	callstack 22
  1515   0031EA                     
  1516                           ;Main_Program.c: 128:    sprintf(BufferLCD_Press,
  1517   0031EA  0E50               	movlw	low _BufferLCD_Press
  1518   0031EC  0100               	movlb	0	; () banked
  1519   0031EE  6FF9               	movwf	sprintf@s& (0+255),b
  1520   0031F0  0E01               	movlw	high _BufferLCD_Press
  1521   0031F2  6FFA               	movwf	(sprintf@s+1)& (0+255),b
  1522   0031F4  0E21               	movlw	low STR_1
  1523   0031F6  6FFB               	movwf	sprintf@fmt& (0+255),b
  1524   0031F8  C077  F0FC         	movff	_PressSensor,?_sprintf+3
  1525   0031FC  C078  F0FD         	movff	_PressSensor+1,?_sprintf+4
  1526   003200  C079  F0FE         	movff	_PressSensor+2,?_sprintf+5
  1527   003204  C07A  F0FF         	movff	_PressSensor+3,?_sprintf+6
  1528   003208  ECFD  F019         	call	_sprintf	;wreg free
  1529                           
  1530                           ;Main_Program.c: 132:    sprintf(BufferLCD_Voltage,
  1531   00320C  0E98               	movlw	low _BufferLCD_Voltage
  1532   00320E  0100               	movlb	0	; () banked
  1533   003210  6FF9               	movwf	sprintf@s& (0+255),b
  1534   003212  6BFA               	clrf	(sprintf@s+1)& (0+255),b
  1535   003214  0E30               	movlw	low STR_2
  1536   003216  6FFB               	movwf	sprintf@fmt& (0+255),b
  1537   003218  C08C  F0FC         	movff	_VoltageSensor,?_sprintf+3
  1538   00321C  C08D  F0FD         	movff	_VoltageSensor+1,?_sprintf+4
  1539   003220  C08E  F0FE         	movff	_VoltageSensor+2,?_sprintf+5
  1540   003224  C08F  F0FF         	movff	_VoltageSensor+3,?_sprintf+6
  1541   003228  ECFD  F019         	call	_sprintf	;wreg free
  1542   00322C                     
  1543                           ;Main_Program.c: 136:     lcd_write(1,1,"SENSOR:        ");
  1544   00322C  0E01               	movlw	1
  1545   00322E  6E07               	movwf	lcd_write@col^0,c
  1546   003230  0E01               	movlw	low STR_3
  1547   003232  6E08               	movwf	lcd_write@str^0,c
  1548   003234  5008               	movf	lcd_write@str^0,w,c
  1549   003236  A4D8               	btfss	status,2,c
  1550   003238  0E06               	movlw	high __smallconst
  1551   00323A  6E09               	movwf	(lcd_write@str+1)^0,c
  1552   00323C  0E01               	movlw	1
  1553   00323E  EC56  F018         	call	_lcd_write
  1554   003242                     
  1555                           ;Main_Program.c: 137:     lcd_write(1,9,BufferLCD_Voltage);
  1556   003242  0E09               	movlw	9
  1557   003244  6E07               	movwf	lcd_write@col^0,c
  1558   003246  0E98               	movlw	low _BufferLCD_Voltage
  1559   003248  6E08               	movwf	lcd_write@str^0,c
  1560   00324A  6A09               	clrf	(lcd_write@str+1)^0,c
  1561   00324C  0E01               	movlw	1
  1562   00324E  EC56  F018         	call	_lcd_write
  1563   003252                     
  1564                           ;Main_Program.c: 138:     lcd_write(2,1,"PRESSAO:       ");
  1565   003252  0E01               	movlw	1
  1566   003254  6E07               	movwf	lcd_write@col^0,c
  1567   003256  0E11               	movlw	low STR_4
  1568   003258  6E08               	movwf	lcd_write@str^0,c
  1569   00325A  5008               	movf	lcd_write@str^0,w,c
  1570   00325C  A4D8               	btfss	status,2,c
  1571   00325E  0E06               	movlw	high __smallconst
  1572   003260  6E09               	movwf	(lcd_write@str+1)^0,c
  1573   003262  0E02               	movlw	2
  1574   003264  EC56  F018         	call	_lcd_write
  1575   003268                     
  1576                           ;Main_Program.c: 139:     lcd_write(2,10,BufferLCD_Press);
  1577   003268  0E0A               	movlw	10
  1578   00326A  6E07               	movwf	lcd_write@col^0,c
  1579   00326C  0E50               	movlw	low _BufferLCD_Press
  1580   00326E  6E08               	movwf	lcd_write@str^0,c
  1581   003270  0E01               	movlw	high _BufferLCD_Press
  1582   003272  6E09               	movwf	(lcd_write@str+1)^0,c
  1583   003274  0E02               	movlw	2
  1584   003276  EC56  F018         	call	_lcd_write
  1585   00327A  0012               	return		;funcret
  1586   00327C                     __end_of_lcd_SENSOR:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _lcd_PERIPHERAL *****************
  1590 ;; Defined at:
  1591 ;;		line 142 in file "Main_Program.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1605 ;;      Params:         0       0       0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0
  1607 ;;      Temps:          1       0       0       0       0       0       0
  1608 ;;      Totals:         1       0       0       0       0       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 8
  1612 ;; This function calls:
  1613 ;;		_lcd_clear
  1614 ;;		_lcd_write
  1615 ;;		_sprintf
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text4
  1622   002762                     __ptext4:
  1623                           	callstack 0
  1624   002762                     _lcd_PERIPHERAL:
  1625                           	callstack 22
  1626   002762                     
  1627                           ;Main_Program.c: 144:     sprintf(BufferS1,
  1628   002762  0EC0               	movlw	low _BufferS1
  1629   002764  0100               	movlb	0	; () banked
  1630   002766  6FF9               	movwf	sprintf@s& (0+255),b
  1631   002768  6BFA               	clrf	(sprintf@s+1)& (0+255),b
  1632   00276A  0E3C               	movlw	low STR_5
  1633   00276C  6FFB               	movwf	sprintf@fmt& (0+255),b
  1634   00276E  C096  F0FC         	movff	_SolS1,?_sprintf+3
  1635   002772  C097  F0FD         	movff	_SolS1+1,?_sprintf+4
  1636   002776  ECFD  F019         	call	_sprintf	;wreg free
  1637                           
  1638                           ;Main_Program.c: 148:     sprintf(BufferS2,
  1639   00277A  0EB8               	movlw	low _BufferS2
  1640   00277C  0100               	movlb	0	; () banked
  1641   00277E  6FF9               	movwf	sprintf@s& (0+255),b
  1642   002780  6BFA               	clrf	(sprintf@s+1)& (0+255),b
  1643   002782  0E3C               	movlw	low STR_5
  1644   002784  6FFB               	movwf	sprintf@fmt& (0+255),b
  1645   002786  C094  F0FC         	movff	_SolS2,?_sprintf+3
  1646   00278A  C095  F0FD         	movff	_SolS2+1,?_sprintf+4
  1647   00278E  ECFD  F019         	call	_sprintf	;wreg free
  1648                           
  1649                           ;Main_Program.c: 152:     sprintf(BufferS3,
  1650   002792  0EB0               	movlw	low _BufferS3
  1651   002794  0100               	movlb	0	; () banked
  1652   002796  6FF9               	movwf	sprintf@s& (0+255),b
  1653   002798  6BFA               	clrf	(sprintf@s+1)& (0+255),b
  1654   00279A  0E3C               	movlw	low STR_5
  1655   00279C  6FFB               	movwf	sprintf@fmt& (0+255),b
  1656   00279E  C092  F0FC         	movff	_SolS3,?_sprintf+3
  1657   0027A2  C093  F0FD         	movff	_SolS3+1,?_sprintf+4
  1658   0027A6  ECFD  F019         	call	_sprintf	;wreg free
  1659                           
  1660                           ;Main_Program.c: 156:     sprintf(BufferS4,
  1661   0027AA  0EA8               	movlw	low _BufferS4
  1662   0027AC  0100               	movlb	0	; () banked
  1663   0027AE  6FF9               	movwf	sprintf@s& (0+255),b
  1664   0027B0  6BFA               	clrf	(sprintf@s+1)& (0+255),b
  1665   0027B2  0E3C               	movlw	low STR_5
  1666   0027B4  6FFB               	movwf	sprintf@fmt& (0+255),b
  1667   0027B6  C090  F0FC         	movff	_SolS4,?_sprintf+3
  1668   0027BA  C091  F0FD         	movff	_SolS4+1,?_sprintf+4
  1669   0027BE  ECFD  F019         	call	_sprintf	;wreg free
  1670   0027C2                     
  1671                           ;Main_Program.c: 160:     lcd_clear();
  1672   0027C2  ECE9  F01A         	call	_lcd_clear	;wreg free
  1673   0027C6                     
  1674                           ;Main_Program.c: 161:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1675   0027C6  0E34               	movlw	52
  1676   0027C8  6E76               	movwf	??_lcd_PERIPHERAL^0,c
  1677   0027CA  0EF2               	movlw	242
  1678   0027CC                     u5237:
  1679   0027CC  2EE8               	decfsz	wreg,f,c
  1680   0027CE  D7FE               	bra	u5237
  1681   0027D0  2E76               	decfsz	??_lcd_PERIPHERAL^0,f,c
  1682   0027D2  D7FC               	bra	u5237
  1683   0027D4                     
  1684                           ;Main_Program.c: 162:     lcd_write(1,1,"S1:");
  1685   0027D4  0E01               	movlw	1
  1686   0027D6  6E07               	movwf	lcd_write@col^0,c
  1687   0027D8  0E53               	movlw	low STR_9
  1688   0027DA  6E08               	movwf	lcd_write@str^0,c
  1689   0027DC  5008               	movf	lcd_write@str^0,w,c
  1690   0027DE  A4D8               	btfss	status,2,c
  1691   0027E0  0E06               	movlw	high __smallconst
  1692   0027E2  6E09               	movwf	(lcd_write@str+1)^0,c
  1693   0027E4  0E01               	movlw	1
  1694   0027E6  EC56  F018         	call	_lcd_write
  1695   0027EA                     
  1696                           ;Main_Program.c: 163:     lcd_write(1,4,BufferS1);
  1697   0027EA  0E04               	movlw	4
  1698   0027EC  6E07               	movwf	lcd_write@col^0,c
  1699   0027EE  0EC0               	movlw	low _BufferS1
  1700   0027F0  6E08               	movwf	lcd_write@str^0,c
  1701   0027F2  6A09               	clrf	(lcd_write@str+1)^0,c
  1702   0027F4  0E01               	movlw	1
  1703   0027F6  EC56  F018         	call	_lcd_write
  1704   0027FA                     
  1705                           ;Main_Program.c: 164:     lcd_write(1,8,"S2:");
  1706   0027FA  0E08               	movlw	8
  1707   0027FC  6E07               	movwf	lcd_write@col^0,c
  1708   0027FE  0E57               	movlw	low STR_10
  1709   002800  6E08               	movwf	lcd_write@str^0,c
  1710   002802  5008               	movf	lcd_write@str^0,w,c
  1711   002804  A4D8               	btfss	status,2,c
  1712   002806  0E06               	movlw	high __smallconst
  1713   002808  6E09               	movwf	(lcd_write@str+1)^0,c
  1714   00280A  0E01               	movlw	1
  1715   00280C  EC56  F018         	call	_lcd_write
  1716   002810                     
  1717                           ;Main_Program.c: 165:     lcd_write(1,11,BufferS2);
  1718   002810  0E0B               	movlw	11
  1719   002812  6E07               	movwf	lcd_write@col^0,c
  1720   002814  0EB8               	movlw	low _BufferS2
  1721   002816  6E08               	movwf	lcd_write@str^0,c
  1722   002818  6A09               	clrf	(lcd_write@str+1)^0,c
  1723   00281A  0E01               	movlw	1
  1724   00281C  EC56  F018         	call	_lcd_write
  1725   002820                     
  1726                           ;Main_Program.c: 166:     lcd_write(2,1,"S3:");
  1727   002820  0E01               	movlw	1
  1728   002822  6E07               	movwf	lcd_write@col^0,c
  1729   002824  0E5B               	movlw	low STR_11
  1730   002826  6E08               	movwf	lcd_write@str^0,c
  1731   002828  5008               	movf	lcd_write@str^0,w,c
  1732   00282A  A4D8               	btfss	status,2,c
  1733   00282C  0E06               	movlw	high __smallconst
  1734   00282E  6E09               	movwf	(lcd_write@str+1)^0,c
  1735   002830  0E02               	movlw	2
  1736   002832  EC56  F018         	call	_lcd_write
  1737   002836                     
  1738                           ;Main_Program.c: 167:     lcd_write(2,4,BufferS3);
  1739   002836  0E04               	movlw	4
  1740   002838  6E07               	movwf	lcd_write@col^0,c
  1741   00283A  0EB0               	movlw	low _BufferS3
  1742   00283C  6E08               	movwf	lcd_write@str^0,c
  1743   00283E  6A09               	clrf	(lcd_write@str+1)^0,c
  1744   002840  0E02               	movlw	2
  1745   002842  EC56  F018         	call	_lcd_write
  1746   002846                     
  1747                           ;Main_Program.c: 168:     lcd_write(2,8,"S4: ");
  1748   002846  0E08               	movlw	8
  1749   002848  6E07               	movwf	lcd_write@col^0,c
  1750   00284A  0E46               	movlw	low STR_12
  1751   00284C  6E08               	movwf	lcd_write@str^0,c
  1752   00284E  5008               	movf	lcd_write@str^0,w,c
  1753   002850  A4D8               	btfss	status,2,c
  1754   002852  0E06               	movlw	high __smallconst
  1755   002854  6E09               	movwf	(lcd_write@str+1)^0,c
  1756   002856  0E02               	movlw	2
  1757   002858  EC56  F018         	call	_lcd_write
  1758   00285C                     
  1759                           ;Main_Program.c: 169:     lcd_write(2,11,BufferS4);
  1760   00285C  0E0B               	movlw	11
  1761   00285E  6E07               	movwf	lcd_write@col^0,c
  1762   002860  0EA8               	movlw	low _BufferS4
  1763   002862  6E08               	movwf	lcd_write@str^0,c
  1764   002864  6A09               	clrf	(lcd_write@str+1)^0,c
  1765   002866  0E02               	movlw	2
  1766   002868  EC56  F018         	call	_lcd_write
  1767   00286C  0012               	return		;funcret
  1768   00286E                     __end_of_lcd_PERIPHERAL:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _sprintf *****************
  1772 ;; Defined at:
  1773 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  s               2   47[BANK0 ] PTR unsigned char 
  1776 ;;		 -> BufferS4(8), BufferS3(8), BufferS2(8), BufferS1(8), 
  1777 ;;		 -> BufferLCD_Voltage(16), BufferLCD_Press(16), 
  1778 ;;  fmt             1   49[BANK0 ] PTR const unsigned char 
  1779 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  1780 ;;		 -> STR_2(12), STR_1(15), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  f              12  105[COMRAM] struct _IO_FILE
  1783 ;;  ret             2    0        int 
  1784 ;;  ap              1  104[COMRAM] PTR void [1]
  1785 ;;		 -> ?_sprintf(2), 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2   47[BANK0 ] int 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:         0       7       0       0       0       0       0
  1796 ;;      Locals:        13       0       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0
  1798 ;;      Totals:        13       7       0       0       0       0       0
  1799 ;;Total ram usage:       20 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 7
  1802 ;; This function calls:
  1803 ;;		_vfprintf
  1804 ;; This function is called by:
  1805 ;;		_lcd_SENSOR
  1806 ;;		_lcd_PERIPHERAL
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text5
  1811   0033FA                     __ptext5:
  1812                           	callstack 0
  1813   0033FA                     _sprintf:
  1814                           	callstack 22
  1815   0033FA  0EFC               	movlw	low (?_sprintf+3)
  1816   0033FC  6E69               	movwf	sprintf@ap^0,c
  1817   0033FE  C0F9  F06A         	movff	sprintf@s,sprintf@f
  1818   003402  C0FA  F06B         	movff	sprintf@s+1,sprintf@f+1
  1819   003406  0E00               	movlw	0
  1820   003408  6E6E               	movwf	(sprintf@f+4)^0,c
  1821   00340A  0E00               	movlw	0
  1822   00340C  6E6D               	movwf	(sprintf@f+3)^0,c
  1823   00340E  0E00               	movlw	0
  1824   003410  6E75               	movwf	(sprintf@f+11)^0,c
  1825   003412  0E00               	movlw	0
  1826   003414  6E74               	movwf	(sprintf@f+10)^0,c
  1827   003416  0E6A               	movlw	low sprintf@f
  1828   003418  0100               	movlb	0	; () banked
  1829   00341A  6FF6               	movwf	vfprintf@fp& (0+255),b
  1830   00341C  C0FB  F0F7         	movff	sprintf@fmt,vfprintf@fmt
  1831   003420  0E69               	movlw	low sprintf@ap
  1832   003422  6FF8               	movwf	vfprintf@ap& (0+255),b
  1833   003424  EC1D  F01A         	call	_vfprintf	;wreg free
  1834   003428  506D               	movf	(sprintf@f+3)^0,w,c
  1835   00342A  0100               	movlb	0	; () banked
  1836   00342C  25F9               	addwf	sprintf@s& (0+255),w,b
  1837   00342E  6ED9               	movwf	fsr2l,c
  1838   003430  506E               	movf	(sprintf@f+4)^0,w,c
  1839   003432  21FA               	addwfc	(sprintf@s+1)& (0+255),w,b
  1840   003434  6EDA               	movwf	fsr2h,c
  1841   003436  6ADF               	clrf	indf2,c
  1842   003438                     
  1843                           ; BSR set to: 0
  1844   003438  0012               	return		;funcret
  1845   00343A                     __end_of_sprintf:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _vfprintf *****************
  1849 ;; Defined at:
  1850 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1853 ;;		 -> sprintf@f(12), 
  1854 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1855 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  1856 ;;		 -> STR_2(12), STR_1(15), 
  1857 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1858 ;;		 -> sprintf@ap(1), 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  cfmt            1  103[COMRAM] PTR unsigned char 
  1861 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  1862 ;;		 -> STR_2(12), STR_1(15), 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   44[BANK0 ] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1872 ;;      Params:         0       3       0       0       0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0
  1875 ;;      Totals:         1       3       0       0       0       0       0
  1876 ;;Total ram usage:        4 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 6
  1879 ;; This function calls:
  1880 ;;		_vfpfcnvrt
  1881 ;; This function is called by:
  1882 ;;		_sprintf
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text6
  1887   00343A                     __ptext6:
  1888                           	callstack 0
  1889   00343A                     _vfprintf:
  1890                           	callstack 22
  1891   00343A                     
  1892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1893   00343A  C0F7  F068         	movff	vfprintf@fmt,vfprintf@cfmt
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1896   00343E  EF29  F01A         	goto	l4352
  1897   003442                     l4350:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1900   003442  C0F6  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1901   003446  0E68               	movlw	low vfprintf@cfmt
  1902   003448  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  1903   00344A  C0F8  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1904   00344E  EC9C  F00E         	call	_vfpfcnvrt	;wreg free
  1905   003452                     l4352:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1908   003452  C068  FFF6         	movff	vfprintf@cfmt,tblptrl
  1909   003456                     	if	1	;There is more than 1 active tblptr byte
  1910   003456  0E06               	movlw	high __smallconst
  1911   003458  6EF7               	movwf	tblptrh,c
  1912   00345A                     	endif
  1913   00345A                     	if	0	;tblptru may be non-zero
  1914   00345A                     	endif
  1915   00345A                     	if	0	;tblptru may be non-zero
  1916   00345A                     	endif
  1917   00345A  0008               	tblrd		*
  1918   00345C  50F5               	movf	tablat,w,c
  1919   00345E  0900               	iorlw	0
  1920   003460  A4D8               	btfss	status,2,c
  1921   003462  EF35  F01A         	goto	u5141
  1922   003466  EF37  F01A         	goto	u5140
  1923   00346A                     u5141:
  1924   00346A  EF21  F01A         	goto	l4350
  1925   00346E                     u5140:
  1926   00346E                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1928   00346E  0E00               	movlw	0
  1929   003470  0100               	movlb	0	; () banked
  1930   003472  6FF7               	movwf	(?_vfprintf+1)& (0+255),b
  1931   003474  0E00               	movlw	0
  1932   003476  6FF6               	movwf	?_vfprintf& (0+255),b
  1933   003478                     
  1934                           ; BSR set to: 0
  1935   003478  0012               	return		;funcret
  1936   00347A                     __end_of_vfprintf:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _vfpfcnvrt *****************
  1940 ;; Defined at:
  1941 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  1944 ;;		 -> sprintf@f(12), 
  1945 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  1946 ;;		 -> vfprintf@cfmt(1), 
  1947 ;;  ap              1   94[COMRAM] PTR PTR void 
  1948 ;;		 -> sprintf@ap(1), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  convarg         4   97[COMRAM] struct .
  1951 ;;  cp              1  102[COMRAM] PTR unsigned char 
  1952 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  1953 ;;		 -> STR_2(12), STR_1(15), 
  1954 ;;  c               1  101[COMRAM] unsigned char 
  1955 ;;  done            1   96[COMRAM] _Bool 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         3       0       0       0       0       0       0
  1966 ;;      Locals:         7       0       0       0       0       0       0
  1967 ;;      Temps:          1       0       0       0       0       0       0
  1968 ;;      Totals:        11       0       0       0       0       0       0
  1969 ;;Total ram usage:       11 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 5
  1972 ;; This function calls:
  1973 ;;		_dtoa
  1974 ;;		_efgtoa
  1975 ;;		_fputc
  1976 ;;		_read_prec_or_width
  1977 ;; This function is called by:
  1978 ;;		_vfprintf
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text7
  1983   001D38                     __ptext7:
  1984                           	callstack 0
  1985   001D38                     _vfpfcnvrt:
  1986                           	callstack 22
  1987   001D38                     
  1988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1989   001D38  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1990   001D3A  6ED9               	movwf	fsr2l,c
  1991   001D3C  6ADA               	clrf	fsr2h,c
  1992   001D3E  CFDF FFF6          	movff	indf2,tblptrl
  1993   001D42                     	if	1	;There is more than 1 active tblptr byte
  1994   001D42  0E06               	movlw	high __smallconst
  1995   001D44  6EF7               	movwf	tblptrh,c
  1996   001D46                     	endif
  1997   001D46                     	if	0	;tblptru may be non-zero
  1998   001D46                     	endif
  1999   001D46                     	if	0	;tblptru may be non-zero
  2000   001D46                     	endif
  2001   001D46  0008               	tblrd		*
  2002   001D48  50F5               	movf	tablat,w,c
  2003   001D4A  0A25               	xorlw	37
  2004   001D4C  A4D8               	btfss	status,2,c
  2005   001D4E  EFAB  F00E         	goto	u5071
  2006   001D52  EFAD  F00E         	goto	u5070
  2007   001D56                     u5071:
  2008   001D56  EFE9  F00F         	goto	l4342
  2009   001D5A                     u5070:
  2010   001D5A                     
  2011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2012   001D5A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2013   001D5C  6ED9               	movwf	fsr2l,c
  2014   001D5E  6ADA               	clrf	fsr2h,c
  2015   001D60  2ADF               	incf	indf2,f,c
  2016   001D62                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2018   001D62  0E00               	movlw	0
  2019   001D64  6E7C               	movwf	(_width+1)^0,c
  2020   001D66  0E00               	movlw	0
  2021   001D68  6E7B               	movwf	_width^0,c
  2022   001D6A  C07B  F07F         	movff	_width,_flags
  2023   001D6E                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2025   001D6E  687D               	setf	_prec^0,c
  2026   001D70  687E               	setf	(_prec+1)^0,c
  2027   001D72                     
  2028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2029   001D72  0E00               	movlw	0
  2030   001D74  6E61               	movwf	vfpfcnvrt@done^0,c
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2033   001D76  EFD7  F00E         	goto	l4276
  2034   001D7A                     l4266:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2037   001D7A  827F               	bsf	_flags^0,1,c
  2038   001D7C                     
  2039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2040   001D7C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2041   001D7E  6ED9               	movwf	fsr2l,c
  2042   001D80  6ADA               	clrf	fsr2h,c
  2043   001D82  2ADF               	incf	indf2,f,c
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2046   001D84  EFD7  F00E         	goto	l4276
  2047   001D88                     l4270:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2050   001D88  0E01               	movlw	1
  2051   001D8A  6E61               	movwf	vfpfcnvrt@done^0,c
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2054   001D8C  EFD7  F00E         	goto	l4276
  2055   001D90                     l4274:
  2056   001D90  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2057   001D92  6ED9               	movwf	fsr2l,c
  2058   001D94  6ADA               	clrf	fsr2h,c
  2059   001D96  CFDF FFF6          	movff	indf2,tblptrl
  2060   001D9A                     	if	1	;There is more than 1 active tblptr byte
  2061   001D9A  0E06               	movlw	high __smallconst
  2062   001D9C  6EF7               	movwf	tblptrh,c
  2063   001D9E                     	endif
  2064   001D9E                     	if	0	;tblptru may be non-zero
  2065   001D9E                     	endif
  2066   001D9E                     	if	0	;tblptru may be non-zero
  2067   001D9E                     	endif
  2068   001D9E  0008               	tblrd		*
  2069   001DA0  50F5               	movf	tablat,w,c
  2070                           
  2071                           ; Switch size 1, requested type "simple"
  2072                           ; Number of cases is 1, Range of values is 48 to 48
  2073                           ; switch strategies available:
  2074                           ; Name         Instructions Cycles
  2075                           ; simple_byte            4     3 (average)
  2076                           ;	Chosen strategy is simple_byte
  2077   001DA2  0A30               	xorlw	48	; case 48
  2078   001DA4  B4D8               	btfsc	status,2,c
  2079   001DA6  EFBD  F00E         	goto	l4266
  2080   001DAA  EFC4  F00E         	goto	l4270
  2081   001DAE                     l4276:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2084   001DAE  5061               	movf	vfpfcnvrt@done^0,w,c
  2085   001DB0  B4D8               	btfsc	status,2,c
  2086   001DB2  EFDD  F00E         	goto	u5081
  2087   001DB6  EFDF  F00E         	goto	u5080
  2088   001DBA                     u5081:
  2089   001DBA  EFC8  F00E         	goto	l4274
  2090   001DBE                     u5080:
  2091   001DBE                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2093   001DBE  C05E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2094   001DC2  C05F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2095   001DC6  EC03  F018         	call	_read_prec_or_width	;wreg free
  2096   001DCA  C007  F07B         	movff	?_read_prec_or_width,_width
  2097   001DCE  C008  F07C         	movff	?_read_prec_or_width+1,_width+1
  2098   001DD2                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2100   001DD2  BE7C               	btfsc	(_width+1)^0,7,c
  2101   001DD4  EFF0  F00E         	goto	u5090
  2102   001DD8  EFEE  F00E         	goto	u5091
  2103   001DDC                     u5091:
  2104   001DDC  EFF5  F00E         	goto	l4284
  2105   001DE0                     u5090:
  2106   001DE0                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2108   001DE0  807F               	bsf	_flags^0,0,c
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2111   001DE2  6C7B               	negf	_width^0,c
  2112   001DE4  1E7C               	comf	(_width+1)^0,f,c
  2113   001DE6  B0D8               	btfsc	status,0,c
  2114   001DE8  2A7C               	incf	(_width+1)^0,f,c
  2115   001DEA                     l4284:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2118   001DEA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2119   001DEC  6ED9               	movwf	fsr2l,c
  2120   001DEE  6ADA               	clrf	fsr2h,c
  2121   001DF0  CFDF FFF6          	movff	indf2,tblptrl
  2122   001DF4                     	if	1	;There is more than 1 active tblptr byte
  2123   001DF4  0E06               	movlw	high __smallconst
  2124   001DF6  6EF7               	movwf	tblptrh,c
  2125   001DF8                     	endif
  2126   001DF8                     	if	0	;tblptru may be non-zero
  2127   001DF8                     	endif
  2128   001DF8                     	if	0	;tblptru may be non-zero
  2129   001DF8                     	endif
  2130   001DF8  0008               	tblrd		*
  2131   001DFA  50F5               	movf	tablat,w,c
  2132   001DFC  0A2E               	xorlw	46
  2133   001DFE  A4D8               	btfss	status,2,c
  2134   001E00  EF04  F00F         	goto	u5101
  2135   001E04  EF06  F00F         	goto	u5100
  2136   001E08                     u5101:
  2137   001E08  EF14  F00F         	goto	l4290
  2138   001E0C                     u5100:
  2139   001E0C                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2141   001E0C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2142   001E0E  6ED9               	movwf	fsr2l,c
  2143   001E10  6ADA               	clrf	fsr2h,c
  2144   001E12  2ADF               	incf	indf2,f,c
  2145   001E14                     
  2146                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2147   001E14  C05E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2148   001E18  C05F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2149   001E1C  EC03  F018         	call	_read_prec_or_width	;wreg free
  2150   001E20  C007  F07D         	movff	?_read_prec_or_width,_prec
  2151   001E24  C008  F07E         	movff	?_read_prec_or_width+1,_prec+1
  2152   001E28                     l4290:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2155   001E28  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2156   001E2A  6ED9               	movwf	fsr2l,c
  2157   001E2C  6ADA               	clrf	fsr2h,c
  2158   001E2E  50DF               	movf	indf2,w,c
  2159   001E30  6E67               	movwf	vfpfcnvrt@cp^0,c
  2160   001E32                     
  2161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2162   001E32  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2163   001E36                     	if	1	;There is more than 1 active tblptr byte
  2164   001E36  0E06               	movlw	high __smallconst
  2165   001E38  6EF7               	movwf	tblptrh,c
  2166   001E3A                     	endif
  2167   001E3A                     	if	0	;tblptru may be non-zero
  2168   001E3A                     	endif
  2169   001E3A                     	if	0	;tblptru may be non-zero
  2170   001E3A                     	endif
  2171   001E3A  0008               	tblrd		*
  2172   001E3C  50F5               	movf	tablat,w,c
  2173   001E3E  0A64               	xorlw	100
  2174   001E40  B4D8               	btfsc	status,2,c
  2175   001E42  EF25  F00F         	goto	u5111
  2176   001E46  EF27  F00F         	goto	u5110
  2177   001E4A                     u5111:
  2178   001E4A  EF35  F00F         	goto	l4296
  2179   001E4E                     u5110:
  2180   001E4E  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2181   001E52                     	if	1	;There is more than 1 active tblptr byte
  2182   001E52  0E06               	movlw	high __smallconst
  2183   001E54  6EF7               	movwf	tblptrh,c
  2184   001E56                     	endif
  2185   001E56                     	if	0	;tblptru may be non-zero
  2186   001E56                     	endif
  2187   001E56                     	if	0	;tblptru may be non-zero
  2188   001E56                     	endif
  2189   001E56  0008               	tblrd		*
  2190   001E58  50F5               	movf	tablat,w,c
  2191   001E5A  0A69               	xorlw	105
  2192   001E5C  A4D8               	btfss	status,2,c
  2193   001E5E  EF33  F00F         	goto	u5121
  2194   001E62  EF35  F00F         	goto	u5120
  2195   001E66                     u5121:
  2196   001E66  EF50  F00F         	goto	l4304
  2197   001E6A                     u5120:
  2198   001E6A                     l4296:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2201   001E6A  505F               	movf	vfpfcnvrt@ap^0,w,c
  2202   001E6C  6ED9               	movwf	fsr2l,c
  2203   001E6E  6ADA               	clrf	fsr2h,c
  2204   001E70  0E02               	movlw	2
  2205   001E72  26DF               	addwf	indf2,f,c
  2206   001E74  5CDF               	subwf	indf2,w,c
  2207   001E76  6ED9               	movwf	fsr2l,c
  2208   001E78  6ADA               	clrf	fsr2h,c
  2209   001E7A  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2210   001E7E  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2211   001E82                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2213   001E82  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2214   001E84  6ED9               	movwf	fsr2l,c
  2215   001E86  6ADA               	clrf	fsr2h,c
  2216   001E88  2867               	incf	vfpfcnvrt@cp^0,w,c
  2217   001E8A  6EDF               	movwf	indf2,c
  2218   001E8C                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2220   001E8C  C05D  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2221   001E90  C062  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2222   001E94  C063  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2223   001E98  ECD9  F012         	call	_dtoa	;wreg free
  2224   001E9C  EFFA  F00F         	goto	l969
  2225   001EA0                     l4304:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2228   001EA0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2229   001EA2  6ED9               	movwf	fsr2l,c
  2230   001EA4  6ADA               	clrf	fsr2h,c
  2231   001EA6  50DF               	movf	indf2,w,c
  2232   001EA8  6E67               	movwf	vfpfcnvrt@cp^0,c
  2233   001EAA                     
  2234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2235   001EAA  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2236   001EAE                     	if	1	;There is more than 1 active tblptr byte
  2237   001EAE  0E06               	movlw	high __smallconst
  2238   001EB0  6EF7               	movwf	tblptrh,c
  2239   001EB2                     	endif
  2240   001EB2                     	if	0	;tblptru may be non-zero
  2241   001EB2                     	endif
  2242   001EB2                     	if	0	;tblptru may be non-zero
  2243   001EB2                     	endif
  2244   001EB2  0008               	tblrd		*
  2245   001EB4  CFF5 F066          	movff	tablat,vfpfcnvrt@c
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2248   001EB8  EF69  F00F         	goto	l4316
  2249   001EBC                     l4308:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2252   001EBC  2A67               	incf	vfpfcnvrt@cp^0,f,c
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  2255   001EBE  EF78  F00F         	goto	l4318
  2256   001EC2                     l4310:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2259   001EC2  0E6C               	movlw	108
  2260   001EC4  6E66               	movwf	vfpfcnvrt@c^0,c
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  2263   001EC6  EF78  F00F         	goto	l4318
  2264   001ECA                     l4312:
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2267   001ECA  0E00               	movlw	0
  2268   001ECC  6E66               	movwf	vfpfcnvrt@c^0,c
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  2271   001ECE  EF78  F00F         	goto	l4318
  2272   001ED2                     l4316:
  2273   001ED2  5066               	movf	vfpfcnvrt@c^0,w,c
  2274                           
  2275                           ; Switch size 1, requested type "simple"
  2276                           ; Number of cases is 3, Range of values is 76 to 108
  2277                           ; switch strategies available:
  2278                           ; Name         Instructions Cycles
  2279                           ; simple_byte           10     6 (average)
  2280                           ;	Chosen strategy is simple_byte
  2281   001ED4  0A4C               	xorlw	76	; case 76
  2282   001ED6  B4D8               	btfsc	status,2,c
  2283   001ED8  EF5E  F00F         	goto	l4308
  2284   001EDC  0A2A               	xorlw	42	; case 102
  2285   001EDE  B4D8               	btfsc	status,2,c
  2286   001EE0  EF61  F00F         	goto	l4310
  2287   001EE4  0A0A               	xorlw	10	; case 108
  2288   001EE6  B4D8               	btfsc	status,2,c
  2289   001EE8  EF5E  F00F         	goto	l4308
  2290   001EEC  EF65  F00F         	goto	l4312
  2291   001EF0                     l4318:
  2292   001EF0  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2293   001EF4                     	if	1	;There is more than 1 active tblptr byte
  2294   001EF4  0E06               	movlw	high __smallconst
  2295   001EF6  6EF7               	movwf	tblptrh,c
  2296   001EF8                     	endif
  2297   001EF8                     	if	0	;tblptru may be non-zero
  2298   001EF8                     	endif
  2299   001EF8                     	if	0	;tblptru may be non-zero
  2300   001EF8                     	endif
  2301   001EF8  0008               	tblrd		*
  2302   001EFA  50F5               	movf	tablat,w,c
  2303   001EFC  0A66               	xorlw	102
  2304   001EFE  A4D8               	btfss	status,2,c
  2305   001F00  EF84  F00F         	goto	u5131
  2306   001F04  EF86  F00F         	goto	u5130
  2307   001F08                     u5131:
  2308   001F08  EFE3  F00F         	goto	l4338
  2309   001F0C                     u5130:
  2310   001F0C  EFB0  F00F         	goto	l4326
  2311   001F10                     l4320:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2314   001F10  505F               	movf	vfpfcnvrt@ap^0,w,c
  2315   001F12  6ED9               	movwf	fsr2l,c
  2316   001F14  6ADA               	clrf	fsr2h,c
  2317   001F16  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2318   001F1A  0E04               	movlw	4
  2319   001F1C  26DF               	addwf	indf2,f,c
  2320   001F1E  5060               	movf	??_vfpfcnvrt^0,w,c
  2321   001F20  6ED9               	movwf	fsr2l,c
  2322   001F22  6ADA               	clrf	fsr2h,c
  2323   001F24  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2324   001F28  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2325   001F2C  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+2
  2326   001F30  CFDE F065          	movff	postinc2,vfpfcnvrt@convarg+3
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  2329   001F34  EFBB  F00F         	goto	l4328
  2330   001F38                     l4322:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2333   001F38  505F               	movf	vfpfcnvrt@ap^0,w,c
  2334   001F3A  6ED9               	movwf	fsr2l,c
  2335   001F3C  6ADA               	clrf	fsr2h,c
  2336   001F3E  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2337   001F42  0E04               	movlw	4
  2338   001F44  26DF               	addwf	indf2,f,c
  2339   001F46  5060               	movf	??_vfpfcnvrt^0,w,c
  2340   001F48  6ED9               	movwf	fsr2l,c
  2341   001F4A  6ADA               	clrf	fsr2h,c
  2342   001F4C  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2343   001F50  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2344   001F54  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+2
  2345   001F58  CFDE F065          	movff	postinc2,vfpfcnvrt@convarg+3
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  2348   001F5C  EFBB  F00F         	goto	l4328
  2349   001F60                     l4326:
  2350   001F60  5066               	movf	vfpfcnvrt@c^0,w,c
  2351                           
  2352                           ; Switch size 1, requested type "simple"
  2353                           ; Number of cases is 2, Range of values is 76 to 108
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte            7     4 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358   001F62  0A4C               	xorlw	76	; case 76
  2359   001F64  B4D8               	btfsc	status,2,c
  2360   001F66  EF9C  F00F         	goto	l4322
  2361   001F6A  0A20               	xorlw	32	; case 108
  2362   001F6C  B4D8               	btfsc	status,2,c
  2363   001F6E  EF88  F00F         	goto	l4320
  2364   001F72  EFBB  F00F         	goto	l4328
  2365   001F76                     l4328:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2368   001F76  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2369   001F78  6ED9               	movwf	fsr2l,c
  2370   001F7A  6ADA               	clrf	fsr2h,c
  2371   001F7C  2867               	incf	vfpfcnvrt@cp^0,w,c
  2372   001F7E  6EDF               	movwf	indf2,c
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2375   001F80  EFD7  F00F         	goto	l4336
  2376   001F84                     l4330:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2379   001F84  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2380   001F88  C062  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  2381   001F8C  C063  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2382   001F90  C064  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2383   001F94  C065  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2384   001F98  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2385   001F9C                     	if	1	;There is more than 1 active tblptr byte
  2386   001F9C  0E06               	movlw	high __smallconst
  2387   001F9E  6EF7               	movwf	tblptrh,c
  2388   001FA0                     	endif
  2389   001FA0                     	if	0	;tblptru may be non-zero
  2390   001FA0                     	endif
  2391   001FA0                     	if	0	;tblptru may be non-zero
  2392   001FA0                     	endif
  2393   001FA0  0008               	tblrd		*
  2394   001FA2  CFF5 F05A          	movff	tablat,efgtoa@c
  2395   001FA6  EC30  F003         	call	_efgtoa	;wreg free
  2396   001FAA  EFFA  F00F         	goto	l969
  2397   001FAE                     l4336:
  2398   001FAE  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2399   001FB2                     	if	1	;There is more than 1 active tblptr byte
  2400   001FB2  0E06               	movlw	high __smallconst
  2401   001FB4  6EF7               	movwf	tblptrh,c
  2402   001FB6                     	endif
  2403   001FB6                     	if	0	;tblptru may be non-zero
  2404   001FB6                     	endif
  2405   001FB6                     	if	0	;tblptru may be non-zero
  2406   001FB6                     	endif
  2407   001FB6  0008               	tblrd		*
  2408   001FB8  50F5               	movf	tablat,w,c
  2409                           
  2410                           ; Switch size 1, requested type "simple"
  2411                           ; Number of cases is 1, Range of values is 102 to 102
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte            4     3 (average)
  2415                           ;	Chosen strategy is simple_byte
  2416   001FBA  0A66               	xorlw	102	; case 102
  2417   001FBC  B4D8               	btfsc	status,2,c
  2418   001FBE  EFC2  F00F         	goto	l4330
  2419   001FC2  EFE3  F00F         	goto	l4338
  2420   001FC6                     l4338:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2423   001FC6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2424   001FC8  6ED9               	movwf	fsr2l,c
  2425   001FCA  6ADA               	clrf	fsr2h,c
  2426   001FCC  2ADF               	incf	indf2,f,c
  2427   001FCE  EFFA  F00F         	goto	l969
  2428   001FD2                     l4342:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2431   001FD2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2432   001FD4  6ED9               	movwf	fsr2l,c
  2433   001FD6  6ADA               	clrf	fsr2h,c
  2434   001FD8  CFDF FFF6          	movff	indf2,tblptrl
  2435   001FDC                     	if	1	;There is more than 1 active tblptr byte
  2436   001FDC  0E06               	movlw	high __smallconst
  2437   001FDE  6EF7               	movwf	tblptrh,c
  2438   001FE0                     	endif
  2439   001FE0                     	if	0	;tblptru may be non-zero
  2440   001FE0                     	endif
  2441   001FE0                     	if	0	;tblptru may be non-zero
  2442   001FE0                     	endif
  2443   001FE0  0008               	tblrd		*
  2444   001FE2  50F5               	movf	tablat,w,c
  2445   001FE4  6E01               	movwf	fputc@c^0,c
  2446   001FE6  6A02               	clrf	(fputc@c+1)^0,c
  2447   001FE8  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2448   001FEC  ECF9  F016         	call	_fputc	;wreg free
  2449   001FF0  EFE3  F00F         	goto	l4338
  2450   001FF4                     l969:
  2451   001FF4  0012               	return		;funcret
  2452   001FF6                     __end_of_vfpfcnvrt:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _read_prec_or_width *****************
  2456 ;; Defined at:
  2457 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2460 ;;		 -> vfprintf@cfmt(1), 
  2461 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2462 ;;		 -> sprintf@ap(1), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  c               1    8[COMRAM] unsigned char 
  2465 ;;  n               2    9[COMRAM] int 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  2    6[COMRAM] int 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2475 ;;      Params:         2       0       0       0       0       0       0
  2476 ;;      Locals:         3       0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0
  2478 ;;      Totals:         5       0       0       0       0       0       0
  2479 ;;Total ram usage:        5 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 1
  2482 ;; This function calls:
  2483 ;;		___wmul
  2484 ;; This function is called by:
  2485 ;;		_vfpfcnvrt
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text8
  2490   003006                     __ptext8:
  2491                           	callstack 0
  2492   003006                     _read_prec_or_width:
  2493                           	callstack 25
  2494   003006                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2496   003006  0E00               	movlw	0
  2497   003008  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2498   00300A  0E00               	movlw	0
  2499   00300C  6E0A               	movwf	read_prec_or_width@n^0,c
  2500   00300E                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2502   00300E  5007               	movf	read_prec_or_width@fmt^0,w,c
  2503   003010  6ED9               	movwf	fsr2l,c
  2504   003012  6ADA               	clrf	fsr2h,c
  2505   003014  CFDF FFF6          	movff	indf2,tblptrl
  2506   003018                     	if	1	;There is more than 1 active tblptr byte
  2507   003018  0E06               	movlw	high __smallconst
  2508   00301A  6EF7               	movwf	tblptrh,c
  2509   00301C                     	endif
  2510   00301C                     	if	0	;tblptru may be non-zero
  2511   00301C                     	endif
  2512   00301C                     	if	0	;tblptru may be non-zero
  2513   00301C                     	endif
  2514   00301C  0008               	tblrd		*
  2515   00301E  50F5               	movf	tablat,w,c
  2516   003020  0A2A               	xorlw	42
  2517   003022  A4D8               	btfss	status,2,c
  2518   003024  EF16  F018         	goto	u4141
  2519   003028  EF18  F018         	goto	u4140
  2520   00302C                     u4141:
  2521   00302C  EF3E  F018         	goto	l3578
  2522   003030                     u4140:
  2523   003030                     
  2524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2525   003030  5007               	movf	read_prec_or_width@fmt^0,w,c
  2526   003032  6ED9               	movwf	fsr2l,c
  2527   003034  6ADA               	clrf	fsr2h,c
  2528   003036  2ADF               	incf	indf2,f,c
  2529   003038                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2531   003038  5008               	movf	read_prec_or_width@ap^0,w,c
  2532   00303A  6ED9               	movwf	fsr2l,c
  2533   00303C  6ADA               	clrf	fsr2h,c
  2534   00303E  0E02               	movlw	2
  2535   003040  26DF               	addwf	indf2,f,c
  2536   003042  5CDF               	subwf	indf2,w,c
  2537   003044  6ED9               	movwf	fsr2l,c
  2538   003046  6ADA               	clrf	fsr2h,c
  2539   003048  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2540   00304C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2543   003050  EF51  F018         	goto	l949
  2544   003054                     l3574:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2547   003054  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2548   003058  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2549   00305C  0E00               	movlw	0
  2550   00305E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2551   003060  0E0A               	movlw	10
  2552   003062  6E03               	movwf	___wmul@multiplicand^0,c
  2553   003064  EC18  F01B         	call	___wmul	;wreg free
  2554   003068  5009               	movf	read_prec_or_width@c^0,w,c
  2555   00306A  2401               	addwf	?___wmul^0,w,c
  2556   00306C  6E0A               	movwf	read_prec_or_width@n^0,c
  2557   00306E  0E00               	movlw	0
  2558   003070  2002               	addwfc	(?___wmul+1)^0,w,c
  2559   003072  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2560   003074                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2562   003074  5007               	movf	read_prec_or_width@fmt^0,w,c
  2563   003076  6ED9               	movwf	fsr2l,c
  2564   003078  6ADA               	clrf	fsr2h,c
  2565   00307A  2ADF               	incf	indf2,f,c
  2566   00307C                     l3578:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2569   00307C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2570   00307E  6ED9               	movwf	fsr2l,c
  2571   003080  6ADA               	clrf	fsr2h,c
  2572   003082  CFDF FFF6          	movff	indf2,tblptrl
  2573   003086                     	if	1	;There is more than 1 active tblptr byte
  2574   003086  0E06               	movlw	high __smallconst
  2575   003088  6EF7               	movwf	tblptrh,c
  2576   00308A                     	endif
  2577   00308A                     	if	0	;tblptru may be non-zero
  2578   00308A                     	endif
  2579   00308A                     	if	0	;tblptru may be non-zero
  2580   00308A                     	endif
  2581   00308A  0008               	tblrd		*
  2582   00308C  50F5               	movf	tablat,w,c
  2583   00308E  0FD0               	addlw	208
  2584   003090  6E09               	movwf	read_prec_or_width@c^0,c
  2585   003092  0E09               	movlw	9
  2586   003094  6409               	cpfsgt	read_prec_or_width@c^0,c
  2587   003096  EF4F  F018         	goto	u4151
  2588   00309A  EF51  F018         	goto	u4150
  2589   00309E                     u4151:
  2590   00309E  EF2A  F018         	goto	l3574
  2591   0030A2                     u4150:
  2592   0030A2                     l949:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2595   0030A2  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2596   0030A6  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2597   0030AA  0012               	return		;funcret
  2598   0030AC                     __end_of_read_prec_or_width:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function ___wmul *****************
  2602 ;; Defined at:
  2603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  multiplier      2    0[COMRAM] unsigned int 
  2606 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  product         2    4[COMRAM] unsigned int 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    0[COMRAM] unsigned int 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, prodl, prodh
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         4       0       0       0       0       0       0
  2619 ;;      Locals:         2       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         6       0       0       0       0       0       0
  2622 ;;Total ram usage:        6 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_read_prec_or_width
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text9
  2632   003630                     __ptext9:
  2633                           	callstack 0
  2634   003630                     ___wmul:
  2635                           	callstack 25
  2636   003630  5001               	movf	___wmul@multiplier^0,w,c
  2637   003632  0203               	mulwf	___wmul@multiplicand^0,c
  2638   003634  CFF3 F005          	movff	prodl,___wmul@product
  2639   003638  CFF4 F006          	movff	prodh,___wmul@product+1
  2640   00363C  5001               	movf	___wmul@multiplier^0,w,c
  2641   00363E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2642   003640  50F3               	movf	243,w,c
  2643   003642  2606               	addwf	(___wmul@product+1)^0,f,c
  2644   003644  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2645   003646  0203               	mulwf	___wmul@multiplicand^0,c
  2646   003648  50F3               	movf	243,w,c
  2647   00364A  2606               	addwf	(___wmul@product+1)^0,f,c
  2648   00364C  C005  F001         	movff	___wmul@product,?___wmul
  2649   003650  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2650   003654  0012               	return		;funcret
  2651   003656                     __end_of___wmul:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _efgtoa *****************
  2655 ;; Defined at:
  2656 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  2659 ;;		 -> sprintf@f(12), 
  2660 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  2661 ;;  c               1   89[COMRAM] unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  u               4   40[BANK0 ] struct flui
  2664 ;;  g               4   34[BANK0 ] struct flui
  2665 ;;  l               4   27[BANK0 ] struct flui
  2666 ;;  h               4   23[BANK0 ] struct flui
  2667 ;;  ou              4   17[BANK0 ] struct flui
  2668 ;;  n               2   38[BANK0 ] int 
  2669 ;;  i               2   31[BANK0 ] int 
  2670 ;;  w               2   21[BANK0 ] int 
  2671 ;;  e               2   15[BANK0 ] int 
  2672 ;;  m               2   13[BANK0 ] int 
  2673 ;;  d               2   11[BANK0 ] int 
  2674 ;;  t               2    4[BANK0 ] int 
  2675 ;;  p               2    2[BANK0 ] int 
  2676 ;;  ne              2    0[BANK0 ] int 
  2677 ;;  sign            1   33[BANK0 ] unsigned char 
  2678 ;;  nmode           1   10[BANK0 ] unsigned char 
  2679 ;;  mode            1    9[BANK0 ] unsigned char 
  2680 ;;  pp              1    8[BANK0 ] unsigned char 
  2681 ;;  esign           1    0        unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         6       0       0       0       0       0       0
  2692 ;;      Locals:         0      44       0       0       0       0       0
  2693 ;;      Temps:          2       0       0       0       0       0       0
  2694 ;;      Totals:         8      44       0       0       0       0       0
  2695 ;;Total ram usage:       52 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 4
  2698 ;; This function calls:
  2699 ;;		___fladd
  2700 ;;		___fldiv
  2701 ;;		___fleq
  2702 ;;		___flge
  2703 ;;		___flmul
  2704 ;;		___flneg
  2705 ;;		___flsub
  2706 ;;		___fltol
  2707 ;;		___fpclassifyf
  2708 ;;		_floorf
  2709 ;;		_labs
  2710 ;;		_memcpy
  2711 ;;		_pad
  2712 ;;		_strcpy
  2713 ;; This function is called by:
  2714 ;;		_vfpfcnvrt
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text10
  2719   000660                     __ptext10:
  2720                           	callstack 0
  2721   000660                     _efgtoa:
  2722                           	callstack 22
  2723   000660                     
  2724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2725   000660  0E00               	movlw	0
  2726   000662  0100               	movlb	0	; () banked
  2727   000664  6FEB               	movwf	efgtoa@sign& (0+255),b
  2728   000666                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2731   000666  C056  F0EC         	movff	efgtoa@f,efgtoa@g
  2732   00066A  C057  F0ED         	movff	efgtoa@f+1,efgtoa@g+1
  2733   00066E  C058  F0EE         	movff	efgtoa@f+2,efgtoa@g+2
  2734   000672  C059  F0EF         	movff	efgtoa@f+3,efgtoa@g+3
  2735   000676                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2738   000676  BFEF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2739   000678  EF42  F003         	goto	u4720
  2740   00067C  EF40  F003         	goto	u4721
  2741   000680                     u4721:
  2742   000680  EF56  F003         	goto	l4032
  2743   000684                     u4720:
  2744   000684                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2747   000684  0E01               	movlw	1
  2748   000686  6FEB               	movwf	efgtoa@sign& (0+255),b
  2749   000688                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2752   000688  C0EC  F001         	movff	efgtoa@g,___flneg@f1
  2753   00068C  C0ED  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2754   000690  C0EE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2755   000694  C0EF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2756   000698  EC99  F01A         	call	___flneg	;wreg free
  2757   00069C  C001  F0EC         	movff	?___flneg,efgtoa@g
  2758   0006A0  C002  F0ED         	movff	?___flneg+1,efgtoa@g+1
  2759   0006A4  C003  F0EE         	movff	?___flneg+2,efgtoa@g+2
  2760   0006A8  C004  F0EF         	movff	?___flneg+3,efgtoa@g+3
  2761   0006AC                     l4032:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2764   0006AC  0E00               	movlw	0
  2765   0006AE  0100               	movlb	0	; () banked
  2766   0006B0  6FF1               	movwf	(efgtoa@n+1)& (0+255),b
  2767   0006B2  0E00               	movlw	0
  2768   0006B4  6FF0               	movwf	efgtoa@n& (0+255),b
  2769   0006B6                     
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2772   0006B6  C07B  F0DF         	movff	_width,efgtoa@w
  2773   0006BA  C07C  F0E0         	movff	_width+1,efgtoa@w+1
  2774   0006BE                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2777   0006BE  51EB               	movf	efgtoa@sign& (0+255),w,b
  2778   0006C0  B4D8               	btfsc	status,2,c
  2779   0006C2  EF65  F003         	goto	u4731
  2780   0006C6  EF67  F003         	goto	u4730
  2781   0006CA                     u4731:
  2782   0006CA  EF7B  F003         	goto	l4046
  2783   0006CE                     u4730:
  2784   0006CE                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2787   0006CE  51EB               	movf	efgtoa@sign& (0+255),w,b
  2788   0006D0  A4D8               	btfss	status,2,c
  2789   0006D2  EF6D  F003         	goto	u4741
  2790   0006D6  EF6F  F003         	goto	u4740
  2791   0006DA                     u4741:
  2792   0006DA  EF75  F003         	goto	l4042
  2793   0006DE                     u4740:
  2794   0006DE                     
  2795                           ; BSR set to: 0
  2796   0006DE  0E00               	movlw	0
  2797   0006E0  6FD1               	movwf	(_efgtoa$1146+1)& (0+255),b
  2798   0006E2  0E2B               	movlw	43
  2799   0006E4  6FD0               	movwf	_efgtoa$1146& (0+255),b
  2800   0006E6  EF79  F003         	goto	l4044
  2801   0006EA                     l4042:
  2802                           
  2803                           ; BSR set to: 0
  2804   0006EA  0E00               	movlw	0
  2805   0006EC  6FD1               	movwf	(_efgtoa$1146+1)& (0+255),b
  2806   0006EE  0E2D               	movlw	45
  2807   0006F0  6FD0               	movwf	_efgtoa$1146& (0+255),b
  2808   0006F2                     l4044:
  2809                           
  2810                           ; BSR set to: 0
  2811   0006F2  C0D0  F0EB         	movff	_efgtoa$1146,efgtoa@sign
  2812   0006F6                     l4046:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2816   0006F6  C0EC  F001         	movff	efgtoa@g,___fpclassifyf@x
  2817   0006FA  C0ED  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2818   0006FE  C0EE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2819   000702  C0EF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2820   000706  EC3C  F015         	call	___fpclassifyf	;wreg free
  2821   00070A  0401               	decf	?___fpclassifyf^0,w,c
  2822   00070C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2823   00070E  A4D8               	btfss	status,2,c
  2824   000710  EF8C  F003         	goto	u4751
  2825   000714  EF8E  F003         	goto	u4750
  2826   000718                     u4751:
  2827   000718  EFBD  F003         	goto	l4064
  2828   00071C                     u4750:
  2829   00071C                     
  2830                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2831   00071C  0100               	movlb	0	; () banked
  2832   00071E  51EB               	movf	efgtoa@sign& (0+255),w,b
  2833   000720  B4D8               	btfsc	status,2,c
  2834   000722  EF95  F003         	goto	u4761
  2835   000726  EF97  F003         	goto	u4760
  2836   00072A                     u4761:
  2837   00072A  EFA0  F003         	goto	l4056
  2838   00072E                     u4760:
  2839   00072E                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2842   00072E  C0EB  F100         	movff	efgtoa@sign,_dbuf
  2843   000732                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  2846   000732  07DF               	decf	efgtoa@w& (0+255),f,b
  2847   000734  A0D8               	btfss	status,0,c
  2848   000736  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  2849   000738                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2852   000738  0E00               	movlw	0
  2853   00073A  6FF1               	movwf	(efgtoa@n+1)& (0+255),b
  2854   00073C  0E01               	movlw	1
  2855   00073E  6FF0               	movwf	efgtoa@n& (0+255),b
  2856   000740                     l4056:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2860   000740  0E00               	movlw	low _dbuf
  2861   000742  25F0               	addwf	efgtoa@n& (0+255),w,b
  2862   000744  6E01               	movwf	strcpy@dest^0,c
  2863   000746  0E01               	movlw	high _dbuf
  2864   000748  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2865   00074A  6E02               	movwf	(strcpy@dest+1)^0,c
  2866   00074C  0E4B               	movlw	low STR_13
  2867   00074E  6E03               	movwf	strcpy@src^0,c
  2868   000750  EC7C  F01A         	call	_strcpy	;wreg free
  2869   000754                     l4058:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2872   000754  0100               	movlb	0	; () banked
  2873   000756  0EFD               	movlw	253
  2874   000758  27DF               	addwf	efgtoa@w& (0+255),f,b
  2875   00075A  0EFF               	movlw	255
  2876   00075C  23E0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2877   00075E                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2880   00075E  C055  F00F         	movff	efgtoa@fp,pad@fp
  2881   000762  0E00               	movlw	low _dbuf
  2882   000764  6E10               	movwf	pad@buf^0,c
  2883   000766  0E01               	movlw	high _dbuf
  2884   000768  6E11               	movwf	(pad@buf+1)^0,c
  2885   00076A  C0DF  F012         	movff	efgtoa@w,pad@p
  2886   00076E  C0E0  F013         	movff	efgtoa@w+1,pad@p+1
  2887   000772  EC3E  F019         	call	_pad	;wreg free
  2888   000776  EF59  F008         	goto	l898
  2889   00077A                     l4064:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2892   00077A  C0EC  F001         	movff	efgtoa@g,___fpclassifyf@x
  2893   00077E  C0ED  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2894   000782  C0EE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2895   000786  C0EF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2896   00078A  EC3C  F015         	call	___fpclassifyf	;wreg free
  2897   00078E  5001               	movf	?___fpclassifyf^0,w,c
  2898   000790  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2899   000792  A4D8               	btfss	status,2,c
  2900   000794  EFCE  F003         	goto	u4771
  2901   000798  EFD0  F003         	goto	u4770
  2902   00079C                     u4771:
  2903   00079C  EFEE  F003         	goto	l4082
  2904   0007A0                     u4770:
  2905   0007A0                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2907   0007A0  0100               	movlb	0	; () banked
  2908   0007A2  51EB               	movf	efgtoa@sign& (0+255),w,b
  2909   0007A4  B4D8               	btfsc	status,2,c
  2910   0007A6  EFD7  F003         	goto	u4781
  2911   0007AA  EFD9  F003         	goto	u4780
  2912   0007AE                     u4781:
  2913   0007AE  EFE2  F003         	goto	l4074
  2914   0007B2                     u4780:
  2915   0007B2                     
  2916                           ; BSR set to: 0
  2917                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2918   0007B2  C0EB  F100         	movff	efgtoa@sign,_dbuf
  2919   0007B6                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  2922   0007B6  07DF               	decf	efgtoa@w& (0+255),f,b
  2923   0007B8  A0D8               	btfss	status,0,c
  2924   0007BA  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  2925   0007BC                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2928   0007BC  0E00               	movlw	0
  2929   0007BE  6FF1               	movwf	(efgtoa@n+1)& (0+255),b
  2930   0007C0  0E01               	movlw	1
  2931   0007C2  6FF0               	movwf	efgtoa@n& (0+255),b
  2932   0007C4                     l4074:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2936   0007C4  0E00               	movlw	low _dbuf
  2937   0007C6  25F0               	addwf	efgtoa@n& (0+255),w,b
  2938   0007C8  6E01               	movwf	strcpy@dest^0,c
  2939   0007CA  0E01               	movlw	high _dbuf
  2940   0007CC  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2941   0007CE  6E02               	movwf	(strcpy@dest+1)^0,c
  2942   0007D0  0E4F               	movlw	low STR_16
  2943   0007D2  6E03               	movwf	strcpy@src^0,c
  2944   0007D4  EC7C  F01A         	call	_strcpy	;wreg free
  2945   0007D8  EFAA  F003         	goto	l4058
  2946   0007DC                     l4082:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2949   0007DC  0E00               	movlw	0
  2950   0007DE  0100               	movlb	0	; () banked
  2951   0007E0  6FF2               	movwf	efgtoa@u& (0+255),b
  2952   0007E2  0E00               	movlw	0
  2953   0007E4  6FF3               	movwf	(efgtoa@u+1)& (0+255),b
  2954   0007E6  0E80               	movlw	128
  2955   0007E8  6FF4               	movwf	(efgtoa@u+2)& (0+255),b
  2956   0007EA  0E3F               	movlw	63
  2957   0007EC  6FF5               	movwf	(efgtoa@u+3)& (0+255),b
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2960   0007EE  0E00               	movlw	0
  2961   0007F0  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  2962   0007F2  0E00               	movlw	0
  2963   0007F4  6FD9               	movwf	efgtoa@e& (0+255),b
  2964   0007F6                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2967   0007F6  C0EC  F001         	movff	efgtoa@g,___fleq@ff1
  2968   0007FA  C0ED  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2969   0007FE  C0EE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2970   000802  C0EF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2971   000806  0E00               	movlw	0
  2972   000808  6E05               	movwf	___fleq@ff2^0,c
  2973   00080A  0E00               	movlw	0
  2974   00080C  6E06               	movwf	(___fleq@ff2+1)^0,c
  2975   00080E  0E00               	movlw	0
  2976   000810  6E07               	movwf	(___fleq@ff2+2)^0,c
  2977   000812  0E00               	movlw	0
  2978   000814  6E08               	movwf	(___fleq@ff2+3)^0,c
  2979   000816  ECAE  F017         	call	___fleq	;wreg free
  2980   00081A  B0D8               	btfsc	status,0,c
  2981   00081C  EF12  F004         	goto	u4791
  2982   000820  EF14  F004         	goto	u4790
  2983   000824                     u4791:
  2984   000824  EFF3  F004         	goto	l901
  2985   000828                     u4790:
  2986   000828  EF21  F004         	goto	l4090
  2987   00082C                     l903:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2990   00082C  C0DB  F0F2         	movff	efgtoa@ou,efgtoa@u
  2991   000830  C0DC  F0F3         	movff	efgtoa@ou+1,efgtoa@u+1
  2992   000834  C0DD  F0F4         	movff	efgtoa@ou+2,efgtoa@u+2
  2993   000838  C0DE  F0F5         	movff	efgtoa@ou+3,efgtoa@u+3
  2994   00083C                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2996   00083C  0100               	movlb	0	; () banked
  2997   00083E  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  2998   000840  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  2999   000842                     l4090:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3002   000842  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3003   000846  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3004   00084A  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3005   00084E  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3006   000852  0E00               	movlw	0
  3007   000854  6E13               	movwf	___flmul@a^0,c
  3008   000856  0E00               	movlw	0
  3009   000858  6E14               	movwf	(___flmul@a+1)^0,c
  3010   00085A  0E20               	movlw	32
  3011   00085C  6E15               	movwf	(___flmul@a+2)^0,c
  3012   00085E  0E41               	movlw	65
  3013   000860  6E16               	movwf	(___flmul@a+3)^0,c
  3014   000862  ECBA  F00A         	call	___flmul	;wreg free
  3015   000866  C00F  F0DB         	movff	?___flmul,efgtoa@ou
  3016   00086A  C010  F0DC         	movff	?___flmul+1,efgtoa@ou+1
  3017   00086E  C011  F0DD         	movff	?___flmul+2,efgtoa@ou+2
  3018   000872  C012  F0DE         	movff	?___flmul+3,efgtoa@ou+3
  3019   000876  0100               	movlb	0	; () banked
  3020   000878  51DB               	movf	efgtoa@ou& (0+255),w,b
  3021   00087A  5DEC               	subwf	efgtoa@g& (0+255),w,b
  3022   00087C  6E01               	movwf	labs@a^0,c
  3023   00087E  51DC               	movf	(efgtoa@ou+1)& (0+255),w,b
  3024   000880  59ED               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3025   000882  6E02               	movwf	(labs@a+1)^0,c
  3026   000884  51DD               	movf	(efgtoa@ou+2)& (0+255),w,b
  3027   000886  59EE               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3028   000888  6E03               	movwf	(labs@a+2)^0,c
  3029   00088A  51DE               	movf	(efgtoa@ou+3)& (0+255),w,b
  3030   00088C  59EF               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3031   00088E  6E04               	movwf	(labs@a+3)^0,c
  3032   000890  EC87  F019         	call	_labs	;wreg free
  3033   000894  BE04               	btfsc	(?_labs+3)^0,7,c
  3034   000896  EF58  F004         	goto	u4801
  3035   00089A  5004               	movf	(?_labs+3)^0,w,c
  3036   00089C  1003               	iorwf	(?_labs+2)^0,w,c
  3037   00089E  1002               	iorwf	(?_labs+1)^0,w,c
  3038   0008A0  E109               	bnz	u4800
  3039   0008A2  0E02               	movlw	2
  3040   0008A4  5C01               	subwf	?_labs^0,w,c
  3041   0008A6  A0D8               	btfss	status,0,c
  3042   0008A8  EF58  F004         	goto	u4801
  3043   0008AC  EF5A  F004         	goto	u4800
  3044   0008B0                     u4801:
  3045   0008B0  EF16  F004         	goto	l903
  3046   0008B4                     u4800:
  3047   0008B4  C0DB  F028         	movff	efgtoa@ou,___flge@ff1
  3048   0008B8  C0DC  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  3049   0008BC  C0DD  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  3050   0008C0  C0DE  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  3051   0008C4  C0EC  F02C         	movff	efgtoa@g,___flge@ff2
  3052   0008C8  C0ED  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  3053   0008CC  C0EE  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  3054   0008D0  C0EF  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  3055   0008D4  ECBA  F014         	call	___flge	;wreg free
  3056   0008D8  A0D8               	btfss	status,0,c
  3057   0008DA  EF71  F004         	goto	u4811
  3058   0008DE  EF73  F004         	goto	u4810
  3059   0008E2                     u4811:
  3060   0008E2  EF16  F004         	goto	l903
  3061   0008E6                     u4810:
  3062   0008E6                     
  3063                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3064   0008E6  0100               	movlb	0	; () banked
  3065   0008E8  51F2               	movf	efgtoa@u& (0+255),w,b
  3066   0008EA  5DEC               	subwf	efgtoa@g& (0+255),w,b
  3067   0008EC  6E01               	movwf	labs@a^0,c
  3068   0008EE  51F3               	movf	(efgtoa@u+1)& (0+255),w,b
  3069   0008F0  59ED               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3070   0008F2  6E02               	movwf	(labs@a+1)^0,c
  3071   0008F4  51F4               	movf	(efgtoa@u+2)& (0+255),w,b
  3072   0008F6  59EE               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3073   0008F8  6E03               	movwf	(labs@a+2)^0,c
  3074   0008FA  51F5               	movf	(efgtoa@u+3)& (0+255),w,b
  3075   0008FC  59EF               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3076   0008FE  6E04               	movwf	(labs@a+3)^0,c
  3077   000900  EC87  F019         	call	_labs	;wreg free
  3078   000904  BE04               	btfsc	(?_labs+3)^0,7,c
  3079   000906  EF92  F004         	goto	u4820
  3080   00090A  5004               	movf	(?_labs+3)^0,w,c
  3081   00090C  1003               	iorwf	(?_labs+2)^0,w,c
  3082   00090E  1002               	iorwf	(?_labs+1)^0,w,c
  3083   000910  E107               	bnz	u4821
  3084   000912  0E02               	movlw	2
  3085   000914  5C01               	subwf	?_labs^0,w,c
  3086   000916  B0D8               	btfsc	status,0,c
  3087   000918  EF90  F004         	goto	u4821
  3088   00091C  EF92  F004         	goto	u4820
  3089   000920                     u4821:
  3090   000920  EFDA  F004         	goto	l4108
  3091   000924                     u4820:
  3092   000924                     l4098:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3095   000924  C0F2  F0EC         	movff	efgtoa@u,efgtoa@g
  3096   000928  C0F3  F0ED         	movff	efgtoa@u+1,efgtoa@g+1
  3097   00092C  C0F4  F0EE         	movff	efgtoa@u+2,efgtoa@g+2
  3098   000930  C0F5  F0EF         	movff	efgtoa@u+3,efgtoa@g+3
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  3101   000934  EFF3  F004         	goto	l901
  3102   000938                     l4100:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3105   000938  C0F2  F028         	movff	efgtoa@u,___fldiv@b
  3106   00093C  C0F3  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3107   000940  C0F4  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3108   000944  C0F5  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3109   000948  0E00               	movlw	0
  3110   00094A  6E2C               	movwf	___fldiv@a^0,c
  3111   00094C  0E00               	movlw	0
  3112   00094E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3113   000950  0E20               	movlw	32
  3114   000952  6E2E               	movwf	(___fldiv@a+2)^0,c
  3115   000954  0E41               	movlw	65
  3116   000956  6E2F               	movwf	(___fldiv@a+3)^0,c
  3117   000958  ECCF  F00C         	call	___fldiv	;wreg free
  3118   00095C  C028  F0F2         	movff	?___fldiv,efgtoa@u
  3119   000960  C029  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3120   000964  C02A  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3121   000968  C02B  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3122   00096C                     
  3123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  3124   00096C  0100               	movlb	0	; () banked
  3125   00096E  07D9               	decf	efgtoa@e& (0+255),f,b
  3126   000970  A0D8               	btfss	status,0,c
  3127   000972  07DA               	decf	(efgtoa@e+1)& (0+255),f,b
  3128   000974                     
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3131   000974  51F2               	movf	efgtoa@u& (0+255),w,b
  3132   000976  5DEC               	subwf	efgtoa@g& (0+255),w,b
  3133   000978  6E01               	movwf	labs@a^0,c
  3134   00097A  51F3               	movf	(efgtoa@u+1)& (0+255),w,b
  3135   00097C  59ED               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3136   00097E  6E02               	movwf	(labs@a+1)^0,c
  3137   000980  51F4               	movf	(efgtoa@u+2)& (0+255),w,b
  3138   000982  59EE               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3139   000984  6E03               	movwf	(labs@a+2)^0,c
  3140   000986  51F5               	movf	(efgtoa@u+3)& (0+255),w,b
  3141   000988  59EF               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3142   00098A  6E04               	movwf	(labs@a+3)^0,c
  3143   00098C  EC87  F019         	call	_labs	;wreg free
  3144   000990  BE04               	btfsc	(?_labs+3)^0,7,c
  3145   000992  EFD8  F004         	goto	u4830
  3146   000996  5004               	movf	(?_labs+3)^0,w,c
  3147   000998  1003               	iorwf	(?_labs+2)^0,w,c
  3148   00099A  1002               	iorwf	(?_labs+1)^0,w,c
  3149   00099C  E107               	bnz	u4831
  3150   00099E  0E02               	movlw	2
  3151   0009A0  5C01               	subwf	?_labs^0,w,c
  3152   0009A2  B0D8               	btfsc	status,0,c
  3153   0009A4  EFD6  F004         	goto	u4831
  3154   0009A8  EFD8  F004         	goto	u4830
  3155   0009AC                     u4831:
  3156   0009AC  EFDA  F004         	goto	l4108
  3157   0009B0                     u4830:
  3158   0009B0  EF92  F004         	goto	l4098
  3159   0009B4                     l4108:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3162   0009B4  C0EC  F028         	movff	efgtoa@g,___flge@ff1
  3163   0009B8  C0ED  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3164   0009BC  C0EE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3165   0009C0  C0EF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3166   0009C4  C0F2  F02C         	movff	efgtoa@u,___flge@ff2
  3167   0009C8  C0F3  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3168   0009CC  C0F4  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3169   0009D0  C0F5  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3170   0009D4  ECBA  F014         	call	___flge	;wreg free
  3171   0009D8  A0D8               	btfss	status,0,c
  3172   0009DA  EFF1  F004         	goto	u4841
  3173   0009DE  EFF3  F004         	goto	u4840
  3174   0009E2                     u4841:
  3175   0009E2  EF9C  F004         	goto	l4100
  3176   0009E6                     u4840:
  3177   0009E6                     l901:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3180   0009E6  C05A  F0D3         	movff	efgtoa@c,efgtoa@mode
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3183   0009EA  C0D3  F0D4         	movff	efgtoa@mode,efgtoa@nmode
  3184   0009EE                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3186   0009EE  BE7E               	btfsc	(_prec+1)^0,7,c
  3187   0009F0  EFFC  F004         	goto	u4851
  3188   0009F4  EFFE  F004         	goto	u4850
  3189   0009F8                     u4851:
  3190   0009F8  EF04  F005         	goto	l4114
  3191   0009FC                     u4850:
  3192   0009FC  C07D  F0CC         	movff	_prec,efgtoa@p
  3193   000A00  C07E  F0CD         	movff	_prec+1,efgtoa@p+1
  3194   000A04  EF09  F005         	goto	l4116
  3195   000A08                     l4114:
  3196   000A08  0E00               	movlw	0
  3197   000A0A  0100               	movlb	0	; () banked
  3198   000A0C  6FCD               	movwf	(efgtoa@p+1)& (0+255),b
  3199   000A0E  0E06               	movlw	6
  3200   000A10  6FCC               	movwf	efgtoa@p& (0+255),b
  3201   000A12                     l4116:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3204   000A12  C0CC  F0D7         	movff	efgtoa@p,efgtoa@m
  3205   000A16  C0CD  F0D8         	movff	efgtoa@p+1,efgtoa@m+1
  3206   000A1A                     
  3207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3208   000A1A  0100               	movlb	0	; () banked
  3209   000A1C  4BD7               	infsnz	efgtoa@m& (0+255),f,b
  3210   000A1E  2BD8               	incf	(efgtoa@m+1)& (0+255),f,b
  3211   000A20                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3214   000A20  0E66               	movlw	102
  3215   000A22  19D4               	xorwf	efgtoa@nmode& (0+255),w,b
  3216   000A24  A4D8               	btfss	status,2,c
  3217   000A26  EF17  F005         	goto	u4861
  3218   000A2A  EF19  F005         	goto	u4860
  3219   000A2E                     u4861:
  3220   000A2E  EF39  F005         	goto	l4130
  3221   000A32                     u4860:
  3222   000A32                     
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3225   000A32  BFDA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3226   000A34  EF20  F005         	goto	u4870
  3227   000A38  EF1E  F005         	goto	u4871
  3228   000A3C                     u4871:
  3229   000A3C  EF2C  F005         	goto	l4126
  3230   000A40                     u4870:
  3231   000A40                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3234   000A40  0E00               	movlw	0
  3235   000A42  6FF2               	movwf	efgtoa@u& (0+255),b
  3236   000A44  0E00               	movlw	0
  3237   000A46  6FF3               	movwf	(efgtoa@u+1)& (0+255),b
  3238   000A48  0E80               	movlw	128
  3239   000A4A  6FF4               	movwf	(efgtoa@u+2)& (0+255),b
  3240   000A4C  0E3F               	movlw	63
  3241   000A4E  6FF5               	movwf	(efgtoa@u+3)& (0+255),b
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3244   000A50  0E00               	movlw	0
  3245   000A52  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  3246   000A54  0E00               	movlw	0
  3247   000A56  6FD9               	movwf	efgtoa@e& (0+255),b
  3248   000A58                     l4126:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3252   000A58  0E67               	movlw	103
  3253   000A5A  19D3               	xorwf	efgtoa@mode& (0+255),w,b
  3254   000A5C  B4D8               	btfsc	status,2,c
  3255   000A5E  EF33  F005         	goto	u4881
  3256   000A62  EF35  F005         	goto	u4880
  3257   000A66                     u4881:
  3258   000A66  EF39  F005         	goto	l4130
  3259   000A6A                     u4880:
  3260   000A6A                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3263   000A6A  51D9               	movf	efgtoa@e& (0+255),w,b
  3264   000A6C  27D7               	addwf	efgtoa@m& (0+255),f,b
  3265   000A6E  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  3266   000A70  23D8               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3267   000A72                     l4130:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3271   000A72  0E00               	movlw	0
  3272   000A74  6FEA               	movwf	(efgtoa@i+1)& (0+255),b
  3273   000A76  0E00               	movlw	0
  3274   000A78  6FE9               	movwf	efgtoa@i& (0+255),b
  3275   000A7A                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3278   000A7A  C0EC  F0E1         	movff	efgtoa@g,efgtoa@h
  3279   000A7E  C0ED  F0E2         	movff	efgtoa@g+1,efgtoa@h+1
  3280   000A82  C0EE  F0E3         	movff	efgtoa@g+2,efgtoa@h+2
  3281   000A86  C0EF  F0E4         	movff	efgtoa@g+3,efgtoa@h+3
  3282   000A8A                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3285   000A8A  C0F2  F0DB         	movff	efgtoa@u,efgtoa@ou
  3286   000A8E  C0F3  F0DC         	movff	efgtoa@u+1,efgtoa@ou+1
  3287   000A92  C0F4  F0DD         	movff	efgtoa@u+2,efgtoa@ou+2
  3288   000A96  C0F5  F0DE         	movff	efgtoa@u+3,efgtoa@ou+3
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3291   000A9A  EFCA  F005         	goto	l4144
  3292   000A9E                     l4136:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3296   000A9E  C0E1  F028         	movff	efgtoa@h,___fldiv@b
  3297   000AA2  C0E2  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3298   000AA6  C0E3  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3299   000AAA  C0E4  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3300   000AAE  C0F2  F02C         	movff	efgtoa@u,___fldiv@a
  3301   000AB2  C0F3  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3302   000AB6  C0F4  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3303   000ABA  C0F5  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3304   000ABE  ECCF  F00C         	call	___fldiv	;wreg free
  3305   000AC2  C028  F041         	movff	?___fldiv,floorf@x
  3306   000AC6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3307   000ACA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3308   000ACE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3309   000AD2  ECFB  F00F         	call	_floorf	;wreg free
  3310   000AD6  C041  F0E5         	movff	?_floorf,efgtoa@l
  3311   000ADA  C042  F0E6         	movff	?_floorf+1,efgtoa@l+1
  3312   000ADE  C043  F0E7         	movff	?_floorf+2,efgtoa@l+2
  3313   000AE2  C044  F0E8         	movff	?_floorf+3,efgtoa@l+3
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3316   000AE6  C0E5  F001         	movff	efgtoa@l,___fltol@f1
  3317   000AEA  C0E6  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3318   000AEE  C0E7  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3319   000AF2  C0E8  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3320   000AF6  EC37  F014         	call	___fltol	;wreg free
  3321   000AFA  C001  F0D5         	movff	?___fltol,efgtoa@d
  3322   000AFE  C002  F0D6         	movff	?___fltol+1,efgtoa@d+1
  3323   000B02                     
  3324                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3325   000B02  C0E1  F028         	movff	efgtoa@h,___flsub@b
  3326   000B06  C0E2  F029         	movff	efgtoa@h+1,___flsub@b+1
  3327   000B0A  C0E3  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3328   000B0E  C0E4  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3329   000B12  C0E5  F013         	movff	efgtoa@l,___flmul@a
  3330   000B16  C0E6  F014         	movff	efgtoa@l+1,___flmul@a+1
  3331   000B1A  C0E7  F015         	movff	efgtoa@l+2,___flmul@a+2
  3332   000B1E  C0E8  F016         	movff	efgtoa@l+3,___flmul@a+3
  3333   000B22  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3334   000B26  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3335   000B2A  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3336   000B2E  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3337   000B32  ECBA  F00A         	call	___flmul	;wreg free
  3338   000B36  C00F  F02C         	movff	?___flmul,___flsub@a
  3339   000B3A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3340   000B3E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3341   000B42  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3342   000B46  ECDA  F019         	call	___flsub	;wreg free
  3343   000B4A  C028  F0E1         	movff	?___flsub,efgtoa@h
  3344   000B4E  C029  F0E2         	movff	?___flsub+1,efgtoa@h+1
  3345   000B52  C02A  F0E3         	movff	?___flsub+2,efgtoa@h+2
  3346   000B56  C02B  F0E4         	movff	?___flsub+3,efgtoa@h+3
  3347   000B5A                     
  3348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3349   000B5A  C0F2  F028         	movff	efgtoa@u,___fldiv@b
  3350   000B5E  C0F3  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3351   000B62  C0F4  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3352   000B66  C0F5  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3353   000B6A  0E00               	movlw	0
  3354   000B6C  6E2C               	movwf	___fldiv@a^0,c
  3355   000B6E  0E00               	movlw	0
  3356   000B70  6E2D               	movwf	(___fldiv@a+1)^0,c
  3357   000B72  0E20               	movlw	32
  3358   000B74  6E2E               	movwf	(___fldiv@a+2)^0,c
  3359   000B76  0E41               	movlw	65
  3360   000B78  6E2F               	movwf	(___fldiv@a+3)^0,c
  3361   000B7A  ECCF  F00C         	call	___fldiv	;wreg free
  3362   000B7E  C028  F0F2         	movff	?___fldiv,efgtoa@u
  3363   000B82  C029  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3364   000B86  C02A  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3365   000B8A  C02B  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3366   000B8E                     
  3367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3368   000B8E  0100               	movlb	0	; () banked
  3369   000B90  4BE9               	infsnz	efgtoa@i& (0+255),f,b
  3370   000B92  2BEA               	incf	(efgtoa@i+1)& (0+255),f,b
  3371   000B94                     l4144:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3375   000B94  51D7               	movf	efgtoa@m& (0+255),w,b
  3376   000B96  5DE9               	subwf	efgtoa@i& (0+255),w,b
  3377   000B98  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  3378   000B9A  0A80               	xorlw	128
  3379   000B9C  6E5B               	movwf	??_efgtoa^0,c
  3380   000B9E  51D8               	movf	(efgtoa@m+1)& (0+255),w,b
  3381   000BA0  0A80               	xorlw	128
  3382   000BA2  585B               	subwfb	??_efgtoa^0,w,c
  3383   000BA4  A0D8               	btfss	status,0,c
  3384   000BA6  EFD7  F005         	goto	u4891
  3385   000BAA  EFD9  F005         	goto	u4890
  3386   000BAE                     u4891:
  3387   000BAE  EF4F  F005         	goto	l4136
  3388   000BB2                     u4890:
  3389   000BB2                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3392   000BB2  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3393   000BB6  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3394   000BBA  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3395   000BBE  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3396   000BC2  0E00               	movlw	0
  3397   000BC4  6E13               	movwf	___flmul@a^0,c
  3398   000BC6  0E00               	movlw	0
  3399   000BC8  6E14               	movwf	(___flmul@a+1)^0,c
  3400   000BCA  0EA0               	movlw	160
  3401   000BCC  6E15               	movwf	(___flmul@a+2)^0,c
  3402   000BCE  0E40               	movlw	64
  3403   000BD0  6E16               	movwf	(___flmul@a+3)^0,c
  3404   000BD2  ECBA  F00A         	call	___flmul	;wreg free
  3405   000BD6  C00F  F0E5         	movff	?___flmul,efgtoa@l
  3406   000BDA  C010  F0E6         	movff	?___flmul+1,efgtoa@l+1
  3407   000BDE  C011  F0E7         	movff	?___flmul+2,efgtoa@l+2
  3408   000BE2  C012  F0E8         	movff	?___flmul+3,efgtoa@l+3
  3409   000BE6                     
  3410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3411   000BE6  C0E1  F028         	movff	efgtoa@h,___flge@ff1
  3412   000BEA  C0E2  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3413   000BEE  C0E3  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3414   000BF2  C0E4  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3415   000BF6  C0E5  F02C         	movff	efgtoa@l,___flge@ff2
  3416   000BFA  C0E6  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3417   000BFE  C0E7  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3418   000C02  C0E8  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3419   000C06  ECBA  F014         	call	___flge	;wreg free
  3420   000C0A  B0D8               	btfsc	status,0,c
  3421   000C0C  EF0A  F006         	goto	u4901
  3422   000C10  EF0C  F006         	goto	u4900
  3423   000C14                     u4901:
  3424   000C14  EF17  F006         	goto	l4152
  3425   000C18                     u4900:
  3426   000C18                     
  3427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3428   000C18  0E00               	movlw	0
  3429   000C1A  0100               	movlb	0	; () banked
  3430   000C1C  6FE5               	movwf	efgtoa@l& (0+255),b
  3431   000C1E  0E00               	movlw	0
  3432   000C20  6FE6               	movwf	(efgtoa@l+1)& (0+255),b
  3433   000C22  0E00               	movlw	0
  3434   000C24  6FE7               	movwf	(efgtoa@l+2)& (0+255),b
  3435   000C26  0E00               	movlw	0
  3436   000C28  6FE8               	movwf	(efgtoa@l+3)& (0+255),b
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  3439   000C2A  EF40  F006         	goto	l4158
  3440   000C2E                     l4152:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3443   000C2E  C0E1  F001         	movff	efgtoa@h,___fleq@ff1
  3444   000C32  C0E2  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3445   000C36  C0E3  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3446   000C3A  C0E4  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3447   000C3E  C0E5  F005         	movff	efgtoa@l,___fleq@ff2
  3448   000C42  C0E6  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3449   000C46  C0E7  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3450   000C4A  C0E8  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3451   000C4E  ECAE  F017         	call	___fleq	;wreg free
  3452   000C52  A0D8               	btfss	status,0,c
  3453   000C54  EF2E  F006         	goto	u4911
  3454   000C58  EF30  F006         	goto	u4910
  3455   000C5C                     u4911:
  3456   000C5C  EF40  F006         	goto	l4158
  3457   000C60                     u4910:
  3458   000C60  0100               	movlb	0	; () banked
  3459   000C62  B1D5               	btfsc	efgtoa@d& (0+255),0,b
  3460   000C64  EF36  F006         	goto	u4921
  3461   000C68  EF38  F006         	goto	u4920
  3462   000C6C                     u4921:
  3463   000C6C  EF40  F006         	goto	l4158
  3464   000C70                     u4920:
  3465   000C70                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3468   000C70  0E00               	movlw	0
  3469   000C72  6FE5               	movwf	efgtoa@l& (0+255),b
  3470   000C74  0E00               	movlw	0
  3471   000C76  6FE6               	movwf	(efgtoa@l+1)& (0+255),b
  3472   000C78  0E00               	movlw	0
  3473   000C7A  6FE7               	movwf	(efgtoa@l+2)& (0+255),b
  3474   000C7C  0E00               	movlw	0
  3475   000C7E  6FE8               	movwf	(efgtoa@l+3)& (0+255),b
  3476   000C80                     l4158:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3479   000C80  C0EC  F001         	movff	efgtoa@g,___fladd@b
  3480   000C84  C0ED  F002         	movff	efgtoa@g+1,___fladd@b+1
  3481   000C88  C0EE  F003         	movff	efgtoa@g+2,___fladd@b+2
  3482   000C8C  C0EF  F004         	movff	efgtoa@g+3,___fladd@b+3
  3483   000C90  C0E5  F005         	movff	efgtoa@l,___fladd@a
  3484   000C94  C0E6  F006         	movff	efgtoa@l+1,___fladd@a+1
  3485   000C98  C0E7  F007         	movff	efgtoa@l+2,___fladd@a+2
  3486   000C9C  C0E8  F008         	movff	efgtoa@l+3,___fladd@a+3
  3487   000CA0  EC5A  F008         	call	___fladd	;wreg free
  3488   000CA4  C001  F0E1         	movff	?___fladd,efgtoa@h
  3489   000CA8  C002  F0E2         	movff	?___fladd+1,efgtoa@h+1
  3490   000CAC  C003  F0E3         	movff	?___fladd+2,efgtoa@h+2
  3491   000CB0  C004  F0E4         	movff	?___fladd+3,efgtoa@h+3
  3492   000CB4                     
  3493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3494   000CB4  C0E1  F028         	movff	efgtoa@h,___flge@ff1
  3495   000CB8  C0E2  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3496   000CBC  C0E3  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3497   000CC0  C0E4  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3498   000CC4  0E00               	movlw	0
  3499   000CC6  6E13               	movwf	___flmul@a^0,c
  3500   000CC8  0E00               	movlw	0
  3501   000CCA  6E14               	movwf	(___flmul@a+1)^0,c
  3502   000CCC  0E20               	movlw	32
  3503   000CCE  6E15               	movwf	(___flmul@a+2)^0,c
  3504   000CD0  0E41               	movlw	65
  3505   000CD2  6E16               	movwf	(___flmul@a+3)^0,c
  3506   000CD4  C0DB  F00F         	movff	efgtoa@ou,___flmul@b
  3507   000CD8  C0DC  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3508   000CDC  C0DD  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3509   000CE0  C0DE  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3510   000CE4  ECBA  F00A         	call	___flmul	;wreg free
  3511   000CE8  C00F  F02C         	movff	?___flmul,___flge@ff2
  3512   000CEC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3513   000CF0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3514   000CF4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3515   000CF8  ECBA  F014         	call	___flge	;wreg free
  3516   000CFC  A0D8               	btfss	status,0,c
  3517   000CFE  EF83  F006         	goto	u4931
  3518   000D02  EF85  F006         	goto	u4930
  3519   000D06                     u4931:
  3520   000D06  EFAE  F006         	goto	l4170
  3521   000D0A                     u4930:
  3522   000D0A                     
  3523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  3524   000D0A  0100               	movlb	0	; () banked
  3525   000D0C  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  3526   000D0E  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  3527   000D10                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3530   000D10  C0DB  F00F         	movff	efgtoa@ou,___flmul@b
  3531   000D14  C0DC  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3532   000D18  C0DD  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3533   000D1C  C0DE  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3534   000D20  0E00               	movlw	0
  3535   000D22  6E13               	movwf	___flmul@a^0,c
  3536   000D24  0E00               	movlw	0
  3537   000D26  6E14               	movwf	(___flmul@a+1)^0,c
  3538   000D28  0E20               	movlw	32
  3539   000D2A  6E15               	movwf	(___flmul@a+2)^0,c
  3540   000D2C  0E41               	movlw	65
  3541   000D2E  6E16               	movwf	(___flmul@a+3)^0,c
  3542   000D30  ECBA  F00A         	call	___flmul	;wreg free
  3543   000D34  C00F  F0DB         	movff	?___flmul,efgtoa@ou
  3544   000D38  C010  F0DC         	movff	?___flmul+1,efgtoa@ou+1
  3545   000D3C  C011  F0DD         	movff	?___flmul+2,efgtoa@ou+2
  3546   000D40  C012  F0DE         	movff	?___flmul+3,efgtoa@ou+3
  3547   000D44                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3549   000D44  0E66               	movlw	102
  3550   000D46  0100               	movlb	0	; () banked
  3551   000D48  19D4               	xorwf	efgtoa@nmode& (0+255),w,b
  3552   000D4A  A4D8               	btfss	status,2,c
  3553   000D4C  EFAA  F006         	goto	u4941
  3554   000D50  EFAC  F006         	goto	u4940
  3555   000D54                     u4941:
  3556   000D54  EFAE  F006         	goto	l4170
  3557   000D58                     u4940:
  3558   000D58                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  3561   000D58  4BD7               	infsnz	efgtoa@m& (0+255),f,b
  3562   000D5A  2BD8               	incf	(efgtoa@m+1)& (0+255),f,b
  3563   000D5C                     l4170:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3566   000D5C  C0DB  F0F2         	movff	efgtoa@ou,efgtoa@u
  3567   000D60  C0DC  F0F3         	movff	efgtoa@ou+1,efgtoa@u+1
  3568   000D64  C0DD  F0F4         	movff	efgtoa@ou+2,efgtoa@u+2
  3569   000D68  C0DE  F0F5         	movff	efgtoa@ou+3,efgtoa@u+3
  3570   000D6C                     
  3571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3572   000D6C  C0D9  F0CA         	movff	efgtoa@e,efgtoa@ne
  3573   000D70  C0DA  F0CB         	movff	efgtoa@e+1,efgtoa@ne+1
  3574   000D74                     
  3575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3576   000D74  0E00               	movlw	0
  3577   000D76  0100               	movlb	0	; () banked
  3578   000D78  6FD2               	movwf	efgtoa@pp& (0+255),b
  3579   000D7A                     
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3582   000D7A  0E00               	movlw	0
  3583   000D7C  6FCF               	movwf	(efgtoa@t+1)& (0+255),b
  3584   000D7E  0E00               	movlw	0
  3585   000D80  6FCE               	movwf	efgtoa@t& (0+255),b
  3586   000D82                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3589   000D82  0E00               	movlw	0
  3590   000D84  6FEA               	movwf	(efgtoa@i+1)& (0+255),b
  3591   000D86  0E00               	movlw	0
  3592   000D88  6FE9               	movwf	efgtoa@i& (0+255),b
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3595   000D8A  EFAC  F007         	goto	l4220
  3596   000D8E                     l4180:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3600   000D8E  C0E1  F028         	movff	efgtoa@h,___fldiv@b
  3601   000D92  C0E2  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3602   000D96  C0E3  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3603   000D9A  C0E4  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3604   000D9E  C0F2  F02C         	movff	efgtoa@u,___fldiv@a
  3605   000DA2  C0F3  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3606   000DA6  C0F4  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3607   000DAA  C0F5  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3608   000DAE  ECCF  F00C         	call	___fldiv	;wreg free
  3609   000DB2  C028  F041         	movff	?___fldiv,floorf@x
  3610   000DB6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3611   000DBA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3612   000DBE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3613   000DC2  ECFB  F00F         	call	_floorf	;wreg free
  3614   000DC6  C041  F0E5         	movff	?_floorf,efgtoa@l
  3615   000DCA  C042  F0E6         	movff	?_floorf+1,efgtoa@l+1
  3616   000DCE  C043  F0E7         	movff	?_floorf+2,efgtoa@l+2
  3617   000DD2  C044  F0E8         	movff	?_floorf+3,efgtoa@l+3
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3620   000DD6  C0E5  F001         	movff	efgtoa@l,___fltol@f1
  3621   000DDA  C0E6  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3622   000DDE  C0E7  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3623   000DE2  C0E8  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3624   000DE6  EC37  F014         	call	___fltol	;wreg free
  3625   000DEA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3626   000DEC  EF03  F007         	goto	u4950
  3627   000DF0  5002               	movf	(?___fltol+1)^0,w,c
  3628   000DF2  E107               	bnz	u4951
  3629   000DF4  0E0A               	movlw	10
  3630   000DF6  5C01               	subwf	?___fltol^0,w,c
  3631   000DF8  B0D8               	btfsc	status,0,c
  3632   000DFA  EF01  F007         	goto	u4951
  3633   000DFE  EF03  F007         	goto	u4950
  3634   000E02                     u4951:
  3635   000E02  EF13  F007         	goto	l4184
  3636   000E06                     u4950:
  3637   000E06  C0E5  F001         	movff	efgtoa@l,___fltol@f1
  3638   000E0A  C0E6  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3639   000E0E  C0E7  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3640   000E12  C0E8  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3641   000E16  EC37  F014         	call	___fltol	;wreg free
  3642   000E1A  C001  F0D5         	movff	?___fltol,efgtoa@d
  3643   000E1E  C002  F0D6         	movff	?___fltol+1,efgtoa@d+1
  3644   000E22  EF18  F007         	goto	l931
  3645   000E26                     l4184:
  3646   000E26  0E00               	movlw	0
  3647   000E28  0100               	movlb	0	; () banked
  3648   000E2A  6FD6               	movwf	(efgtoa@d+1)& (0+255),b
  3649   000E2C  0E09               	movlw	9
  3650   000E2E  6FD5               	movwf	efgtoa@d& (0+255),b
  3651   000E30                     l931:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3654   000E30  0100               	movlb	0	; () banked
  3655   000E32  51D2               	movf	efgtoa@pp& (0+255),w,b
  3656   000E34  A4D8               	btfss	status,2,c
  3657   000E36  EF1F  F007         	goto	u4961
  3658   000E3A  EF21  F007         	goto	u4960
  3659   000E3E                     u4961:
  3660   000E3E  EF49  F007         	goto	l4204
  3661   000E42                     u4960:
  3662   000E42                     
  3663                           ; BSR set to: 0
  3664   000E42  BFCB               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3665   000E44  EF28  F007         	goto	u4970
  3666   000E48  EF26  F007         	goto	u4971
  3667   000E4C                     u4971:
  3668   000E4C  EF49  F007         	goto	l4204
  3669   000E50                     u4970:
  3670   000E50                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3673   000E50  0E00               	movlw	low _dbuf
  3674   000E52  25F0               	addwf	efgtoa@n& (0+255),w,b
  3675   000E54  6ED9               	movwf	fsr2l,c
  3676   000E56  0E01               	movlw	high _dbuf
  3677   000E58  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3678   000E5A  6EDA               	movwf	fsr2h,c
  3679   000E5C  0E2E               	movlw	46
  3680   000E5E  6EDF               	movwf	indf2,c
  3681   000E60                     
  3682                           ; BSR set to: 0
  3683   000E60  4BF0               	infsnz	efgtoa@n& (0+255),f,b
  3684   000E62  2BF1               	incf	(efgtoa@n+1)& (0+255),f,b
  3685   000E64                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3688   000E64  07DF               	decf	efgtoa@w& (0+255),f,b
  3689   000E66  A0D8               	btfss	status,0,c
  3690   000E68  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  3691   000E6A                     
  3692                           ; BSR set to: 0
  3693                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3694   000E6A  0E01               	movlw	1
  3695   000E6C  6FD2               	movwf	efgtoa@pp& (0+255),b
  3696   000E6E  EF49  F007         	goto	l4204
  3697   000E72                     l4196:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3701   000E72  0E00               	movlw	low _dbuf
  3702   000E74  25F0               	addwf	efgtoa@n& (0+255),w,b
  3703   000E76  6ED9               	movwf	fsr2l,c
  3704   000E78  0E01               	movlw	high _dbuf
  3705   000E7A  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3706   000E7C  6EDA               	movwf	fsr2h,c
  3707   000E7E  0E30               	movlw	48
  3708   000E80  6EDF               	movwf	indf2,c
  3709   000E82                     
  3710                           ; BSR set to: 0
  3711   000E82  4BF0               	infsnz	efgtoa@n& (0+255),f,b
  3712   000E84  2BF1               	incf	(efgtoa@n+1)& (0+255),f,b
  3713   000E86                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3716   000E86  07DF               	decf	efgtoa@w& (0+255),f,b
  3717   000E88  A0D8               	btfss	status,0,c
  3718   000E8A  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  3719   000E8C                     
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3722   000E8C  07CE               	decf	efgtoa@t& (0+255),f,b
  3723   000E8E  A0D8               	btfss	status,0,c
  3724   000E90  07CF               	decf	(efgtoa@t+1)& (0+255),f,b
  3725   000E92                     l4204:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3729   000E92  51CE               	movf	efgtoa@t& (0+255),w,b
  3730   000E94  11CF               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3731   000E96  A4D8               	btfss	status,2,c
  3732   000E98  EF50  F007         	goto	u4981
  3733   000E9C  EF52  F007         	goto	u4980
  3734   000EA0                     u4981:
  3735   000EA0  EF39  F007         	goto	l4196
  3736   000EA4                     u4980:
  3737   000EA4                     
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3740   000EA4  0E00               	movlw	low _dbuf
  3741   000EA6  25F0               	addwf	efgtoa@n& (0+255),w,b
  3742   000EA8  6ED9               	movwf	fsr2l,c
  3743   000EAA  0E01               	movlw	high _dbuf
  3744   000EAC  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3745   000EAE  6EDA               	movwf	fsr2h,c
  3746   000EB0  51D5               	movf	efgtoa@d& (0+255),w,b
  3747   000EB2  0F30               	addlw	48
  3748   000EB4  6EDF               	movwf	indf2,c
  3749   000EB6                     
  3750                           ; BSR set to: 0
  3751   000EB6  4BF0               	infsnz	efgtoa@n& (0+255),f,b
  3752   000EB8  2BF1               	incf	(efgtoa@n+1)& (0+255),f,b
  3753   000EBA                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3756   000EBA  07DF               	decf	efgtoa@w& (0+255),f,b
  3757   000EBC  A0D8               	btfss	status,0,c
  3758   000EBE  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  3759   000EC0                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3762   000EC0  C0E1  F028         	movff	efgtoa@h,___flsub@b
  3763   000EC4  C0E2  F029         	movff	efgtoa@h+1,___flsub@b+1
  3764   000EC8  C0E3  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3765   000ECC  C0E4  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3766   000ED0  C0E5  F013         	movff	efgtoa@l,___flmul@a
  3767   000ED4  C0E6  F014         	movff	efgtoa@l+1,___flmul@a+1
  3768   000ED8  C0E7  F015         	movff	efgtoa@l+2,___flmul@a+2
  3769   000EDC  C0E8  F016         	movff	efgtoa@l+3,___flmul@a+3
  3770   000EE0  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3771   000EE4  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3772   000EE8  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3773   000EEC  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3774   000EF0  ECBA  F00A         	call	___flmul	;wreg free
  3775   000EF4  C00F  F02C         	movff	?___flmul,___flsub@a
  3776   000EF8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3777   000EFC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3778   000F00  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3779   000F04  ECDA  F019         	call	___flsub	;wreg free
  3780   000F08  C028  F0E1         	movff	?___flsub,efgtoa@h
  3781   000F0C  C029  F0E2         	movff	?___flsub+1,efgtoa@h+1
  3782   000F10  C02A  F0E3         	movff	?___flsub+2,efgtoa@h+2
  3783   000F14  C02B  F0E4         	movff	?___flsub+3,efgtoa@h+3
  3784   000F18                     
  3785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3786   000F18  C0F2  F028         	movff	efgtoa@u,___fldiv@b
  3787   000F1C  C0F3  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3788   000F20  C0F4  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3789   000F24  C0F5  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3790   000F28  0E00               	movlw	0
  3791   000F2A  6E2C               	movwf	___fldiv@a^0,c
  3792   000F2C  0E00               	movlw	0
  3793   000F2E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3794   000F30  0E20               	movlw	32
  3795   000F32  6E2E               	movwf	(___fldiv@a+2)^0,c
  3796   000F34  0E41               	movlw	65
  3797   000F36  6E2F               	movwf	(___fldiv@a+3)^0,c
  3798   000F38  ECCF  F00C         	call	___fldiv	;wreg free
  3799   000F3C  C028  F0F2         	movff	?___fldiv,efgtoa@u
  3800   000F40  C029  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3801   000F44  C02A  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3802   000F48  C02B  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3803   000F4C                     
  3804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3805   000F4C  0100               	movlb	0	; () banked
  3806   000F4E  07CA               	decf	efgtoa@ne& (0+255),f,b
  3807   000F50  A0D8               	btfss	status,0,c
  3808   000F52  07CB               	decf	(efgtoa@ne+1)& (0+255),f,b
  3809   000F54                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3812   000F54  4BE9               	infsnz	efgtoa@i& (0+255),f,b
  3813   000F56  2BEA               	incf	(efgtoa@i+1)& (0+255),f,b
  3814   000F58                     l4220:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3818   000F58  51D7               	movf	efgtoa@m& (0+255),w,b
  3819   000F5A  5DE9               	subwf	efgtoa@i& (0+255),w,b
  3820   000F5C  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  3821   000F5E  0A80               	xorlw	128
  3822   000F60  6E5B               	movwf	??_efgtoa^0,c
  3823   000F62  51D8               	movf	(efgtoa@m+1)& (0+255),w,b
  3824   000F64  0A80               	xorlw	128
  3825   000F66  585B               	subwfb	??_efgtoa^0,w,c
  3826   000F68  B0D8               	btfsc	status,0,c
  3827   000F6A  EFB9  F007         	goto	u4991
  3828   000F6E  EFBB  F007         	goto	u4990
  3829   000F72                     u4991:
  3830   000F72  EFC9  F007         	goto	l4224
  3831   000F76                     u4990:
  3832   000F76                     
  3833                           ; BSR set to: 0
  3834   000F76  BFF1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3835   000F78  EFC7  F007         	goto	u5001
  3836   000F7C  51F1               	movf	(efgtoa@n+1)& (0+255),w,b
  3837   000F7E  E109               	bnz	u5000
  3838   000F80  0E4B               	movlw	75
  3839   000F82  5DF0               	subwf	efgtoa@n& (0+255),w,b
  3840   000F84  A0D8               	btfss	status,0,c
  3841   000F86  EFC7  F007         	goto	u5001
  3842   000F8A  EFC9  F007         	goto	u5000
  3843   000F8E                     u5001:
  3844   000F8E  EFC7  F006         	goto	l4180
  3845   000F92                     u5000:
  3846   000F92                     l4224:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3850   000F92  0E00               	movlw	0
  3851   000F94  6FEA               	movwf	(efgtoa@i+1)& (0+255),b
  3852   000F96  0E4F               	movlw	79
  3853   000F98  6FE9               	movwf	efgtoa@i& (0+255),b
  3854   000F9A                     
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3857   000F9A  0E00               	movlw	low _dbuf
  3858   000F9C  25E9               	addwf	efgtoa@i& (0+255),w,b
  3859   000F9E  6ED9               	movwf	fsr2l,c
  3860   000FA0  0E01               	movlw	high _dbuf
  3861   000FA2  21EA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3862   000FA4  6EDA               	movwf	fsr2h,c
  3863   000FA6  6ADF               	clrf	indf2,c
  3864   000FA8                     
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3867   000FA8  0E00               	movlw	low _dbuf
  3868   000FAA  6E5B               	movwf	??_efgtoa^0,c
  3869   000FAC  0E01               	movlw	high _dbuf
  3870   000FAE  6E5C               	movwf	(??_efgtoa+1)^0,c
  3871   000FB0  51F0               	movf	efgtoa@n& (0+255),w,b
  3872   000FB2  5E5B               	subwf	??_efgtoa^0,f,c
  3873   000FB4  51F1               	movf	(efgtoa@n+1)& (0+255),w,b
  3874   000FB6  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  3875   000FB8  51E9               	movf	efgtoa@i& (0+255),w,b
  3876   000FBA  245B               	addwf	??_efgtoa^0,w,c
  3877   000FBC  6E01               	movwf	memcpy@d1^0,c
  3878   000FBE  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  3879   000FC0  205C               	addwfc	(??_efgtoa+1)^0,w,c
  3880   000FC2  6E02               	movwf	(memcpy@d1+1)^0,c
  3881   000FC4  0E00               	movlw	low _dbuf
  3882   000FC6  6E03               	movwf	memcpy@s1^0,c
  3883   000FC8  0E01               	movlw	high _dbuf
  3884   000FCA  6E04               	movwf	(memcpy@s1+1)^0,c
  3885   000FCC  C0F0  F005         	movff	efgtoa@n,memcpy@n
  3886   000FD0  C0F1  F006         	movff	efgtoa@n+1,memcpy@n+1
  3887   000FD4  ECB2  F019         	call	_memcpy	;wreg free
  3888   000FD8                     
  3889                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3890   000FD8  0100               	movlb	0	; () banked
  3891   000FDA  51F0               	movf	efgtoa@n& (0+255),w,b
  3892   000FDC  5DE9               	subwf	efgtoa@i& (0+255),w,b
  3893   000FDE  6FF0               	movwf	efgtoa@n& (0+255),b
  3894   000FE0  51F1               	movf	(efgtoa@n+1)& (0+255),w,b
  3895   000FE2  59EA               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3896   000FE4  6FF1               	movwf	(efgtoa@n+1)& (0+255),b
  3897   000FE6                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3900   000FE6  51EB               	movf	efgtoa@sign& (0+255),w,b
  3901   000FE8  A4D8               	btfss	status,2,c
  3902   000FEA  EFF9  F007         	goto	u5011
  3903   000FEE  EFFC  F007         	goto	u5010
  3904   000FF2                     u5011:
  3905   000FF2  0E01               	movlw	1
  3906   000FF4  EFFD  F007         	goto	u5020
  3907   000FF8                     u5010:
  3908   000FF8  0E00               	movlw	0
  3909   000FFA                     u5020:
  3910   000FFA  6FE9               	movwf	efgtoa@i& (0+255),b
  3911   000FFC  6BEA               	clrf	(efgtoa@i+1)& (0+255),b
  3912   000FFE                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  3915   000FFE  A27F               	btfss	_flags^0,1,c
  3916   001000  EF04  F008         	goto	u5031
  3917   001004  EF06  F008         	goto	u5030
  3918   001008                     u5031:
  3919   001008  EF34  F008         	goto	l4246
  3920   00100C                     u5030:
  3921   00100C  EF16  F008         	goto	l4242
  3922   001010                     l4238:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  3926   001010  07F0               	decf	efgtoa@n& (0+255),f,b
  3927   001012  A0D8               	btfss	status,0,c
  3928   001014  07F1               	decf	(efgtoa@n+1)& (0+255),f,b
  3929   001016  0E00               	movlw	low _dbuf
  3930   001018  25F0               	addwf	efgtoa@n& (0+255),w,b
  3931   00101A  6ED9               	movwf	fsr2l,c
  3932   00101C  0E01               	movlw	high _dbuf
  3933   00101E  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3934   001020  6EDA               	movwf	fsr2h,c
  3935   001022  0E30               	movlw	48
  3936   001024  6EDF               	movwf	indf2,c
  3937   001026                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  3940   001026  07DF               	decf	efgtoa@w& (0+255),f,b
  3941   001028  A0D8               	btfss	status,0,c
  3942   00102A  07E0               	decf	(efgtoa@w+1)& (0+255),f,b
  3943   00102C                     l4242:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  3947   00102C  51DF               	movf	efgtoa@w& (0+255),w,b
  3948   00102E  5DE9               	subwf	efgtoa@i& (0+255),w,b
  3949   001030  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  3950   001032  0A80               	xorlw	128
  3951   001034  6E5B               	movwf	??_efgtoa^0,c
  3952   001036  51E0               	movf	(efgtoa@w+1)& (0+255),w,b
  3953   001038  0A80               	xorlw	128
  3954   00103A  585B               	subwfb	??_efgtoa^0,w,c
  3955   00103C  B0D8               	btfsc	status,0,c
  3956   00103E  EF23  F008         	goto	u5041
  3957   001042  EF25  F008         	goto	u5040
  3958   001046                     u5041:
  3959   001046  EF34  F008         	goto	l4246
  3960   00104A                     u5040:
  3961   00104A                     
  3962                           ; BSR set to: 0
  3963   00104A  51F0               	movf	efgtoa@n& (0+255),w,b
  3964   00104C  5DE9               	subwf	efgtoa@i& (0+255),w,b
  3965   00104E  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  3966   001050  0A80               	xorlw	128
  3967   001052  6E5B               	movwf	??_efgtoa^0,c
  3968   001054  51F1               	movf	(efgtoa@n+1)& (0+255),w,b
  3969   001056  0A80               	xorlw	128
  3970   001058  585B               	subwfb	??_efgtoa^0,w,c
  3971   00105A  A0D8               	btfss	status,0,c
  3972   00105C  EF32  F008         	goto	u5051
  3973   001060  EF34  F008         	goto	u5050
  3974   001064                     u5051:
  3975   001064  EF08  F008         	goto	l4238
  3976   001068                     u5050:
  3977   001068                     l4246:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3981   001068  51EB               	movf	efgtoa@sign& (0+255),w,b
  3982   00106A  B4D8               	btfsc	status,2,c
  3983   00106C  EF3A  F008         	goto	u5061
  3984   001070  EF3C  F008         	goto	u5060
  3985   001074                     u5061:
  3986   001074  EF47  F008         	goto	l4250
  3987   001078                     u5060:
  3988   001078                     
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3991   001078  07F0               	decf	efgtoa@n& (0+255),f,b
  3992   00107A  A0D8               	btfss	status,0,c
  3993   00107C  07F1               	decf	(efgtoa@n+1)& (0+255),f,b
  3994   00107E  0E00               	movlw	low _dbuf
  3995   001080  25F0               	addwf	efgtoa@n& (0+255),w,b
  3996   001082  6ED9               	movwf	fsr2l,c
  3997   001084  0E01               	movlw	high _dbuf
  3998   001086  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3999   001088  6EDA               	movwf	fsr2h,c
  4000   00108A  C0EB  FFDF         	movff	efgtoa@sign,indf2
  4001   00108E                     l4250:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4005   00108E  51E9               	movf	efgtoa@i& (0+255),w,b
  4006   001090  5FDF               	subwf	efgtoa@w& (0+255),f,b
  4007   001092  51EA               	movf	(efgtoa@i+1)& (0+255),w,b
  4008   001094  5BE0               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4009   001096                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4012   001096  C055  F00F         	movff	efgtoa@fp,pad@fp
  4013   00109A  0E00               	movlw	low _dbuf
  4014   00109C  25F0               	addwf	efgtoa@n& (0+255),w,b
  4015   00109E  6E10               	movwf	pad@buf^0,c
  4016   0010A0  0E01               	movlw	high _dbuf
  4017   0010A2  21F1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4018   0010A4  6E11               	movwf	(pad@buf+1)^0,c
  4019   0010A6  C0DF  F012         	movff	efgtoa@w,pad@p
  4020   0010AA  C0E0  F013         	movff	efgtoa@w+1,pad@p+1
  4021   0010AE  EC3E  F019         	call	_pad	;wreg free
  4022   0010B2                     l898:
  4023   0010B2  0012               	return		;funcret
  4024   0010B4                     __end_of_efgtoa:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _strcpy *****************
  4028 ;; Defined at:
  4029 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4032 ;;		 -> dbuf(80), 
  4033 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4034 ;;		 -> STR_16(4), STR_13(4), 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  d               2    4[COMRAM] PTR unsigned char 
  4037 ;;		 -> dbuf(80), 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2    0[COMRAM] PTR unsigned char 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4047 ;;      Params:         3       0       0       0       0       0       0
  4048 ;;      Locals:         2       0       0       0       0       0       0
  4049 ;;      Temps:          1       0       0       0       0       0       0
  4050 ;;      Totals:         6       0       0       0       0       0       0
  4051 ;;Total ram usage:        6 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_efgtoa
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text11
  4061   0034F8                     __ptext11:
  4062                           	callstack 0
  4063   0034F8                     _strcpy:
  4064                           	callstack 25
  4065   0034F8  C001  F005         	movff	strcpy@dest,strcpy@d
  4066   0034FC  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4067   003500                     l3956:
  4068   003500  2A03               	incf	strcpy@src^0,f,c
  4069   003502  0403               	decf	strcpy@src^0,w,c
  4070   003504  6E04               	movwf	??_strcpy^0,c
  4071   003506  C004  FFF6         	movff	??_strcpy,tblptrl
  4072   00350A                     	if	1	;There is more than 1 active tblptr byte
  4073   00350A  0E06               	movlw	high __smallconst
  4074   00350C  6EF7               	movwf	tblptrh,c
  4075   00350E                     	endif
  4076   00350E                     	if	0	;tblptru may be non-zero
  4077   00350E                     	endif
  4078   00350E                     	if	0	;tblptru may be non-zero
  4079   00350E                     	endif
  4080   00350E  C005  FFD9         	movff	strcpy@d,fsr2l
  4081   003512  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4082   003516  4A05               	infsnz	strcpy@d^0,f,c
  4083   003518  2A06               	incf	(strcpy@d+1)^0,f,c
  4084   00351A  0008               	tblrd		*
  4085   00351C  CFF5 FFDF          	movff	tablat,indf2
  4086   003520  50DF               	movf	indf2,w,c
  4087   003522  A4D8               	btfss	status,2,c
  4088   003524  EF96  F01A         	goto	u4581
  4089   003528  EF98  F01A         	goto	u4580
  4090   00352C                     u4581:
  4091   00352C  EF80  F01A         	goto	l3956
  4092   003530                     u4580:
  4093   003530  0012               	return		;funcret
  4094   003532                     __end_of_strcpy:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _memcpy *****************
  4098 ;; Defined at:
  4099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  d1              2    0[COMRAM] PTR void 
  4102 ;;		 -> dbuf(80), 
  4103 ;;  s1              2    2[COMRAM] PTR const void 
  4104 ;;		 -> dbuf(80), 
  4105 ;;  n               2    4[COMRAM] unsigned int 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4108 ;;		 -> dbuf(80), 
  4109 ;;  d               2    7[COMRAM] PTR unsigned char 
  4110 ;;		 -> dbuf(80), 
  4111 ;;  tmp             1    6[COMRAM] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2    0[COMRAM] PTR void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4121 ;;      Params:         6       0       0       0       0       0       0
  4122 ;;      Locals:         5       0       0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0
  4124 ;;      Totals:        11       0       0       0       0       0       0
  4125 ;;Total ram usage:       11 bytes
  4126 ;; Hardware stack levels used: 1
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_efgtoa
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text12
  4135   003364                     __ptext12:
  4136                           	callstack 0
  4137   003364                     _memcpy:
  4138                           	callstack 25
  4139   003364  C003  F00A         	movff	memcpy@s1,memcpy@s
  4140   003368  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4141   00336C  C001  F008         	movff	memcpy@d1,memcpy@d
  4142   003370  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4143   003374  EFCC  F019         	goto	l3968
  4144   003378                     l3960:
  4145   003378  C00A  FFD9         	movff	memcpy@s,fsr2l
  4146   00337C  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4147   003380  50DF               	movf	indf2,w,c
  4148   003382  6E07               	movwf	memcpy@tmp^0,c
  4149   003384  4A0A               	infsnz	memcpy@s^0,f,c
  4150   003386  2A0B               	incf	(memcpy@s+1)^0,f,c
  4151   003388  C008  FFD9         	movff	memcpy@d,fsr2l
  4152   00338C  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4153   003390  C007  FFDF         	movff	memcpy@tmp,indf2
  4154   003394  4A08               	infsnz	memcpy@d^0,f,c
  4155   003396  2A09               	incf	(memcpy@d+1)^0,f,c
  4156   003398                     l3968:
  4157   003398  0605               	decf	memcpy@n^0,f,c
  4158   00339A  A0D8               	btfss	status,0,c
  4159   00339C  0606               	decf	(memcpy@n+1)^0,f,c
  4160   00339E  2805               	incf	memcpy@n^0,w,c
  4161   0033A0  E106               	bnz	u4591
  4162   0033A2  2806               	incf	(memcpy@n+1)^0,w,c
  4163   0033A4  A4D8               	btfss	status,2,c
  4164   0033A6  EFD7  F019         	goto	u4591
  4165   0033AA  EFD9  F019         	goto	u4590
  4166   0033AE                     u4591:
  4167   0033AE  EFBC  F019         	goto	l3960
  4168   0033B2                     u4590:
  4169   0033B2  0012               	return		;funcret
  4170   0033B4                     __end_of_memcpy:
  4171                           	callstack 0
  4172                           
  4173 ;; *************** function _labs *****************
  4174 ;; Defined at:
  4175 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  a               4    0[COMRAM] long 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  4    0[COMRAM] long 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4189 ;;      Params:         4       0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0
  4191 ;;      Temps:          4       0       0       0       0       0       0
  4192 ;;      Totals:         8       0       0       0       0       0       0
  4193 ;;Total ram usage:        8 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_efgtoa
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text13
  4203   00330E                     __ptext13:
  4204                           	callstack 0
  4205   00330E                     _labs:
  4206                           	callstack 25
  4207   00330E  BE04               	btfsc	(labs@a+3)^0,7,c
  4208   003310  EF8C  F019         	goto	u3541
  4209   003314  EF8E  F019         	goto	u3540
  4210   003318                     u3541:
  4211   003318  EF98  F019         	goto	l3224
  4212   00331C                     u3540:
  4213   00331C  C001  F001         	movff	labs@a,?_labs
  4214   003320  C002  F002         	movff	labs@a+1,?_labs+1
  4215   003324  C003  F003         	movff	labs@a+2,?_labs+2
  4216   003328  C004  F004         	movff	labs@a+3,?_labs+3
  4217   00332C  EFB1  F019         	goto	l1029
  4218   003330                     l3224:
  4219   003330  C001  F005         	movff	labs@a,??_labs
  4220   003334  C002  F006         	movff	labs@a+1,??_labs+1
  4221   003338  C003  F007         	movff	labs@a+2,??_labs+2
  4222   00333C  C004  F008         	movff	labs@a+3,??_labs+3
  4223   003340  1E05               	comf	??_labs^0,f,c
  4224   003342  1E06               	comf	(??_labs+1)^0,f,c
  4225   003344  1E07               	comf	(??_labs+2)^0,f,c
  4226   003346  1E08               	comf	(??_labs+3)^0,f,c
  4227   003348  2A05               	incf	??_labs^0,f,c
  4228   00334A  0E00               	movlw	0
  4229   00334C  2206               	addwfc	(??_labs+1)^0,f,c
  4230   00334E  2207               	addwfc	(??_labs+2)^0,f,c
  4231   003350  2208               	addwfc	(??_labs+3)^0,f,c
  4232   003352  C005  F001         	movff	??_labs,?_labs
  4233   003356  C006  F002         	movff	??_labs+1,?_labs+1
  4234   00335A  C007  F003         	movff	??_labs+2,?_labs+2
  4235   00335E  C008  F004         	movff	??_labs+3,?_labs+3
  4236   003362                     l1029:
  4237   003362  0012               	return		;funcret
  4238   003364                     __end_of_labs:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _floorf *****************
  4242 ;; Defined at:
  4243 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  x               4   64[COMRAM] float 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  u               4   80[COMRAM] struct .
  4248 ;;  m               4   74[COMRAM] unsigned long 
  4249 ;;  e               2   78[COMRAM] int 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  4   64[COMRAM] float 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4259 ;;      Params:         4       0       0       0       0       0       0
  4260 ;;      Locals:        10       0       0       0       0       0       0
  4261 ;;      Temps:          6       0       0       0       0       0       0
  4262 ;;      Totals:        20       0       0       0       0       0       0
  4263 ;;Total ram usage:       20 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_efgtoa
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text14
  4273   001FF6                     __ptext14:
  4274                           	callstack 0
  4275   001FF6                     _floorf:
  4276                           	callstack 25
  4277   001FF6  C080  F051         	movff	floorf@F521,floorf@u
  4278   001FFA  C081  F052         	movff	floorf@F521+1,floorf@u+1
  4279   001FFE  C082  F053         	movff	floorf@F521+2,floorf@u+2
  4280   002002  C083  F054         	movff	floorf@F521+3,floorf@u+3
  4281   002006  C041  F051         	movff	floorf@x,floorf@u
  4282   00200A  C042  F052         	movff	floorf@x+1,floorf@u+1
  4283   00200E  C043  F053         	movff	floorf@x+2,floorf@u+2
  4284   002012  C044  F054         	movff	floorf@x+3,floorf@u+3
  4285   002016  0E81               	movlw	129
  4286   002018  6E45               	movwf	??_floorf^0,c
  4287   00201A  0EFF               	movlw	255
  4288   00201C  6E46               	movwf	(??_floorf+1)^0,c
  4289   00201E  C051  F047         	movff	floorf@u,??_floorf+2
  4290   002022  C052  F048         	movff	floorf@u+1,??_floorf+3
  4291   002026  C053  F049         	movff	floorf@u+2,??_floorf+4
  4292   00202A  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4293   00202E  0E18               	movlw	24
  4294   002030  EF1F  F010         	goto	u3550
  4295   002034                     u3555:
  4296   002034  90D8               	bcf	status,0,c
  4297   002036  324A               	rrcf	(??_floorf+5)^0,f,c
  4298   002038  3249               	rrcf	(??_floorf+4)^0,f,c
  4299   00203A  3248               	rrcf	(??_floorf+3)^0,f,c
  4300   00203C  3247               	rrcf	(??_floorf+2)^0,f,c
  4301   00203E                     u3550:
  4302   00203E  2EE8               	decfsz	wreg,f,c
  4303   002040  EF1A  F010         	goto	u3555
  4304   002044  5047               	movf	(??_floorf+2)^0,w,c
  4305   002046  2445               	addwf	??_floorf^0,w,c
  4306   002048  6E4F               	movwf	floorf@e^0,c
  4307   00204A  0E00               	movlw	0
  4308   00204C  2046               	addwfc	(??_floorf+1)^0,w,c
  4309   00204E  6E50               	movwf	(floorf@e+1)^0,c
  4310   002050  BE50               	btfsc	(floorf@e+1)^0,7,c
  4311   002052  EF34  F010         	goto	u3561
  4312   002056  5050               	movf	(floorf@e+1)^0,w,c
  4313   002058  E109               	bnz	u3560
  4314   00205A  0E17               	movlw	23
  4315   00205C  5C4F               	subwf	floorf@e^0,w,c
  4316   00205E  A0D8               	btfss	status,0,c
  4317   002060  EF34  F010         	goto	u3561
  4318   002064  EF36  F010         	goto	u3560
  4319   002068                     u3561:
  4320   002068  EF40  F010         	goto	l3234
  4321   00206C                     u3560:
  4322   00206C                     l3232:
  4323   00206C  C041  F041         	movff	floorf@x,?_floorf
  4324   002070  C042  F042         	movff	floorf@x+1,?_floorf+1
  4325   002074  C043  F043         	movff	floorf@x+2,?_floorf+2
  4326   002078  C044  F044         	movff	floorf@x+3,?_floorf+3
  4327   00207C  EF03  F011         	goto	l1015
  4328   002080                     l3234:
  4329   002080  BE50               	btfsc	(floorf@e+1)^0,7,c
  4330   002082  EF45  F010         	goto	u3571
  4331   002086  EF47  F010         	goto	u3570
  4332   00208A                     u3571:
  4333   00208A  EFB7  F010         	goto	l3244
  4334   00208E                     u3570:
  4335   00208E  C04F  F045         	movff	floorf@e,??_floorf
  4336   002092  0EFF               	movlw	255
  4337   002094  6E46               	movwf	(??_floorf+1)^0,c
  4338   002096  0EFF               	movlw	255
  4339   002098  6E47               	movwf	(??_floorf+2)^0,c
  4340   00209A  0E7F               	movlw	127
  4341   00209C  6E48               	movwf	(??_floorf+3)^0,c
  4342   00209E  0E00               	movlw	0
  4343   0020A0  6E49               	movwf	(??_floorf+4)^0,c
  4344   0020A2                     u3585:
  4345   0020A2  6645               	tstfsz	??_floorf^0,c
  4346   0020A4  EF56  F010         	goto	u3586
  4347   0020A8  EF5E  F010         	goto	u3587
  4348   0020AC                     u3586:
  4349   0020AC  3449               	rlcf	(??_floorf+4)^0,w,c
  4350   0020AE  3249               	rrcf	(??_floorf+4)^0,f,c
  4351   0020B0  3248               	rrcf	(??_floorf+3)^0,f,c
  4352   0020B2  3247               	rrcf	(??_floorf+2)^0,f,c
  4353   0020B4  3246               	rrcf	(??_floorf+1)^0,f,c
  4354   0020B6  2E45               	decfsz	??_floorf^0,f,c
  4355   0020B8  EF51  F010         	goto	u3585
  4356   0020BC                     u3587:
  4357   0020BC  C046  F04B         	movff	??_floorf+1,floorf@m
  4358   0020C0  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4359   0020C4  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4360   0020C8  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4361   0020CC  504B               	movf	floorf@m^0,w,c
  4362   0020CE  1451               	andwf	floorf@u^0,w,c
  4363   0020D0  6E45               	movwf	??_floorf^0,c
  4364   0020D2  504C               	movf	(floorf@m+1)^0,w,c
  4365   0020D4  1452               	andwf	(floorf@u+1)^0,w,c
  4366   0020D6  6E46               	movwf	(??_floorf+1)^0,c
  4367   0020D8  504D               	movf	(floorf@m+2)^0,w,c
  4368   0020DA  1453               	andwf	(floorf@u+2)^0,w,c
  4369   0020DC  6E47               	movwf	(??_floorf+2)^0,c
  4370   0020DE  504E               	movf	(floorf@m+3)^0,w,c
  4371   0020E0  1454               	andwf	(floorf@u+3)^0,w,c
  4372   0020E2  6E48               	movwf	(??_floorf+3)^0,c
  4373   0020E4  5045               	movf	??_floorf^0,w,c
  4374   0020E6  1046               	iorwf	(??_floorf+1)^0,w,c
  4375   0020E8  1047               	iorwf	(??_floorf+2)^0,w,c
  4376   0020EA  1048               	iorwf	(??_floorf+3)^0,w,c
  4377   0020EC  A4D8               	btfss	status,2,c
  4378   0020EE  EF7B  F010         	goto	u3591
  4379   0020F2  EF7D  F010         	goto	u3590
  4380   0020F6                     u3591:
  4381   0020F6  EF7F  F010         	goto	l3240
  4382   0020FA                     u3590:
  4383   0020FA  EF36  F010         	goto	l3232
  4384   0020FE                     l3240:
  4385   0020FE  C051  F045         	movff	floorf@u,??_floorf
  4386   002102  C052  F046         	movff	floorf@u+1,??_floorf+1
  4387   002106  C053  F047         	movff	floorf@u+2,??_floorf+2
  4388   00210A  C054  F048         	movff	floorf@u+3,??_floorf+3
  4389   00210E  0E20               	movlw	32
  4390   002110  EF8F  F010         	goto	u3600
  4391   002114                     u3605:
  4392   002114  90D8               	bcf	status,0,c
  4393   002116  3248               	rrcf	(??_floorf+3)^0,f,c
  4394   002118  3247               	rrcf	(??_floorf+2)^0,f,c
  4395   00211A  3246               	rrcf	(??_floorf+1)^0,f,c
  4396   00211C  3245               	rrcf	??_floorf^0,f,c
  4397   00211E                     u3600:
  4398   00211E  2EE8               	decfsz	wreg,f,c
  4399   002120  EF8A  F010         	goto	u3605
  4400   002124  5045               	movf	??_floorf^0,w,c
  4401   002126  1046               	iorwf	(??_floorf+1)^0,w,c
  4402   002128  1047               	iorwf	(??_floorf+2)^0,w,c
  4403   00212A  1048               	iorwf	(??_floorf+3)^0,w,c
  4404   00212C  B4D8               	btfsc	status,2,c
  4405   00212E  EF9B  F010         	goto	u3611
  4406   002132  EF9D  F010         	goto	u3610
  4407   002136                     u3611:
  4408   002136  EFA5  F010         	goto	l1018
  4409   00213A                     u3610:
  4410   00213A  504B               	movf	floorf@m^0,w,c
  4411   00213C  2651               	addwf	floorf@u^0,f,c
  4412   00213E  504C               	movf	(floorf@m+1)^0,w,c
  4413   002140  2252               	addwfc	(floorf@u+1)^0,f,c
  4414   002142  504D               	movf	(floorf@m+2)^0,w,c
  4415   002144  2253               	addwfc	(floorf@u+2)^0,f,c
  4416   002146  504E               	movf	(floorf@m+3)^0,w,c
  4417   002148  2254               	addwfc	(floorf@u+3)^0,f,c
  4418   00214A                     l1018:
  4419   00214A  1C4B               	comf	floorf@m^0,w,c
  4420   00214C  6E45               	movwf	??_floorf^0,c
  4421   00214E  1C4C               	comf	(floorf@m+1)^0,w,c
  4422   002150  6E46               	movwf	(??_floorf+1)^0,c
  4423   002152  1C4D               	comf	(floorf@m+2)^0,w,c
  4424   002154  6E47               	movwf	(??_floorf+2)^0,c
  4425   002156  1C4E               	comf	(floorf@m+3)^0,w,c
  4426   002158  6E48               	movwf	(??_floorf+3)^0,c
  4427   00215A  5045               	movf	??_floorf^0,w,c
  4428   00215C  1651               	andwf	floorf@u^0,f,c
  4429   00215E  5046               	movf	(??_floorf+1)^0,w,c
  4430   002160  1652               	andwf	(floorf@u+1)^0,f,c
  4431   002162  5047               	movf	(??_floorf+2)^0,w,c
  4432   002164  1653               	andwf	(floorf@u+2)^0,f,c
  4433   002166  5048               	movf	(??_floorf+3)^0,w,c
  4434   002168  1654               	andwf	(floorf@u+3)^0,f,c
  4435   00216A  EFFB  F010         	goto	l3252
  4436   00216E                     l3244:
  4437   00216E  C051  F045         	movff	floorf@u,??_floorf
  4438   002172  C052  F046         	movff	floorf@u+1,??_floorf+1
  4439   002176  C053  F047         	movff	floorf@u+2,??_floorf+2
  4440   00217A  C054  F048         	movff	floorf@u+3,??_floorf+3
  4441   00217E  0E20               	movlw	32
  4442   002180  EFC7  F010         	goto	u3620
  4443   002184                     u3625:
  4444   002184  90D8               	bcf	status,0,c
  4445   002186  3248               	rrcf	(??_floorf+3)^0,f,c
  4446   002188  3247               	rrcf	(??_floorf+2)^0,f,c
  4447   00218A  3246               	rrcf	(??_floorf+1)^0,f,c
  4448   00218C  3245               	rrcf	??_floorf^0,f,c
  4449   00218E                     u3620:
  4450   00218E  2EE8               	decfsz	wreg,f,c
  4451   002190  EFC2  F010         	goto	u3625
  4452   002194  5045               	movf	??_floorf^0,w,c
  4453   002196  1046               	iorwf	(??_floorf+1)^0,w,c
  4454   002198  1047               	iorwf	(??_floorf+2)^0,w,c
  4455   00219A  1048               	iorwf	(??_floorf+3)^0,w,c
  4456   00219C  A4D8               	btfss	status,2,c
  4457   00219E  EFD3  F010         	goto	u3631
  4458   0021A2  EFD5  F010         	goto	u3630
  4459   0021A6                     u3631:
  4460   0021A6  EFDF  F010         	goto	l3248
  4461   0021AA                     u3630:
  4462   0021AA  0E00               	movlw	0
  4463   0021AC  6E51               	movwf	floorf@u^0,c
  4464   0021AE  0E00               	movlw	0
  4465   0021B0  6E52               	movwf	(floorf@u+1)^0,c
  4466   0021B2  0E00               	movlw	0
  4467   0021B4  6E53               	movwf	(floorf@u+2)^0,c
  4468   0021B6  0E00               	movlw	0
  4469   0021B8  6E54               	movwf	(floorf@u+3)^0,c
  4470   0021BA  EFFB  F010         	goto	l3252
  4471   0021BE                     l3248:
  4472   0021BE  90D8               	bcf	status,0,c
  4473   0021C0  3451               	rlcf	floorf@u^0,w,c
  4474   0021C2  6E45               	movwf	??_floorf^0,c
  4475   0021C4  3452               	rlcf	(floorf@u+1)^0,w,c
  4476   0021C6  6E46               	movwf	(??_floorf+1)^0,c
  4477   0021C8  3453               	rlcf	(floorf@u+2)^0,w,c
  4478   0021CA  6E47               	movwf	(??_floorf+2)^0,c
  4479   0021CC  3454               	rlcf	(floorf@u+3)^0,w,c
  4480   0021CE  6E48               	movwf	(??_floorf+3)^0,c
  4481   0021D0  5045               	movf	??_floorf^0,w,c
  4482   0021D2  1046               	iorwf	(??_floorf+1)^0,w,c
  4483   0021D4  1047               	iorwf	(??_floorf+2)^0,w,c
  4484   0021D6  1048               	iorwf	(??_floorf+3)^0,w,c
  4485   0021D8  B4D8               	btfsc	status,2,c
  4486   0021DA  EFF1  F010         	goto	u3641
  4487   0021DE  EFF3  F010         	goto	u3640
  4488   0021E2                     u3641:
  4489   0021E2  EFFB  F010         	goto	l3252
  4490   0021E6                     u3640:
  4491   0021E6  0E00               	movlw	0
  4492   0021E8  6E51               	movwf	floorf@u^0,c
  4493   0021EA  0E00               	movlw	0
  4494   0021EC  6E52               	movwf	(floorf@u+1)^0,c
  4495   0021EE  0E80               	movlw	128
  4496   0021F0  6E53               	movwf	(floorf@u+2)^0,c
  4497   0021F2  0EBF               	movlw	191
  4498   0021F4  6E54               	movwf	(floorf@u+3)^0,c
  4499   0021F6                     l3252:
  4500   0021F6  C051  F041         	movff	floorf@u,?_floorf
  4501   0021FA  C052  F042         	movff	floorf@u+1,?_floorf+1
  4502   0021FE  C053  F043         	movff	floorf@u+2,?_floorf+2
  4503   002202  C054  F044         	movff	floorf@u+3,?_floorf+3
  4504   002206                     l1015:
  4505   002206  0012               	return		;funcret
  4506   002208                     __end_of_floorf:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function ___fpclassifyf *****************
  4510 ;; Defined at:
  4511 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  x               4    0[COMRAM] float 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  u               4   10[COMRAM] struct .
  4516 ;;  e               2    8[COMRAM] int 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  2    0[COMRAM] int 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4526 ;;      Params:         4       0       0       0       0       0       0
  4527 ;;      Locals:         6       0       0       0       0       0       0
  4528 ;;      Temps:          4       0       0       0       0       0       0
  4529 ;;      Totals:        14       0       0       0       0       0       0
  4530 ;;Total ram usage:       14 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_efgtoa
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text15
  4540   002A78                     __ptext15:
  4541                           	callstack 0
  4542   002A78                     ___fpclassifyf:
  4543                           	callstack 25
  4544   002A78  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4545   002A7C  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4546   002A80  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4547   002A84  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4548   002A88  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4549   002A8C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4550   002A90  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4551   002A94  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4552   002A98  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4553   002A9C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4554   002AA0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4555   002AA4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4556   002AA8  0E18               	movlw	24
  4557   002AAA  EF5C  F015         	goto	u3460
  4558   002AAE                     u3465:
  4559   002AAE  90D8               	bcf	status,0,c
  4560   002AB0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4561   002AB2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4562   002AB4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4563   002AB6  3205               	rrcf	??___fpclassifyf^0,f,c
  4564   002AB8                     u3460:
  4565   002AB8  2EE8               	decfsz	wreg,f,c
  4566   002ABA  EF57  F015         	goto	u3465
  4567   002ABE  5005               	movf	??___fpclassifyf^0,w,c
  4568   002AC0  6E09               	movwf	___fpclassifyf@e^0,c
  4569   002AC2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4570   002AC4  5009               	movf	___fpclassifyf@e^0,w,c
  4571   002AC6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4572   002AC8  A4D8               	btfss	status,2,c
  4573   002ACA  EF69  F015         	goto	u3471
  4574   002ACE  EF6B  F015         	goto	u3470
  4575   002AD2                     u3471:
  4576   002AD2  EF8B  F015         	goto	l3206
  4577   002AD6                     u3470:
  4578   002AD6  90D8               	bcf	status,0,c
  4579   002AD8  340B               	rlcf	___fpclassifyf@u^0,w,c
  4580   002ADA  6E05               	movwf	??___fpclassifyf^0,c
  4581   002ADC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4582   002ADE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4583   002AE0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4584   002AE2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4585   002AE4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4586   002AE6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4587   002AE8  5005               	movf	??___fpclassifyf^0,w,c
  4588   002AEA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4589   002AEC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4590   002AEE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4591   002AF0  A4D8               	btfss	status,2,c
  4592   002AF2  EF7D  F015         	goto	u3481
  4593   002AF6  EF7F  F015         	goto	u3480
  4594   002AFA                     u3481:
  4595   002AFA  EF85  F015         	goto	l3202
  4596   002AFE                     u3480:
  4597   002AFE  0E00               	movlw	0
  4598   002B00  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4599   002B02  0E02               	movlw	2
  4600   002B04  6E01               	movwf	?___fpclassifyf^0,c
  4601   002B06  EFBA  F015         	goto	l1001
  4602   002B0A                     l3202:
  4603   002B0A  0E00               	movlw	0
  4604   002B0C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4605   002B0E  0E03               	movlw	3
  4606   002B10  6E01               	movwf	?___fpclassifyf^0,c
  4607   002B12  EFBA  F015         	goto	l1001
  4608   002B16                     l3206:
  4609   002B16  2809               	incf	___fpclassifyf@e^0,w,c
  4610   002B18  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4611   002B1A  A4D8               	btfss	status,2,c
  4612   002B1C  EF92  F015         	goto	u3491
  4613   002B20  EF94  F015         	goto	u3490
  4614   002B24                     u3491:
  4615   002B24  EFB6  F015         	goto	l3212
  4616   002B28                     u3490:
  4617   002B28  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4618   002B2C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4619   002B30  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4620   002B34  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4621   002B38  0E09               	movlw	9
  4622   002B3A                     u3505:
  4623   002B3A  90D8               	bcf	status,0,c
  4624   002B3C  3605               	rlcf	??___fpclassifyf^0,f,c
  4625   002B3E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4626   002B40  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4627   002B42  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4628   002B44  2EE8               	decfsz	wreg,f,c
  4629   002B46  EF9D  F015         	goto	u3505
  4630   002B4A  5005               	movf	??___fpclassifyf^0,w,c
  4631   002B4C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4632   002B4E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4633   002B50  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4634   002B52  B4D8               	btfsc	status,2,c
  4635   002B54  EFAE  F015         	goto	u3511
  4636   002B58  EFB1  F015         	goto	u3510
  4637   002B5C                     u3511:
  4638   002B5C  0E01               	movlw	1
  4639   002B5E  EFB2  F015         	goto	u3520
  4640   002B62                     u3510:
  4641   002B62  0E00               	movlw	0
  4642   002B64                     u3520:
  4643   002B64  6E01               	movwf	?___fpclassifyf^0,c
  4644   002B66  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4645   002B68  EFBA  F015         	goto	l1001
  4646   002B6C                     l3212:
  4647   002B6C  0E00               	movlw	0
  4648   002B6E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4649   002B70  0E04               	movlw	4
  4650   002B72  6E01               	movwf	?___fpclassifyf^0,c
  4651   002B74                     l1001:
  4652   002B74  0012               	return		;funcret
  4653   002B76                     __end_of___fpclassifyf:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function ___fltol *****************
  4657 ;; Defined at:
  4658 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  f1              4    0[COMRAM] int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  exp1            1    9[COMRAM] unsigned char 
  4663 ;;  sign1           1    8[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  4    0[COMRAM] long 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         4       0       0       0       0       0       0
  4674 ;;      Locals:         2       0       0       0       0       0       0
  4675 ;;      Temps:          4       0       0       0       0       0       0
  4676 ;;      Totals:        10       0       0       0       0       0       0
  4677 ;;Total ram usage:       10 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_efgtoa
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text16
  4687   00286E                     __ptext16:
  4688                           	callstack 0
  4689   00286E                     ___fltol:
  4690                           	callstack 25
  4691   00286E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4692   002870  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4693   002872  6E0A               	movwf	___fltol@exp1^0,c
  4694   002874  500A               	movf	___fltol@exp1^0,w,c
  4695   002876  A4D8               	btfss	status,2,c
  4696   002878  EF40  F014         	goto	u3341
  4697   00287C  EF42  F014         	goto	u3340
  4698   002880                     u3341:
  4699   002880  EF4C  F014         	goto	l3136
  4700   002884                     u3340:
  4701   002884                     l3132:
  4702   002884  0E00               	movlw	0
  4703   002886  6E01               	movwf	?___fltol^0,c
  4704   002888  0E00               	movlw	0
  4705   00288A  6E02               	movwf	(?___fltol+1)^0,c
  4706   00288C  0E00               	movlw	0
  4707   00288E  6E03               	movwf	(?___fltol+2)^0,c
  4708   002890  0E00               	movlw	0
  4709   002892  6E04               	movwf	(?___fltol+3)^0,c
  4710   002894  EFB9  F014         	goto	l450
  4711   002898                     l3136:
  4712   002898  C001  F005         	movff	___fltol@f1,??___fltol
  4713   00289C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4714   0028A0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4715   0028A4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4716   0028A8  0E20               	movlw	32
  4717   0028AA  EF5C  F014         	goto	u3350
  4718   0028AE                     u3355:
  4719   0028AE  90D8               	bcf	status,0,c
  4720   0028B0  3208               	rrcf	(??___fltol+3)^0,f,c
  4721   0028B2  3207               	rrcf	(??___fltol+2)^0,f,c
  4722   0028B4  3206               	rrcf	(??___fltol+1)^0,f,c
  4723   0028B6  3205               	rrcf	??___fltol^0,f,c
  4724   0028B8                     u3350:
  4725   0028B8  2EE8               	decfsz	wreg,f,c
  4726   0028BA  EF57  F014         	goto	u3355
  4727   0028BE  5005               	movf	??___fltol^0,w,c
  4728   0028C0  6E09               	movwf	___fltol@sign1^0,c
  4729   0028C2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4730   0028C4  0EFF               	movlw	255
  4731   0028C6  1601               	andwf	___fltol@f1^0,f,c
  4732   0028C8  0EFF               	movlw	255
  4733   0028CA  1602               	andwf	(___fltol@f1+1)^0,f,c
  4734   0028CC  0EFF               	movlw	255
  4735   0028CE  1603               	andwf	(___fltol@f1+2)^0,f,c
  4736   0028D0  0E00               	movlw	0
  4737   0028D2  1604               	andwf	(___fltol@f1+3)^0,f,c
  4738   0028D4  0E96               	movlw	150
  4739   0028D6  5E0A               	subwf	___fltol@exp1^0,f,c
  4740   0028D8  BE0A               	btfsc	___fltol@exp1^0,7,c
  4741   0028DA  EF73  F014         	goto	u3360
  4742   0028DE  EF71  F014         	goto	u3361
  4743   0028E2                     u3361:
  4744   0028E2  EF89  F014         	goto	l3156
  4745   0028E6                     u3360:
  4746   0028E6  500A               	movf	___fltol@exp1^0,w,c
  4747   0028E8  0A80               	xorlw	128
  4748   0028EA  0F97               	addlw	151
  4749   0028EC  B0D8               	btfsc	status,0,c
  4750   0028EE  EF7B  F014         	goto	u3371
  4751   0028F2  EF7D  F014         	goto	u3370
  4752   0028F6                     u3371:
  4753   0028F6  EF7F  F014         	goto	l3152
  4754   0028FA                     u3370:
  4755   0028FA  EF42  F014         	goto	l3132
  4756   0028FE                     l3152:
  4757   0028FE  90D8               	bcf	status,0,c
  4758   002900  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4759   002902  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4760   002904  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4761   002906  3201               	rrcf	___fltol@f1^0,f,c
  4762   002908  3E0A               	incfsz	___fltol@exp1^0,f,c
  4763   00290A  EF7F  F014         	goto	l3152
  4764   00290E  EFA1  F014         	goto	l3166
  4765   002912                     l3156:
  4766   002912  0E1F               	movlw	31
  4767   002914  640A               	cpfsgt	___fltol@exp1^0,c
  4768   002916  EF8F  F014         	goto	u3381
  4769   00291A  EF91  F014         	goto	u3380
  4770   00291E                     u3381:
  4771   00291E  EF99  F014         	goto	l3164
  4772   002922                     u3380:
  4773   002922  EF42  F014         	goto	l3132
  4774   002926                     l3162:
  4775   002926  90D8               	bcf	status,0,c
  4776   002928  3601               	rlcf	___fltol@f1^0,f,c
  4777   00292A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4778   00292C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4779   00292E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4780   002930  060A               	decf	___fltol@exp1^0,f,c
  4781   002932                     l3164:
  4782   002932  500A               	movf	___fltol@exp1^0,w,c
  4783   002934  A4D8               	btfss	status,2,c
  4784   002936  EF9F  F014         	goto	u3391
  4785   00293A  EFA1  F014         	goto	u3390
  4786   00293E                     u3391:
  4787   00293E  EF93  F014         	goto	l3162
  4788   002942                     u3390:
  4789   002942                     l3166:
  4790   002942  5009               	movf	___fltol@sign1^0,w,c
  4791   002944  B4D8               	btfsc	status,2,c
  4792   002946  EFA7  F014         	goto	u3401
  4793   00294A  EFA9  F014         	goto	u3400
  4794   00294E                     u3401:
  4795   00294E  EFB1  F014         	goto	l3170
  4796   002952                     u3400:
  4797   002952  1E04               	comf	(___fltol@f1+3)^0,f,c
  4798   002954  1E03               	comf	(___fltol@f1+2)^0,f,c
  4799   002956  1E02               	comf	(___fltol@f1+1)^0,f,c
  4800   002958  6C01               	negf	___fltol@f1^0,c
  4801   00295A  0E00               	movlw	0
  4802   00295C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4803   00295E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4804   002960  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4805   002962                     l3170:
  4806   002962  C001  F001         	movff	___fltol@f1,?___fltol
  4807   002966  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4808   00296A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4809   00296E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4810   002972                     l450:
  4811   002972  0012               	return		;funcret
  4812   002974                     __end_of___fltol:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function ___flsub *****************
  4816 ;; Defined at:
  4817 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  b               4   39[COMRAM] long 
  4820 ;;  a               4   43[COMRAM] long 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  4   39[COMRAM] long 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4832 ;;      Params:         8       0       0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0
  4835 ;;      Totals:         8       0       0       0       0       0       0
  4836 ;;Total ram usage:        8 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 1
  4839 ;; This function calls:
  4840 ;;		___fladd
  4841 ;; This function is called by:
  4842 ;;		_efgtoa
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text17
  4847   0033B4                     __ptext17:
  4848                           	callstack 0
  4849   0033B4                     ___flsub:
  4850                           	callstack 24
  4851   0033B4  0E00               	movlw	0
  4852   0033B6  1A2C               	xorwf	___flsub@a^0,f,c
  4853   0033B8  0E00               	movlw	0
  4854   0033BA  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4855   0033BC  0E00               	movlw	0
  4856   0033BE  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4857   0033C0  0E80               	movlw	128
  4858   0033C2  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4859   0033C4  C028  F001         	movff	___flsub@b,___fladd@b
  4860   0033C8  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4861   0033CC  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4862   0033D0  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4863   0033D4  C02C  F005         	movff	___flsub@a,___fladd@a
  4864   0033D8  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4865   0033DC  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4866   0033E0  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4867   0033E4  EC5A  F008         	call	___fladd	;wreg free
  4868   0033E8  C001  F028         	movff	?___fladd,?___flsub
  4869   0033EC  C002  F029         	movff	?___fladd+1,?___flsub+1
  4870   0033F0  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4871   0033F4  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4872   0033F8  0012               	return		;funcret
  4873   0033FA                     __end_of___flsub:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function ___fladd *****************
  4877 ;; Defined at:
  4878 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  b               4    0[COMRAM] long 
  4881 ;;  a               4    4[COMRAM] long 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  grs             1   15[COMRAM] unsigned char 
  4884 ;;  bexp            1   14[COMRAM] unsigned char 
  4885 ;;  aexp            1   13[COMRAM] unsigned char 
  4886 ;;  signs           1   12[COMRAM] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  4    0[COMRAM] unsigned char 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4896 ;;      Params:         8       0       0       0       0       0       0
  4897 ;;      Locals:         4       0       0       0       0       0       0
  4898 ;;      Temps:          4       0       0       0       0       0       0
  4899 ;;      Totals:        16       0       0       0       0       0       0
  4900 ;;Total ram usage:       16 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		___flsub
  4906 ;;		_efgtoa
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text18
  4911   0010B4                     __ptext18:
  4912                           	callstack 0
  4913   0010B4                     ___fladd:
  4914                           	callstack 24
  4915   0010B4  5004               	movf	(___fladd@b+3)^0,w,c
  4916   0010B6  0B80               	andlw	128
  4917   0010B8  6E0D               	movwf	___fladd@signs^0,c
  4918   0010BA  5004               	movf	(___fladd@b+3)^0,w,c
  4919   0010BC  2404               	addwf	(___fladd@b+3)^0,w,c
  4920   0010BE  6E0F               	movwf	___fladd@bexp^0,c
  4921   0010C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  4922   0010C2  EF65  F008         	goto	u2311
  4923   0010C6  EF67  F008         	goto	u2310
  4924   0010CA                     u2311:
  4925   0010CA  EF68  F008         	goto	l2520
  4926   0010CE                     u2310:
  4927   0010CE  800F               	bsf	___fladd@bexp^0,0,c
  4928   0010D0                     l2520:
  4929   0010D0  500F               	movf	___fladd@bexp^0,w,c
  4930   0010D2  B4D8               	btfsc	status,2,c
  4931   0010D4  EF6E  F008         	goto	u2321
  4932   0010D8  EF70  F008         	goto	u2320
  4933   0010DC                     u2321:
  4934   0010DC  EF85  F008         	goto	l2530
  4935   0010E0                     u2320:
  4936   0010E0  280F               	incf	___fladd@bexp^0,w,c
  4937   0010E2  A4D8               	btfss	status,2,c
  4938   0010E4  EF76  F008         	goto	u2331
  4939   0010E8  EF78  F008         	goto	u2330
  4940   0010EC                     u2331:
  4941   0010EC  EF80  F008         	goto	l2526
  4942   0010F0                     u2330:
  4943   0010F0  0E00               	movlw	0
  4944   0010F2  6E01               	movwf	___fladd@b^0,c
  4945   0010F4  0E00               	movlw	0
  4946   0010F6  6E02               	movwf	(___fladd@b+1)^0,c
  4947   0010F8  0E00               	movlw	0
  4948   0010FA  6E03               	movwf	(___fladd@b+2)^0,c
  4949   0010FC  0E00               	movlw	0
  4950   0010FE  6E04               	movwf	(___fladd@b+3)^0,c
  4951   001100                     l2526:
  4952   001100  8E03               	bsf	(___fladd@b+2)^0,7,c
  4953   001102  0E00               	movlw	0
  4954   001104  6E04               	movwf	(___fladd@b+3)^0,c
  4955   001106  EF8D  F008         	goto	l2532
  4956   00110A                     l2530:
  4957   00110A  0E00               	movlw	0
  4958   00110C  6E01               	movwf	___fladd@b^0,c
  4959   00110E  0E00               	movlw	0
  4960   001110  6E02               	movwf	(___fladd@b+1)^0,c
  4961   001112  0E00               	movlw	0
  4962   001114  6E03               	movwf	(___fladd@b+2)^0,c
  4963   001116  0E00               	movlw	0
  4964   001118  6E04               	movwf	(___fladd@b+3)^0,c
  4965   00111A                     l2532:
  4966   00111A  5008               	movf	(___fladd@a+3)^0,w,c
  4967   00111C  0B80               	andlw	128
  4968   00111E  6E0E               	movwf	___fladd@aexp^0,c
  4969   001120  500D               	movf	___fladd@signs^0,w,c
  4970   001122  180E               	xorwf	___fladd@aexp^0,w,c
  4971   001124  B4D8               	btfsc	status,2,c
  4972   001126  EF97  F008         	goto	u2341
  4973   00112A  EF99  F008         	goto	u2340
  4974   00112E                     u2341:
  4975   00112E  EF9A  F008         	goto	l2538
  4976   001132                     u2340:
  4977   001132  8C0D               	bsf	___fladd@signs^0,6,c
  4978   001134                     l2538:
  4979   001134  5008               	movf	(___fladd@a+3)^0,w,c
  4980   001136  2408               	addwf	(___fladd@a+3)^0,w,c
  4981   001138  6E0E               	movwf	___fladd@aexp^0,c
  4982   00113A  AE07               	btfss	(___fladd@a+2)^0,7,c
  4983   00113C  EFA2  F008         	goto	u2351
  4984   001140  EFA4  F008         	goto	u2350
  4985   001144                     u2351:
  4986   001144  EFA5  F008         	goto	l2544
  4987   001148                     u2350:
  4988   001148  800E               	bsf	___fladd@aexp^0,0,c
  4989   00114A                     l2544:
  4990   00114A  500E               	movf	___fladd@aexp^0,w,c
  4991   00114C  B4D8               	btfsc	status,2,c
  4992   00114E  EFAB  F008         	goto	u2361
  4993   001152  EFAD  F008         	goto	u2360
  4994   001156                     u2361:
  4995   001156  EFC2  F008         	goto	l2554
  4996   00115A                     u2360:
  4997   00115A  280E               	incf	___fladd@aexp^0,w,c
  4998   00115C  A4D8               	btfss	status,2,c
  4999   00115E  EFB3  F008         	goto	u2371
  5000   001162  EFB5  F008         	goto	u2370
  5001   001166                     u2371:
  5002   001166  EFBD  F008         	goto	l2550
  5003   00116A                     u2370:
  5004   00116A  0E00               	movlw	0
  5005   00116C  6E05               	movwf	___fladd@a^0,c
  5006   00116E  0E00               	movlw	0
  5007   001170  6E06               	movwf	(___fladd@a+1)^0,c
  5008   001172  0E00               	movlw	0
  5009   001174  6E07               	movwf	(___fladd@a+2)^0,c
  5010   001176  0E00               	movlw	0
  5011   001178  6E08               	movwf	(___fladd@a+3)^0,c
  5012   00117A                     l2550:
  5013   00117A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5014   00117C  0E00               	movlw	0
  5015   00117E  6E08               	movwf	(___fladd@a+3)^0,c
  5016   001180  EFCA  F008         	goto	l2556
  5017   001184                     l2554:
  5018   001184  0E00               	movlw	0
  5019   001186  6E05               	movwf	___fladd@a^0,c
  5020   001188  0E00               	movlw	0
  5021   00118A  6E06               	movwf	(___fladd@a+1)^0,c
  5022   00118C  0E00               	movlw	0
  5023   00118E  6E07               	movwf	(___fladd@a+2)^0,c
  5024   001190  0E00               	movlw	0
  5025   001192  6E08               	movwf	(___fladd@a+3)^0,c
  5026   001194                     l2556:
  5027   001194  500F               	movf	___fladd@bexp^0,w,c
  5028   001196  5C0E               	subwf	___fladd@aexp^0,w,c
  5029   001198  B0D8               	btfsc	status,0,c
  5030   00119A  EFD1  F008         	goto	u2381
  5031   00119E  EFD3  F008         	goto	u2380
  5032   0011A2                     u2381:
  5033   0011A2  EFFA  F008         	goto	l2592
  5034   0011A6                     u2380:
  5035   0011A6  AC0D               	btfss	___fladd@signs^0,6,c
  5036   0011A8  EFD8  F008         	goto	u2391
  5037   0011AC  EFDA  F008         	goto	u2390
  5038   0011B0                     u2391:
  5039   0011B0  EFDC  F008         	goto	l2562
  5040   0011B4                     u2390:
  5041   0011B4  0E80               	movlw	128
  5042   0011B6  1A0D               	xorwf	___fladd@signs^0,f,c
  5043   0011B8                     l2562:
  5044   0011B8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5045   0011BC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5046   0011C0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5047   0011C4  C001  F010         	movff	___fladd@b,___fladd@grs
  5048   0011C8  C005  F001         	movff	___fladd@a,___fladd@b
  5049   0011CC  C010  F005         	movff	___fladd@grs,___fladd@a
  5050   0011D0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5051   0011D4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5052   0011D8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5053   0011DC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5054   0011E0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5055   0011E4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5056   0011E8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5057   0011EC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5058   0011F0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5059   0011F4                     l2592:
  5060   0011F4  0E00               	movlw	0
  5061   0011F6  6E10               	movwf	___fladd@grs^0,c
  5062   0011F8  500F               	movf	___fladd@bexp^0,w,c
  5063   0011FA  C00E  F009         	movff	___fladd@aexp,??___fladd
  5064   0011FE  6A0A               	clrf	(??___fladd+1)^0,c
  5065   001200  5E09               	subwf	??___fladd^0,f,c
  5066   001202  0E00               	movlw	0
  5067   001204  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5068   001206  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5069   001208  EF0F  F009         	goto	u2401
  5070   00120C  500A               	movf	(??___fladd+1)^0,w,c
  5071   00120E  E109               	bnz	u2400
  5072   001210  0E1A               	movlw	26
  5073   001212  5C09               	subwf	??___fladd^0,w,c
  5074   001214  A0D8               	btfss	status,0,c
  5075   001216  EF0F  F009         	goto	u2401
  5076   00121A  EF11  F009         	goto	u2400
  5077   00121E                     u2401:
  5078   00121E  EF48  F009         	goto	l682
  5079   001222                     u2400:
  5080   001222  5001               	movf	___fladd@b^0,w,c
  5081   001224  1002               	iorwf	(___fladd@b+1)^0,w,c
  5082   001226  1003               	iorwf	(___fladd@b+2)^0,w,c
  5083   001228  1004               	iorwf	(___fladd@b+3)^0,w,c
  5084   00122A  A4D8               	btfss	status,2,c
  5085   00122C  EF1A  F009         	goto	u2411
  5086   001230  EF1D  F009         	goto	u2410
  5087   001234                     u2411:
  5088   001234  0E01               	movlw	1
  5089   001236  EF1E  F009         	goto	u2420
  5090   00123A                     u2410:
  5091   00123A  0E00               	movlw	0
  5092   00123C                     u2420:
  5093   00123C  6E10               	movwf	___fladd@grs^0,c
  5094   00123E  0E00               	movlw	0
  5095   001240  6E01               	movwf	___fladd@b^0,c
  5096   001242  0E00               	movlw	0
  5097   001244  6E02               	movwf	(___fladd@b+1)^0,c
  5098   001246  0E00               	movlw	0
  5099   001248  6E03               	movwf	(___fladd@b+2)^0,c
  5100   00124A  0E00               	movlw	0
  5101   00124C  6E04               	movwf	(___fladd@b+3)^0,c
  5102   00124E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5103   001252  EF51  F009         	goto	l681
  5104   001256                     l683:
  5105   001256  A010               	btfss	___fladd@grs^0,0,c
  5106   001258  EF30  F009         	goto	u2431
  5107   00125C  EF32  F009         	goto	u2430
  5108   001260                     u2431:
  5109   001260  EF38  F009         	goto	l2604
  5110   001264                     u2430:
  5111   001264  90D8               	bcf	status,0,c
  5112   001266  3010               	rrcf	___fladd@grs^0,w,c
  5113   001268  0901               	iorlw	1
  5114   00126A  6E10               	movwf	___fladd@grs^0,c
  5115   00126C  EF3A  F009         	goto	l2606
  5116   001270                     l2604:
  5117   001270  90D8               	bcf	status,0,c
  5118   001272  3210               	rrcf	___fladd@grs^0,f,c
  5119   001274                     l2606:
  5120   001274  A001               	btfss	___fladd@b^0,0,c
  5121   001276  EF3F  F009         	goto	u2441
  5122   00127A  EF41  F009         	goto	u2440
  5123   00127E                     u2441:
  5124   00127E  EF42  F009         	goto	l2610
  5125   001282                     u2440:
  5126   001282  8E10               	bsf	___fladd@grs^0,7,c
  5127   001284                     l2610:
  5128   001284  3404               	rlcf	(___fladd@b+3)^0,w,c
  5129   001286  3204               	rrcf	(___fladd@b+3)^0,f,c
  5130   001288  3203               	rrcf	(___fladd@b+2)^0,f,c
  5131   00128A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5132   00128C  3201               	rrcf	___fladd@b^0,f,c
  5133   00128E  2A0F               	incf	___fladd@bexp^0,f,c
  5134   001290                     l682:
  5135   001290  500E               	movf	___fladd@aexp^0,w,c
  5136   001292  5C0F               	subwf	___fladd@bexp^0,w,c
  5137   001294  A0D8               	btfss	status,0,c
  5138   001296  EF4F  F009         	goto	u2451
  5139   00129A  EF51  F009         	goto	u2450
  5140   00129E                     u2451:
  5141   00129E  EF2B  F009         	goto	l683
  5142   0012A2                     u2450:
  5143   0012A2                     l681:
  5144   0012A2  BC0D               	btfsc	___fladd@signs^0,6,c
  5145   0012A4  EF56  F009         	goto	u2461
  5146   0012A8  EF58  F009         	goto	u2460
  5147   0012AC                     u2461:
  5148   0012AC  EF98  F009         	goto	l2638
  5149   0012B0                     u2460:
  5150   0012B0  500F               	movf	___fladd@bexp^0,w,c
  5151   0012B2  A4D8               	btfss	status,2,c
  5152   0012B4  EF5E  F009         	goto	u2471
  5153   0012B8  EF60  F009         	goto	u2470
  5154   0012BC                     u2471:
  5155   0012BC  EF6A  F009         	goto	l2620
  5156   0012C0                     u2470:
  5157   0012C0  0E00               	movlw	0
  5158   0012C2  6E01               	movwf	?___fladd^0,c
  5159   0012C4  0E00               	movlw	0
  5160   0012C6  6E02               	movwf	(?___fladd+1)^0,c
  5161   0012C8  0E00               	movlw	0
  5162   0012CA  6E03               	movwf	(?___fladd+2)^0,c
  5163   0012CC  0E00               	movlw	0
  5164   0012CE  6E04               	movwf	(?___fladd+3)^0,c
  5165   0012D0  EFB9  F00A         	goto	l690
  5166   0012D4                     l2620:
  5167   0012D4  5005               	movf	___fladd@a^0,w,c
  5168   0012D6  2601               	addwf	___fladd@b^0,f,c
  5169   0012D8  5006               	movf	(___fladd@a+1)^0,w,c
  5170   0012DA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5171   0012DC  5007               	movf	(___fladd@a+2)^0,w,c
  5172   0012DE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5173   0012E0  5008               	movf	(___fladd@a+3)^0,w,c
  5174   0012E2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5175   0012E4  A004               	btfss	(___fladd@b+3)^0,0,c
  5176   0012E6  EF77  F009         	goto	u2481
  5177   0012EA  EF79  F009         	goto	u2480
  5178   0012EE                     u2481:
  5179   0012EE  EF25  F00A         	goto	l2674
  5180   0012F2                     u2480:
  5181   0012F2  A010               	btfss	___fladd@grs^0,0,c
  5182   0012F4  EF7E  F009         	goto	u2491
  5183   0012F8  EF80  F009         	goto	u2490
  5184   0012FC                     u2491:
  5185   0012FC  EF86  F009         	goto	l2628
  5186   001300                     u2490:
  5187   001300  90D8               	bcf	status,0,c
  5188   001302  3010               	rrcf	___fladd@grs^0,w,c
  5189   001304  0901               	iorlw	1
  5190   001306  6E10               	movwf	___fladd@grs^0,c
  5191   001308  EF88  F009         	goto	l2630
  5192   00130C                     l2628:
  5193   00130C  90D8               	bcf	status,0,c
  5194   00130E  3210               	rrcf	___fladd@grs^0,f,c
  5195   001310                     l2630:
  5196   001310  A001               	btfss	___fladd@b^0,0,c
  5197   001312  EF8D  F009         	goto	u2501
  5198   001316  EF8F  F009         	goto	u2500
  5199   00131A                     u2501:
  5200   00131A  EF90  F009         	goto	l2634
  5201   00131E                     u2500:
  5202   00131E  8E10               	bsf	___fladd@grs^0,7,c
  5203   001320                     l2634:
  5204   001320  3404               	rlcf	(___fladd@b+3)^0,w,c
  5205   001322  3204               	rrcf	(___fladd@b+3)^0,f,c
  5206   001324  3203               	rrcf	(___fladd@b+2)^0,f,c
  5207   001326  3202               	rrcf	(___fladd@b+1)^0,f,c
  5208   001328  3201               	rrcf	___fladd@b^0,f,c
  5209   00132A  2A0F               	incf	___fladd@bexp^0,f,c
  5210   00132C  EF25  F00A         	goto	l2674
  5211   001330                     l2638:
  5212   001330  5005               	movf	___fladd@a^0,w,c
  5213   001332  5C01               	subwf	___fladd@b^0,w,c
  5214   001334  5006               	movf	(___fladd@a+1)^0,w,c
  5215   001336  5802               	subwfb	(___fladd@b+1)^0,w,c
  5216   001338  5007               	movf	(___fladd@a+2)^0,w,c
  5217   00133A  5803               	subwfb	(___fladd@b+2)^0,w,c
  5218   00133C  5004               	movf	(___fladd@b+3)^0,w,c
  5219   00133E  0A80               	xorlw	128
  5220   001340  6E09               	movwf	??___fladd^0,c
  5221   001342  5008               	movf	(___fladd@a+3)^0,w,c
  5222   001344  0A80               	xorlw	128
  5223   001346  5809               	subwfb	??___fladd^0,w,c
  5224   001348  B0D8               	btfsc	status,0,c
  5225   00134A  EFA9  F009         	goto	u2511
  5226   00134E  EFAB  F009         	goto	u2510
  5227   001352                     u2511:
  5228   001352  EFD6  F009         	goto	l2648
  5229   001356                     u2510:
  5230   001356  5001               	movf	___fladd@b^0,w,c
  5231   001358  5C05               	subwf	___fladd@a^0,w,c
  5232   00135A  6E09               	movwf	??___fladd^0,c
  5233   00135C  5002               	movf	(___fladd@b+1)^0,w,c
  5234   00135E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5235   001360  6E0A               	movwf	(??___fladd+1)^0,c
  5236   001362  5003               	movf	(___fladd@b+2)^0,w,c
  5237   001364  5807               	subwfb	(___fladd@a+2)^0,w,c
  5238   001366  6E0B               	movwf	(??___fladd+2)^0,c
  5239   001368  5004               	movf	(___fladd@b+3)^0,w,c
  5240   00136A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5241   00136C  6E0C               	movwf	(??___fladd+3)^0,c
  5242   00136E  0EFF               	movlw	255
  5243   001370  2409               	addwf	??___fladd^0,w,c
  5244   001372  6E01               	movwf	___fladd@b^0,c
  5245   001374  0EFF               	movlw	255
  5246   001376  200A               	addwfc	(??___fladd+1)^0,w,c
  5247   001378  6E02               	movwf	(___fladd@b+1)^0,c
  5248   00137A  0EFF               	movlw	255
  5249   00137C  200B               	addwfc	(??___fladd+2)^0,w,c
  5250   00137E  6E03               	movwf	(___fladd@b+2)^0,c
  5251   001380  0EFF               	movlw	255
  5252   001382  200C               	addwfc	(??___fladd+3)^0,w,c
  5253   001384  6E04               	movwf	(___fladd@b+3)^0,c
  5254   001386  0E80               	movlw	128
  5255   001388  1A0D               	xorwf	___fladd@signs^0,f,c
  5256   00138A  6C10               	negf	___fladd@grs^0,c
  5257   00138C  5010               	movf	___fladd@grs^0,w,c
  5258   00138E  A4D8               	btfss	status,2,c
  5259   001390  EFCC  F009         	goto	u2521
  5260   001394  EFCE  F009         	goto	u2520
  5261   001398                     u2521:
  5262   001398  EFDE  F009         	goto	l698
  5263   00139C                     u2520:
  5264   00139C  0E01               	movlw	1
  5265   00139E  2601               	addwf	___fladd@b^0,f,c
  5266   0013A0  0E00               	movlw	0
  5267   0013A2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5268   0013A4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5269   0013A6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5270   0013A8  EFDE  F009         	goto	l698
  5271   0013AC                     l2648:
  5272   0013AC  5005               	movf	___fladd@a^0,w,c
  5273   0013AE  5E01               	subwf	___fladd@b^0,f,c
  5274   0013B0  5006               	movf	(___fladd@a+1)^0,w,c
  5275   0013B2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5276   0013B4  5007               	movf	(___fladd@a+2)^0,w,c
  5277   0013B6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5278   0013B8  5008               	movf	(___fladd@a+3)^0,w,c
  5279   0013BA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5280   0013BC                     l698:
  5281   0013BC  5001               	movf	___fladd@b^0,w,c
  5282   0013BE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5283   0013C0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5284   0013C2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5285   0013C4  A4D8               	btfss	status,2,c
  5286   0013C6  EFE7  F009         	goto	u2531
  5287   0013CA  EFE9  F009         	goto	u2530
  5288   0013CE                     u2531:
  5289   0013CE  EF1E  F00A         	goto	l2672
  5290   0013D2                     u2530:
  5291   0013D2  5010               	movf	___fladd@grs^0,w,c
  5292   0013D4  A4D8               	btfss	status,2,c
  5293   0013D6  EFEF  F009         	goto	u2541
  5294   0013DA  EFF1  F009         	goto	u2540
  5295   0013DE                     u2541:
  5296   0013DE  EF1E  F00A         	goto	l2672
  5297   0013E2                     u2540:
  5298   0013E2  0E00               	movlw	0
  5299   0013E4  6E01               	movwf	?___fladd^0,c
  5300   0013E6  0E00               	movlw	0
  5301   0013E8  6E02               	movwf	(?___fladd+1)^0,c
  5302   0013EA  0E00               	movlw	0
  5303   0013EC  6E03               	movwf	(?___fladd+2)^0,c
  5304   0013EE  0E00               	movlw	0
  5305   0013F0  6E04               	movwf	(?___fladd+3)^0,c
  5306   0013F2  EFB9  F00A         	goto	l690
  5307   0013F6                     l2656:
  5308   0013F6  90D8               	bcf	status,0,c
  5309   0013F8  3601               	rlcf	___fladd@b^0,f,c
  5310   0013FA  3602               	rlcf	(___fladd@b+1)^0,f,c
  5311   0013FC  3603               	rlcf	(___fladd@b+2)^0,f,c
  5312   0013FE  3604               	rlcf	(___fladd@b+3)^0,f,c
  5313   001400  AE10               	btfss	___fladd@grs^0,7,c
  5314   001402  EF05  F00A         	goto	u2551
  5315   001406  EF07  F00A         	goto	u2550
  5316   00140A                     u2551:
  5317   00140A  EF08  F00A         	goto	l2662
  5318   00140E                     u2550:
  5319   00140E  8001               	bsf	___fladd@b^0,0,c
  5320   001410                     l2662:
  5321   001410  A010               	btfss	___fladd@grs^0,0,c
  5322   001412  EF0D  F00A         	goto	u2561
  5323   001416  EF0F  F00A         	goto	u2560
  5324   00141A                     u2561:
  5325   00141A  EF13  F00A         	goto	l2666
  5326   00141E                     u2560:
  5327   00141E  80D8               	bsf	status,0,c
  5328   001420  3610               	rlcf	___fladd@grs^0,f,c
  5329   001422  EF15  F00A         	goto	l2668
  5330   001426                     l2666:
  5331   001426  90D8               	bcf	status,0,c
  5332   001428  3610               	rlcf	___fladd@grs^0,f,c
  5333   00142A                     l2668:
  5334   00142A  500F               	movf	___fladd@bexp^0,w,c
  5335   00142C  B4D8               	btfsc	status,2,c
  5336   00142E  EF1B  F00A         	goto	u2571
  5337   001432  EF1D  F00A         	goto	u2570
  5338   001436                     u2571:
  5339   001436  EF1E  F00A         	goto	l2672
  5340   00143A                     u2570:
  5341   00143A  060F               	decf	___fladd@bexp^0,f,c
  5342   00143C                     l2672:
  5343   00143C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5344   00143E  EF23  F00A         	goto	u2581
  5345   001442  EF25  F00A         	goto	u2580
  5346   001446                     u2581:
  5347   001446  EFFB  F009         	goto	l2656
  5348   00144A                     u2580:
  5349   00144A                     l2674:
  5350   00144A  0E00               	movlw	0
  5351   00144C  6E0E               	movwf	___fladd@aexp^0,c
  5352   00144E  AE10               	btfss	___fladd@grs^0,7,c
  5353   001450  EF2C  F00A         	goto	u2591
  5354   001454  EF2E  F00A         	goto	u2590
  5355   001458                     u2591:
  5356   001458  EF46  F00A         	goto	l707
  5357   00145C                     u2590:
  5358   00145C  C010  F009         	movff	___fladd@grs,??___fladd
  5359   001460  0E7F               	movlw	127
  5360   001462  1609               	andwf	??___fladd^0,f,c
  5361   001464  B4D8               	btfsc	status,2,c
  5362   001466  EF37  F00A         	goto	u2601
  5363   00146A  EF39  F00A         	goto	u2600
  5364   00146E                     u2601:
  5365   00146E  EF3D  F00A         	goto	l708
  5366   001472                     u2600:
  5367   001472                     l2680:
  5368   001472  0E01               	movlw	1
  5369   001474  6E0E               	movwf	___fladd@aexp^0,c
  5370   001476  EF46  F00A         	goto	l707
  5371   00147A                     l708:
  5372   00147A  A001               	btfss	___fladd@b^0,0,c
  5373   00147C  EF42  F00A         	goto	u2611
  5374   001480  EF44  F00A         	goto	u2610
  5375   001484                     u2611:
  5376   001484  EF46  F00A         	goto	l707
  5377   001488                     u2610:
  5378   001488  EF39  F00A         	goto	l2680
  5379   00148C                     l707:
  5380   00148C  500E               	movf	___fladd@aexp^0,w,c
  5381   00148E  B4D8               	btfsc	status,2,c
  5382   001490  EF4C  F00A         	goto	u2621
  5383   001494  EF4E  F00A         	goto	u2620
  5384   001498                     u2621:
  5385   001498  EF79  F00A         	goto	l2692
  5386   00149C                     u2620:
  5387   00149C  0E01               	movlw	1
  5388   00149E  2601               	addwf	___fladd@b^0,f,c
  5389   0014A0  0E00               	movlw	0
  5390   0014A2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5391   0014A4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5392   0014A6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5393   0014A8  A004               	btfss	(___fladd@b+3)^0,0,c
  5394   0014AA  EF59  F00A         	goto	u2631
  5395   0014AE  EF5B  F00A         	goto	u2630
  5396   0014B2                     u2631:
  5397   0014B2  EF79  F00A         	goto	l2692
  5398   0014B6                     u2630:
  5399   0014B6  C001  F009         	movff	___fladd@b,??___fladd
  5400   0014BA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5401   0014BE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5402   0014C2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5403   0014C6  340C               	rlcf	(??___fladd+3)^0,w,c
  5404   0014C8  320C               	rrcf	(??___fladd+3)^0,f,c
  5405   0014CA  320B               	rrcf	(??___fladd+2)^0,f,c
  5406   0014CC  320A               	rrcf	(??___fladd+1)^0,f,c
  5407   0014CE  3209               	rrcf	??___fladd^0,f,c
  5408   0014D0  C009  F001         	movff	??___fladd,___fladd@b
  5409   0014D4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5410   0014D8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5411   0014DC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5412   0014E0  280F               	incf	___fladd@bexp^0,w,c
  5413   0014E2  B4D8               	btfsc	status,2,c
  5414   0014E4  EF76  F00A         	goto	u2641
  5415   0014E8  EF78  F00A         	goto	u2640
  5416   0014EC                     u2641:
  5417   0014EC  EF79  F00A         	goto	l2692
  5418   0014F0                     u2640:
  5419   0014F0  2A0F               	incf	___fladd@bexp^0,f,c
  5420   0014F2                     l2692:
  5421   0014F2  280F               	incf	___fladd@bexp^0,w,c
  5422   0014F4  B4D8               	btfsc	status,2,c
  5423   0014F6  EF7F  F00A         	goto	u2651
  5424   0014FA  EF81  F00A         	goto	u2650
  5425   0014FE                     u2651:
  5426   0014FE  EF89  F00A         	goto	l2696
  5427   001502                     u2650:
  5428   001502  500F               	movf	___fladd@bexp^0,w,c
  5429   001504  A4D8               	btfss	status,2,c
  5430   001506  EF87  F00A         	goto	u2661
  5431   00150A  EF89  F00A         	goto	u2660
  5432   00150E                     u2661:
  5433   00150E  EF9B  F00A         	goto	l2700
  5434   001512                     u2660:
  5435   001512                     l2696:
  5436   001512  0E00               	movlw	0
  5437   001514  6E01               	movwf	___fladd@b^0,c
  5438   001516  0E00               	movlw	0
  5439   001518  6E02               	movwf	(___fladd@b+1)^0,c
  5440   00151A  0E00               	movlw	0
  5441   00151C  6E03               	movwf	(___fladd@b+2)^0,c
  5442   00151E  0E00               	movlw	0
  5443   001520  6E04               	movwf	(___fladd@b+3)^0,c
  5444   001522  500F               	movf	___fladd@bexp^0,w,c
  5445   001524  A4D8               	btfss	status,2,c
  5446   001526  EF97  F00A         	goto	u2671
  5447   00152A  EF99  F00A         	goto	u2670
  5448   00152E                     u2671:
  5449   00152E  EF9B  F00A         	goto	l2700
  5450   001532                     u2670:
  5451   001532  0E00               	movlw	0
  5452   001534  6E0D               	movwf	___fladd@signs^0,c
  5453   001536                     l2700:
  5454   001536  A00F               	btfss	___fladd@bexp^0,0,c
  5455   001538  EFA0  F00A         	goto	u2681
  5456   00153C  EFA2  F00A         	goto	u2680
  5457   001540                     u2681:
  5458   001540  EFA5  F00A         	goto	l2704
  5459   001544                     u2680:
  5460   001544  8E03               	bsf	(___fladd@b+2)^0,7,c
  5461   001546  EFA6  F00A         	goto	l2706
  5462   00154A                     l2704:
  5463   00154A  9E03               	bcf	(___fladd@b+2)^0,7,c
  5464   00154C                     l2706:
  5465   00154C  90D8               	bcf	status,0,c
  5466   00154E  300F               	rrcf	___fladd@bexp^0,w,c
  5467   001550  6E04               	movwf	(___fladd@b+3)^0,c
  5468   001552  AE0D               	btfss	___fladd@signs^0,7,c
  5469   001554  EFAE  F00A         	goto	u2691
  5470   001558  EFB0  F00A         	goto	u2690
  5471   00155C                     u2691:
  5472   00155C  EFB1  F00A         	goto	l2712
  5473   001560                     u2690:
  5474   001560  8E04               	bsf	(___fladd@b+3)^0,7,c
  5475   001562                     l2712:
  5476   001562  C001  F001         	movff	___fladd@b,?___fladd
  5477   001566  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5478   00156A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5479   00156E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5480   001572                     l690:
  5481   001572  0012               	return		;funcret
  5482   001574                     __end_of___fladd:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function ___flneg *****************
  5486 ;; Defined at:
  5487 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  f1              4    0[COMRAM] unsigned char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  4    0[COMRAM] unsigned char 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5501 ;;      Params:         4       0       0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0
  5504 ;;      Totals:         4       0       0       0       0       0       0
  5505 ;;Total ram usage:        4 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_efgtoa
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text19
  5515   003532                     __ptext19:
  5516                           	callstack 0
  5517   003532                     ___flneg:
  5518                           	callstack 25
  5519   003532  5001               	movf	___flneg@f1^0,w,c
  5520   003534  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5521   003536  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5522   003538  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5523   00353A  B4D8               	btfsc	status,2,c
  5524   00353C  EFA2  F01A         	goto	u3331
  5525   003540  EFA4  F01A         	goto	u3330
  5526   003544                     u3331:
  5527   003544  EFAC  F01A         	goto	l3126
  5528   003548                     u3330:
  5529   003548  0E00               	movlw	0
  5530   00354A  1A01               	xorwf	___flneg@f1^0,f,c
  5531   00354C  0E00               	movlw	0
  5532   00354E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5533   003550  0E00               	movlw	0
  5534   003552  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5535   003554  0E80               	movlw	128
  5536   003556  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5537   003558                     l3126:
  5538   003558  C001  F001         	movff	___flneg@f1,?___flneg
  5539   00355C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5540   003560  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5541   003564  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5542   003568  0012               	return		;funcret
  5543   00356A                     __end_of___flneg:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function ___flge *****************
  5547 ;; Defined at:
  5548 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  ff1             4   39[COMRAM] unsigned char 
  5551 ;;  ff2             4   43[COMRAM] unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;		None               void
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5563 ;;      Params:         8       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0
  5565 ;;      Temps:          4       0       0       0       0       0       0
  5566 ;;      Totals:        12       0       0       0       0       0       0
  5567 ;;Total ram usage:       12 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_logic_CONTROL
  5573 ;;		_efgtoa
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text20
  5578   002974                     __ptext20:
  5579                           	callstack 0
  5580   002974                     ___flge:
  5581                           	callstack 29
  5582   002974  0E00               	movlw	0
  5583   002976  1428               	andwf	___flge@ff1^0,w,c
  5584   002978  6E30               	movwf	??___flge^0,c
  5585   00297A  0E00               	movlw	0
  5586   00297C  1429               	andwf	(___flge@ff1+1)^0,w,c
  5587   00297E  6E31               	movwf	(??___flge+1)^0,c
  5588   002980  0E80               	movlw	128
  5589   002982  142A               	andwf	(___flge@ff1+2)^0,w,c
  5590   002984  6E32               	movwf	(??___flge+2)^0,c
  5591   002986  0E7F               	movlw	127
  5592   002988  142B               	andwf	(___flge@ff1+3)^0,w,c
  5593   00298A  6E33               	movwf	(??___flge+3)^0,c
  5594   00298C  5030               	movf	??___flge^0,w,c
  5595   00298E  1031               	iorwf	(??___flge+1)^0,w,c
  5596   002990  1032               	iorwf	(??___flge+2)^0,w,c
  5597   002992  1033               	iorwf	(??___flge+3)^0,w,c
  5598   002994  A4D8               	btfss	status,2,c
  5599   002996  EFCF  F014         	goto	u3281
  5600   00299A  EFD1  F014         	goto	u3280
  5601   00299E                     u3281:
  5602   00299E  EFD9  F014         	goto	l3104
  5603   0029A2                     u3280:
  5604   0029A2  0E00               	movlw	0
  5605   0029A4  6E28               	movwf	___flge@ff1^0,c
  5606   0029A6  0E00               	movlw	0
  5607   0029A8  6E29               	movwf	(___flge@ff1+1)^0,c
  5608   0029AA  0E00               	movlw	0
  5609   0029AC  6E2A               	movwf	(___flge@ff1+2)^0,c
  5610   0029AE  0E00               	movlw	0
  5611   0029B0  6E2B               	movwf	(___flge@ff1+3)^0,c
  5612   0029B2                     l3104:
  5613   0029B2  0E00               	movlw	0
  5614   0029B4  142C               	andwf	___flge@ff2^0,w,c
  5615   0029B6  6E30               	movwf	??___flge^0,c
  5616   0029B8  0E00               	movlw	0
  5617   0029BA  142D               	andwf	(___flge@ff2+1)^0,w,c
  5618   0029BC  6E31               	movwf	(??___flge+1)^0,c
  5619   0029BE  0E80               	movlw	128
  5620   0029C0  142E               	andwf	(___flge@ff2+2)^0,w,c
  5621   0029C2  6E32               	movwf	(??___flge+2)^0,c
  5622   0029C4  0E7F               	movlw	127
  5623   0029C6  142F               	andwf	(___flge@ff2+3)^0,w,c
  5624   0029C8  6E33               	movwf	(??___flge+3)^0,c
  5625   0029CA  5030               	movf	??___flge^0,w,c
  5626   0029CC  1031               	iorwf	(??___flge+1)^0,w,c
  5627   0029CE  1032               	iorwf	(??___flge+2)^0,w,c
  5628   0029D0  1033               	iorwf	(??___flge+3)^0,w,c
  5629   0029D2  A4D8               	btfss	status,2,c
  5630   0029D4  EFEE  F014         	goto	u3291
  5631   0029D8  EFF0  F014         	goto	u3290
  5632   0029DC                     u3291:
  5633   0029DC  EFF8  F014         	goto	l3108
  5634   0029E0                     u3290:
  5635   0029E0  0E00               	movlw	0
  5636   0029E2  6E2C               	movwf	___flge@ff2^0,c
  5637   0029E4  0E00               	movlw	0
  5638   0029E6  6E2D               	movwf	(___flge@ff2+1)^0,c
  5639   0029E8  0E00               	movlw	0
  5640   0029EA  6E2E               	movwf	(___flge@ff2+2)^0,c
  5641   0029EC  0E00               	movlw	0
  5642   0029EE  6E2F               	movwf	(___flge@ff2+3)^0,c
  5643   0029F0                     l3108:
  5644   0029F0  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5645   0029F2  EFFD  F014         	goto	u3301
  5646   0029F6  EFFF  F014         	goto	u3300
  5647   0029FA                     u3301:
  5648   0029FA  EF08  F015         	goto	l3112
  5649   0029FE                     u3300:
  5650   0029FE  6C28               	negf	___flge@ff1^0,c
  5651   002A00  1E29               	comf	(___flge@ff1+1)^0,f,c
  5652   002A02  B0D8               	btfsc	status,0,c
  5653   002A04  2A29               	incf	(___flge@ff1+1)^0,f,c
  5654   002A06  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5655   002A08  B0D8               	btfsc	status,0,c
  5656   002A0A  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5657   002A0C  0E80               	movlw	128
  5658   002A0E  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5659   002A10                     l3112:
  5660   002A10  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5661   002A12  EF0D  F015         	goto	u3311
  5662   002A16  EF0F  F015         	goto	u3310
  5663   002A1A                     u3311:
  5664   002A1A  EF18  F015         	goto	l418
  5665   002A1E                     u3310:
  5666   002A1E  6C2C               	negf	___flge@ff2^0,c
  5667   002A20  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5668   002A22  B0D8               	btfsc	status,0,c
  5669   002A24  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5670   002A26  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5671   002A28  B0D8               	btfsc	status,0,c
  5672   002A2A  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5673   002A2C  0E80               	movlw	128
  5674   002A2E  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5675   002A30                     l418:
  5676   002A30  0E00               	movlw	0
  5677   002A32  1A28               	xorwf	___flge@ff1^0,f,c
  5678   002A34  0E00               	movlw	0
  5679   002A36  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5680   002A38  0E00               	movlw	0
  5681   002A3A  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5682   002A3C  0E80               	movlw	128
  5683   002A3E  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5684   002A40  0E00               	movlw	0
  5685   002A42  1A2C               	xorwf	___flge@ff2^0,f,c
  5686   002A44  0E00               	movlw	0
  5687   002A46  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5688   002A48  0E00               	movlw	0
  5689   002A4A  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5690   002A4C  0E80               	movlw	128
  5691   002A4E  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5692   002A50  502C               	movf	___flge@ff2^0,w,c
  5693   002A52  5C28               	subwf	___flge@ff1^0,w,c
  5694   002A54  502D               	movf	(___flge@ff2+1)^0,w,c
  5695   002A56  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5696   002A58  502E               	movf	(___flge@ff2+2)^0,w,c
  5697   002A5A  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5698   002A5C  502F               	movf	(___flge@ff2+3)^0,w,c
  5699   002A5E  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5700   002A60  B0D8               	btfsc	status,0,c
  5701   002A62  EF35  F015         	goto	u3321
  5702   002A66  EF37  F015         	goto	u3320
  5703   002A6A                     u3321:
  5704   002A6A  EF3A  F015         	goto	l3118
  5705   002A6E                     u3320:
  5706   002A6E  90D8               	bcf	status,0,c
  5707   002A70  EF3B  F015         	goto	l423
  5708   002A74                     l3118:
  5709   002A74  80D8               	bsf	status,0,c
  5710   002A76                     l423:
  5711   002A76  0012               	return		;funcret
  5712   002A78                     __end_of___flge:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function ___fleq *****************
  5716 ;; Defined at:
  5717 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  ff1             4    0[COMRAM] unsigned char 
  5720 ;;  ff2             4    4[COMRAM] unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5732 ;;      Params:         8       0       0       0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0
  5734 ;;      Temps:          4       0       0       0       0       0       0
  5735 ;;      Totals:        12       0       0       0       0       0       0
  5736 ;;Total ram usage:       12 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_efgtoa
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text21
  5746   002F5C                     __ptext21:
  5747                           	callstack 0
  5748   002F5C                     ___fleq:
  5749                           	callstack 25
  5750   002F5C  0E00               	movlw	0
  5751   002F5E  1401               	andwf	___fleq@ff1^0,w,c
  5752   002F60  6E09               	movwf	??___fleq^0,c
  5753   002F62  0E00               	movlw	0
  5754   002F64  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5755   002F66  6E0A               	movwf	(??___fleq+1)^0,c
  5756   002F68  0E80               	movlw	128
  5757   002F6A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5758   002F6C  6E0B               	movwf	(??___fleq+2)^0,c
  5759   002F6E  0E7F               	movlw	127
  5760   002F70  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5761   002F72  6E0C               	movwf	(??___fleq+3)^0,c
  5762   002F74  5009               	movf	??___fleq^0,w,c
  5763   002F76  100A               	iorwf	(??___fleq+1)^0,w,c
  5764   002F78  100B               	iorwf	(??___fleq+2)^0,w,c
  5765   002F7A  100C               	iorwf	(??___fleq+3)^0,w,c
  5766   002F7C  A4D8               	btfss	status,2,c
  5767   002F7E  EFC3  F017         	goto	u3251
  5768   002F82  EFC5  F017         	goto	u3250
  5769   002F86                     u3251:
  5770   002F86  EFCD  F017         	goto	l3088
  5771   002F8A                     u3250:
  5772   002F8A  0E00               	movlw	0
  5773   002F8C  6E01               	movwf	___fleq@ff1^0,c
  5774   002F8E  0E00               	movlw	0
  5775   002F90  6E02               	movwf	(___fleq@ff1+1)^0,c
  5776   002F92  0E00               	movlw	0
  5777   002F94  6E03               	movwf	(___fleq@ff1+2)^0,c
  5778   002F96  0E00               	movlw	0
  5779   002F98  6E04               	movwf	(___fleq@ff1+3)^0,c
  5780   002F9A                     l3088:
  5781   002F9A  0E00               	movlw	0
  5782   002F9C  1405               	andwf	___fleq@ff2^0,w,c
  5783   002F9E  6E09               	movwf	??___fleq^0,c
  5784   002FA0  0E00               	movlw	0
  5785   002FA2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5786   002FA4  6E0A               	movwf	(??___fleq+1)^0,c
  5787   002FA6  0E80               	movlw	128
  5788   002FA8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5789   002FAA  6E0B               	movwf	(??___fleq+2)^0,c
  5790   002FAC  0E7F               	movlw	127
  5791   002FAE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5792   002FB0  6E0C               	movwf	(??___fleq+3)^0,c
  5793   002FB2  5009               	movf	??___fleq^0,w,c
  5794   002FB4  100A               	iorwf	(??___fleq+1)^0,w,c
  5795   002FB6  100B               	iorwf	(??___fleq+2)^0,w,c
  5796   002FB8  100C               	iorwf	(??___fleq+3)^0,w,c
  5797   002FBA  A4D8               	btfss	status,2,c
  5798   002FBC  EFE2  F017         	goto	u3261
  5799   002FC0  EFE4  F017         	goto	u3260
  5800   002FC4                     u3261:
  5801   002FC4  EFEC  F017         	goto	l3092
  5802   002FC8                     u3260:
  5803   002FC8  0E00               	movlw	0
  5804   002FCA  6E05               	movwf	___fleq@ff2^0,c
  5805   002FCC  0E00               	movlw	0
  5806   002FCE  6E06               	movwf	(___fleq@ff2+1)^0,c
  5807   002FD0  0E00               	movlw	0
  5808   002FD2  6E07               	movwf	(___fleq@ff2+2)^0,c
  5809   002FD4  0E00               	movlw	0
  5810   002FD6  6E08               	movwf	(___fleq@ff2+3)^0,c
  5811   002FD8                     l3092:
  5812   002FD8  5005               	movf	___fleq@ff2^0,w,c
  5813   002FDA  1801               	xorwf	___fleq@ff1^0,w,c
  5814   002FDC  E10F               	bnz	u3270
  5815   002FDE  5006               	movf	(___fleq@ff2+1)^0,w,c
  5816   002FE0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5817   002FE2  E10C               	bnz	u3270
  5818   002FE4  5007               	movf	(___fleq@ff2+2)^0,w,c
  5819   002FE6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5820   002FE8  E109               	bnz	u3270
  5821   002FEA  5008               	movf	(___fleq@ff2+3)^0,w,c
  5822   002FEC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5823   002FEE  B4D8               	btfsc	status,2,c
  5824   002FF0  EFFC  F017         	goto	u3271
  5825   002FF4  EFFE  F017         	goto	u3270
  5826   002FF8                     u3271:
  5827   002FF8  EF01  F018         	goto	l3096
  5828   002FFC                     u3270:
  5829   002FFC  90D8               	bcf	status,0,c
  5830   002FFE  EF02  F018         	goto	l412
  5831   003002                     l3096:
  5832   003002  80D8               	bsf	status,0,c
  5833   003004                     l412:
  5834   003004  0012               	return		;funcret
  5835   003006                     __end_of___fleq:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function _dtoa *****************
  5839 ;; Defined at:
  5840 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  5843 ;;		 -> sprintf@f(12), 
  5844 ;;  d               2   23[COMRAM] int 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  i               2   32[COMRAM] int 
  5847 ;;  w               2   29[COMRAM] int 
  5848 ;;  p               2   27[COMRAM] int 
  5849 ;;  s               1   31[COMRAM] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5859 ;;      Params:         3       0       0       0       0       0       0
  5860 ;;      Locals:         9       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0
  5862 ;;      Totals:        12       0       0       0       0       0       0
  5863 ;;Total ram usage:       12 bytes
  5864 ;; Hardware stack levels used: 1
  5865 ;; Hardware stack levels required when called: 4
  5866 ;; This function calls:
  5867 ;;		___awdiv
  5868 ;;		___awmod
  5869 ;;		_abs
  5870 ;;		_pad
  5871 ;; This function is called by:
  5872 ;;		_vfpfcnvrt
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text22
  5877   0025B2                     __ptext22:
  5878                           	callstack 0
  5879   0025B2                     _dtoa:
  5880                           	callstack 22
  5881   0025B2                     
  5882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  5883   0025B2  BE19               	btfsc	(dtoa@d+1)^0,7,c
  5884   0025B4  EFDE  F012         	goto	u4601
  5885   0025B8  EFE1  F012         	goto	u4600
  5886   0025BC                     u4601:
  5887   0025BC  0E01               	movlw	1
  5888   0025BE  EFE2  F012         	goto	u4610
  5889   0025C2                     u4600:
  5890   0025C2  0E00               	movlw	0
  5891   0025C4                     u4610:
  5892   0025C4  6E20               	movwf	dtoa@s^0,c
  5893                           
  5894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  5895   0025C6  BE7E               	btfsc	(_prec+1)^0,7,c
  5896   0025C8  EFE8  F012         	goto	u4621
  5897   0025CC  EFEA  F012         	goto	u4620
  5898   0025D0                     u4621:
  5899   0025D0  EFEB  F012         	goto	l3974
  5900   0025D4                     u4620:
  5901   0025D4                     
  5902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  5903   0025D4  927F               	bcf	_flags^0,1,c
  5904   0025D6                     l3974:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  5907   0025D6  BE7E               	btfsc	(_prec+1)^0,7,c
  5908   0025D8  EFF2  F012         	goto	u4630
  5909   0025DC  EFF0  F012         	goto	u4631
  5910   0025E0                     u4631:
  5911   0025E0  EFF8  F012         	goto	l871
  5912   0025E4                     u4630:
  5913   0025E4  0E00               	movlw	0
  5914   0025E6  6E1D               	movwf	(dtoa@p+1)^0,c
  5915   0025E8  0E01               	movlw	1
  5916   0025EA  6E1C               	movwf	dtoa@p^0,c
  5917   0025EC  EFFC  F012         	goto	l873
  5918   0025F0                     l871:
  5919   0025F0  C07D  F01C         	movff	_prec,dtoa@p
  5920   0025F4  C07E  F01D         	movff	_prec+1,dtoa@p+1
  5921   0025F8                     l873:
  5922                           
  5923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  5924   0025F8  C07B  F01E         	movff	_width,dtoa@w
  5925   0025FC  C07C  F01F         	movff	_width+1,dtoa@w+1
  5926   002600                     
  5927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  5928   002600  5020               	movf	dtoa@s^0,w,c
  5929   002602  B4D8               	btfsc	status,2,c
  5930   002604  EF06  F013         	goto	u4641
  5931   002608  EF08  F013         	goto	u4640
  5932   00260C                     u4641:
  5933   00260C  EF1F  F013         	goto	l874
  5934   002610                     u4640:
  5935   002610                     
  5936                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  5937   002610  061E               	decf	dtoa@w^0,f,c
  5938   002612  A0D8               	btfss	status,0,c
  5939   002614  061F               	decf	(dtoa@w+1)^0,f,c
  5940   002616                     
  5941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  5942   002616  5020               	movf	dtoa@s^0,w,c
  5943   002618  A4D8               	btfss	status,2,c
  5944   00261A  EF11  F013         	goto	u4651
  5945   00261E  EF13  F013         	goto	u4650
  5946   002622                     u4651:
  5947   002622  EF19  F013         	goto	l3986
  5948   002626                     u4650:
  5949   002626  0E00               	movlw	0
  5950   002628  6E1B               	movwf	(_dtoa$1115+1)^0,c
  5951   00262A  0E2B               	movlw	43
  5952   00262C  6E1A               	movwf	_dtoa$1115^0,c
  5953   00262E  EF1D  F013         	goto	l3988
  5954   002632                     l3986:
  5955   002632  0E00               	movlw	0
  5956   002634  6E1B               	movwf	(_dtoa$1115+1)^0,c
  5957   002636  0E2D               	movlw	45
  5958   002638  6E1A               	movwf	_dtoa$1115^0,c
  5959   00263A                     l3988:
  5960   00263A  C01A  F020         	movff	_dtoa$1115,dtoa@s
  5961   00263E                     l874:
  5962                           
  5963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  5964   00263E  0E00               	movlw	0
  5965   002640  6E22               	movwf	(dtoa@i+1)^0,c
  5966   002642  0E4F               	movlw	79
  5967   002644  6E21               	movwf	dtoa@i^0,c
  5968   002646                     
  5969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  5970   002646  0E00               	movlw	0
  5971   002648  0101               	movlb	1	; () banked
  5972   00264A  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5973                           
  5974                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5975   00264C  EF58  F013         	goto	l4002
  5976   002650                     l3992:
  5977                           
  5978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  5979   002650  0621               	decf	dtoa@i^0,f,c
  5980   002652  A0D8               	btfss	status,0,c
  5981   002654  0622               	decf	(dtoa@i+1)^0,f,c
  5982   002656                     
  5983                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5984   002656  0E00               	movlw	low _dbuf
  5985   002658  2421               	addwf	dtoa@i^0,w,c
  5986   00265A  6ED9               	movwf	fsr2l,c
  5987   00265C  0E01               	movlw	high _dbuf
  5988   00265E  2022               	addwfc	(dtoa@i+1)^0,w,c
  5989   002660  6EDA               	movwf	fsr2h,c
  5990   002662  C018  F001         	movff	dtoa@d,___awmod@dividend
  5991   002666  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  5992   00266A  0E00               	movlw	0
  5993   00266C  6E04               	movwf	(___awmod@divisor+1)^0,c
  5994   00266E  0E0A               	movlw	10
  5995   002670  6E03               	movwf	___awmod@divisor^0,c
  5996   002672  EC56  F017         	call	___awmod	;wreg free
  5997   002676  C001  F007         	movff	?___awmod,abs@a
  5998   00267A  C002  F008         	movff	?___awmod+1,abs@a+1
  5999   00267E  ECB5  F01A         	call	_abs	;wreg free
  6000   002682  5007               	movf	?_abs^0,w,c
  6001   002684  0F30               	addlw	48
  6002   002686  6EDF               	movwf	indf2,c
  6003   002688                     
  6004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  6005   002688  061C               	decf	dtoa@p^0,f,c
  6006   00268A  A0D8               	btfss	status,0,c
  6007   00268C  061D               	decf	(dtoa@p+1)^0,f,c
  6008   00268E                     
  6009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  6010   00268E  061E               	decf	dtoa@w^0,f,c
  6011   002690  A0D8               	btfss	status,0,c
  6012   002692  061F               	decf	(dtoa@w+1)^0,f,c
  6013   002694                     
  6014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6015   002694  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6016   002698  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6017   00269C  0E00               	movlw	0
  6018   00269E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6019   0026A0  0E0A               	movlw	10
  6020   0026A2  6E03               	movwf	___awdiv@divisor^0,c
  6021   0026A4  EC97  F016         	call	___awdiv	;wreg free
  6022   0026A8  C001  F018         	movff	?___awdiv,dtoa@d
  6023   0026AC  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6024   0026B0                     l4002:
  6025                           
  6026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6027   0026B0  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6028   0026B2  EF63  F013         	goto	u4661
  6029   0026B6  5022               	movf	(dtoa@i+1)^0,w,c
  6030   0026B8  E108               	bnz	u4660
  6031   0026BA  0421               	decf	dtoa@i^0,w,c
  6032   0026BC  A0D8               	btfss	status,0,c
  6033   0026BE  EF63  F013         	goto	u4661
  6034   0026C2  EF65  F013         	goto	u4660
  6035   0026C6                     u4661:
  6036   0026C6  EF8F  F013         	goto	l4012
  6037   0026CA                     u4660:
  6038   0026CA  5018               	movf	dtoa@d^0,w,c
  6039   0026CC  1019               	iorwf	(dtoa@d+1)^0,w,c
  6040   0026CE  A4D8               	btfss	status,2,c
  6041   0026D0  EF6C  F013         	goto	u4671
  6042   0026D4  EF6E  F013         	goto	u4670
  6043   0026D8                     u4671:
  6044   0026D8  EF28  F013         	goto	l3992
  6045   0026DC                     u4670:
  6046   0026DC  BE1D               	btfsc	(dtoa@p+1)^0,7,c
  6047   0026DE  EF7B  F013         	goto	u4680
  6048   0026E2  501D               	movf	(dtoa@p+1)^0,w,c
  6049   0026E4  E106               	bnz	u4681
  6050   0026E6  041C               	decf	dtoa@p^0,w,c
  6051   0026E8  B0D8               	btfsc	status,0,c
  6052   0026EA  EF79  F013         	goto	u4681
  6053   0026EE  EF7B  F013         	goto	u4680
  6054   0026F2                     u4681:
  6055   0026F2  EF28  F013         	goto	l3992
  6056   0026F6                     u4680:
  6057   0026F6  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  6058   0026F8  EF86  F013         	goto	u4691
  6059   0026FC  501F               	movf	(dtoa@w+1)^0,w,c
  6060   0026FE  E108               	bnz	u4690
  6061   002700  041E               	decf	dtoa@w^0,w,c
  6062   002702  A0D8               	btfss	status,0,c
  6063   002704  EF86  F013         	goto	u4691
  6064   002708  EF88  F013         	goto	u4690
  6065   00270C                     u4691:
  6066   00270C  EF8F  F013         	goto	l4012
  6067   002710                     u4690:
  6068   002710  B27F               	btfsc	_flags^0,1,c
  6069   002712  EF8D  F013         	goto	u4701
  6070   002716  EF8F  F013         	goto	u4700
  6071   00271A                     u4701:
  6072   00271A  EF28  F013         	goto	l3992
  6073   00271E                     u4700:
  6074   00271E                     l4012:
  6075                           
  6076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6077   00271E  5020               	movf	dtoa@s^0,w,c
  6078   002720  B4D8               	btfsc	status,2,c
  6079   002722  EF95  F013         	goto	u4711
  6080   002726  EF97  F013         	goto	u4710
  6081   00272A                     u4711:
  6082   00272A  EFA2  F013         	goto	l4018
  6083   00272E                     u4710:
  6084   00272E                     
  6085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  6086   00272E  0621               	decf	dtoa@i^0,f,c
  6087   002730  A0D8               	btfss	status,0,c
  6088   002732  0622               	decf	(dtoa@i+1)^0,f,c
  6089   002734                     
  6090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6091   002734  0E00               	movlw	low _dbuf
  6092   002736  2421               	addwf	dtoa@i^0,w,c
  6093   002738  6ED9               	movwf	fsr2l,c
  6094   00273A  0E01               	movlw	high _dbuf
  6095   00273C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6096   00273E  6EDA               	movwf	fsr2h,c
  6097   002740  C020  FFDF         	movff	dtoa@s,indf2
  6098   002744                     l4018:
  6099                           
  6100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6101   002744  C017  F00F         	movff	dtoa@fp,pad@fp
  6102   002748  0E00               	movlw	low _dbuf
  6103   00274A  2421               	addwf	dtoa@i^0,w,c
  6104   00274C  6E10               	movwf	pad@buf^0,c
  6105   00274E  0E01               	movlw	high _dbuf
  6106   002750  2022               	addwfc	(dtoa@i+1)^0,w,c
  6107   002752  6E11               	movwf	(pad@buf+1)^0,c
  6108   002754  C01E  F012         	movff	dtoa@w,pad@p
  6109   002758  C01F  F013         	movff	dtoa@w+1,pad@p+1
  6110   00275C  EC3E  F019         	call	_pad	;wreg free
  6111   002760  0012               	return		;funcret
  6112   002762                     __end_of_dtoa:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _pad *****************
  6116 ;; Defined at:
  6117 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6120 ;;		 -> sprintf@f(12), 
  6121 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6122 ;;		 -> dbuf(80), 
  6123 ;;  p               2   17[COMRAM] int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  i               2   20[COMRAM] int 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6135 ;;      Params:         5       0       0       0       0       0       0
  6136 ;;      Locals:         2       0       0       0       0       0       0
  6137 ;;      Temps:          1       0       0       0       0       0       0
  6138 ;;      Totals:         8       0       0       0       0       0       0
  6139 ;;Total ram usage:        8 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 3
  6142 ;; This function calls:
  6143 ;;		_fputc
  6144 ;;		_fputs
  6145 ;; This function is called by:
  6146 ;;		_dtoa
  6147 ;;		_efgtoa
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text23
  6152   00327C                     __ptext23:
  6153                           	callstack 0
  6154   00327C                     _pad:
  6155                           	callstack 22
  6156   00327C                     
  6157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6158   00327C  A07F               	btfss	_flags^0,0,c
  6159   00327E  EF43  F019         	goto	u4541
  6160   003282  EF45  F019         	goto	u4540
  6161   003286                     u4541:
  6162   003286  EF4D  F019         	goto	l3942
  6163   00328A                     u4540:
  6164   00328A                     
  6165                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6166   00328A  C010  F009         	movff	pad@buf,fputs@s
  6167   00328E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6168   003292  C00F  F00B         	movff	pad@fp,fputs@fp
  6169   003296  EC3D  F01A         	call	_fputs	;wreg free
  6170   00329A                     l3942:
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6173   00329A  BE13               	btfsc	(pad@p+1)^0,7,c
  6174   00329C  EF54  F019         	goto	u4550
  6175   0032A0  EF52  F019         	goto	u4551
  6176   0032A4                     u4551:
  6177   0032A4  EF58  F019         	goto	l861
  6178   0032A8                     u4550:
  6179   0032A8                     
  6180                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6181   0032A8  0E00               	movlw	0
  6182   0032AA  6E13               	movwf	(pad@p+1)^0,c
  6183   0032AC  0E00               	movlw	0
  6184   0032AE  6E12               	movwf	pad@p^0,c
  6185   0032B0                     l861:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6188   0032B0  0E00               	movlw	0
  6189   0032B2  6E16               	movwf	(pad@i+1)^0,c
  6190   0032B4  0E00               	movlw	0
  6191   0032B6  6E15               	movwf	pad@i^0,c
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6194   0032B8  EF68  F019         	goto	l3950
  6195   0032BC                     l3946:
  6196                           
  6197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6198   0032BC  0E00               	movlw	0
  6199   0032BE  6E02               	movwf	(fputc@c+1)^0,c
  6200   0032C0  0E20               	movlw	32
  6201   0032C2  6E01               	movwf	fputc@c^0,c
  6202   0032C4  C00F  F003         	movff	pad@fp,fputc@fp
  6203   0032C8  ECF9  F016         	call	_fputc	;wreg free
  6204   0032CC                     
  6205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6206   0032CC  4A15               	infsnz	pad@i^0,f,c
  6207   0032CE  2A16               	incf	(pad@i+1)^0,f,c
  6208   0032D0                     l3950:
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6211   0032D0  5012               	movf	pad@p^0,w,c
  6212   0032D2  5C15               	subwf	pad@i^0,w,c
  6213   0032D4  5016               	movf	(pad@i+1)^0,w,c
  6214   0032D6  0A80               	xorlw	128
  6215   0032D8  6E14               	movwf	??_pad^0,c
  6216   0032DA  5013               	movf	(pad@p+1)^0,w,c
  6217   0032DC  0A80               	xorlw	128
  6218   0032DE  5814               	subwfb	??_pad^0,w,c
  6219   0032E0  A0D8               	btfss	status,0,c
  6220   0032E2  EF75  F019         	goto	u4561
  6221   0032E6  EF77  F019         	goto	u4560
  6222   0032EA                     u4561:
  6223   0032EA  EF5E  F019         	goto	l3946
  6224   0032EE                     u4560:
  6225   0032EE                     
  6226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6227   0032EE  B07F               	btfsc	_flags^0,0,c
  6228   0032F0  EF7C  F019         	goto	u4571
  6229   0032F4  EF7E  F019         	goto	u4570
  6230   0032F8                     u4571:
  6231   0032F8  EF86  F019         	goto	l866
  6232   0032FC                     u4570:
  6233   0032FC                     
  6234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6235   0032FC  C010  F009         	movff	pad@buf,fputs@s
  6236   003300  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6237   003304  C00F  F00B         	movff	pad@fp,fputs@fp
  6238   003308  EC3D  F01A         	call	_fputs	;wreg free
  6239   00330C                     l866:
  6240   00330C  0012               	return		;funcret
  6241   00330E                     __end_of_pad:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _fputs *****************
  6245 ;; Defined at:
  6246 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6249 ;;		 -> dbuf(80), 
  6250 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6251 ;;		 -> sprintf@f(12), 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  i               2   12[COMRAM] int 
  6254 ;;  c               1   11[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    8[COMRAM] int 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6264 ;;      Params:         3       0       0       0       0       0       0
  6265 ;;      Locals:         3       0       0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0
  6267 ;;      Totals:         6       0       0       0       0       0       0
  6268 ;;Total ram usage:        6 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 2
  6271 ;; This function calls:
  6272 ;;		_fputc
  6273 ;; This function is called by:
  6274 ;;		_pad
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text24
  6279   00347A                     __ptext24:
  6280                           	callstack 0
  6281   00347A                     _fputs:
  6282                           	callstack 22
  6283   00347A  0E00               	movlw	0
  6284   00347C  6E0E               	movwf	(fputs@i+1)^0,c
  6285   00347E  0E00               	movlw	0
  6286   003480  6E0D               	movwf	fputs@i^0,c
  6287   003482  EF4C  F01A         	goto	l3936
  6288   003486                     l3932:
  6289   003486  C00C  F001         	movff	fputs@c,fputc@c
  6290   00348A  6A02               	clrf	(fputc@c+1)^0,c
  6291   00348C  C00B  F003         	movff	fputs@fp,fputc@fp
  6292   003490  ECF9  F016         	call	_fputc	;wreg free
  6293   003494  4A0D               	infsnz	fputs@i^0,f,c
  6294   003496  2A0E               	incf	(fputs@i+1)^0,f,c
  6295   003498                     l3936:
  6296   003498  500D               	movf	fputs@i^0,w,c
  6297   00349A  2409               	addwf	fputs@s^0,w,c
  6298   00349C  6ED9               	movwf	fsr2l,c
  6299   00349E  500E               	movf	(fputs@i+1)^0,w,c
  6300   0034A0  200A               	addwfc	(fputs@s+1)^0,w,c
  6301   0034A2  6EDA               	movwf	fsr2h,c
  6302   0034A4  50DF               	movf	indf2,w,c
  6303   0034A6  6E0C               	movwf	fputs@c^0,c
  6304   0034A8  500C               	movf	fputs@c^0,w,c
  6305   0034AA  A4D8               	btfss	status,2,c
  6306   0034AC  EF5A  F01A         	goto	u4531
  6307   0034B0  EF5C  F01A         	goto	u4530
  6308   0034B4                     u4531:
  6309   0034B4  EF43  F01A         	goto	l3932
  6310   0034B8                     u4530:
  6311   0034B8  0012               	return		;funcret
  6312   0034BA                     __end_of_fputs:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _fputc *****************
  6316 ;; Defined at:
  6317 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  c               2    0[COMRAM] int 
  6320 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6321 ;;		 -> sprintf@f(12), 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2    0[COMRAM] int 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6333 ;;      Params:         3       0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0
  6335 ;;      Temps:          5       0       0       0       0       0       0
  6336 ;;      Totals:         8       0       0       0       0       0       0
  6337 ;;Total ram usage:        8 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 1
  6340 ;; This function calls:
  6341 ;;		_putch
  6342 ;; This function is called by:
  6343 ;;		_pad
  6344 ;;		_vfpfcnvrt
  6345 ;;		_fputs
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text25
  6350   002DF2                     __ptext25:
  6351                           	callstack 0
  6352   002DF2                     _fputc:
  6353                           	callstack 25
  6354   002DF2  5003               	movf	fputc@fp^0,w,c
  6355   002DF4  B4D8               	btfsc	status,2,c
  6356   002DF6  EFFF  F016         	goto	u2271
  6357   002DFA  EF01  F017         	goto	u2270
  6358   002DFE                     u2271:
  6359   002DFE  EF09  F017         	goto	l2504
  6360   002E02                     u2270:
  6361   002E02  5003               	movf	fputc@fp^0,w,c
  6362   002E04  A4D8               	btfss	status,2,c
  6363   002E06  EF07  F017         	goto	u2281
  6364   002E0A  EF09  F017         	goto	u2280
  6365   002E0E                     u2281:
  6366   002E0E  EF0E  F017         	goto	l2506
  6367   002E12                     u2280:
  6368   002E12                     l2504:
  6369   002E12  5001               	movf	fputc@c^0,w,c
  6370   002E14  EC5D  F01B         	call	_putch
  6371   002E18  EF55  F017         	goto	l1047
  6372   002E1C                     l2506:
  6373   002E1C  5003               	movf	fputc@fp^0,w,c
  6374   002E1E  6ED9               	movwf	fsr2l,c
  6375   002E20  6ADA               	clrf	fsr2h,c
  6376   002E22  0E0A               	movlw	10
  6377   002E24  26D9               	addwf	fsr2l,f,c
  6378   002E26  50DE               	movf	postinc2,w,c
  6379   002E28  10DE               	iorwf	postinc2,w,c
  6380   002E2A  B4D8               	btfsc	status,2,c
  6381   002E2C  EF1A  F017         	goto	u2291
  6382   002E30  EF1C  F017         	goto	u2290
  6383   002E34                     u2291:
  6384   002E34  EF35  F017         	goto	l2510
  6385   002E38                     u2290:
  6386   002E38  5003               	movf	fputc@fp^0,w,c
  6387   002E3A  6ED9               	movwf	fsr2l,c
  6388   002E3C  6ADA               	clrf	fsr2h,c
  6389   002E3E  0E0A               	movlw	10
  6390   002E40  26D9               	addwf	fsr2l,f,c
  6391   002E42  5003               	movf	fputc@fp^0,w,c
  6392   002E44  6EE1               	movwf	fsr1l,c
  6393   002E46  6AE2               	clrf	fsr1h,c
  6394   002E48  0E03               	movlw	3
  6395   002E4A  26E1               	addwf	fsr1l,f,c
  6396   002E4C  50DE               	movf	postinc2,w,c
  6397   002E4E  5CE6               	subwf	postinc1,w,c
  6398   002E50  50E6               	movf	postinc1,w,c
  6399   002E52  0A80               	xorlw	128
  6400   002E54  6E08               	movwf	(??_fputc+4)^0,c
  6401   002E56  50DE               	movf	postinc2,w,c
  6402   002E58  0A80               	xorlw	128
  6403   002E5A  5808               	subwfb	(??_fputc+4)^0,w,c
  6404   002E5C  B0D8               	btfsc	status,0,c
  6405   002E5E  EF33  F017         	goto	u2301
  6406   002E62  EF35  F017         	goto	u2300
  6407   002E66                     u2301:
  6408   002E66  EF55  F017         	goto	l1047
  6409   002E6A                     u2300:
  6410   002E6A                     l2510:
  6411   002E6A  5003               	movf	fputc@fp^0,w,c
  6412   002E6C  6ED9               	movwf	fsr2l,c
  6413   002E6E  6ADA               	clrf	fsr2h,c
  6414   002E70  0E03               	movlw	3
  6415   002E72  26D9               	addwf	fsr2l,f,c
  6416   002E74  CFDE F004          	movff	postinc2,??_fputc
  6417   002E78  CFDD F005          	movff	postdec2,??_fputc+1
  6418   002E7C  5003               	movf	fputc@fp^0,w,c
  6419   002E7E  6ED9               	movwf	fsr2l,c
  6420   002E80  6ADA               	clrf	fsr2h,c
  6421   002E82  CFDE F006          	movff	postinc2,??_fputc+2
  6422   002E86  CFDD F007          	movff	postdec2,??_fputc+3
  6423   002E8A  5004               	movf	??_fputc^0,w,c
  6424   002E8C  2406               	addwf	(??_fputc+2)^0,w,c
  6425   002E8E  6ED9               	movwf	fsr2l,c
  6426   002E90  5005               	movf	(??_fputc+1)^0,w,c
  6427   002E92  2007               	addwfc	(??_fputc+3)^0,w,c
  6428   002E94  6EDA               	movwf	fsr2h,c
  6429   002E96  C001  FFDF         	movff	fputc@c,indf2
  6430   002E9A  5003               	movf	fputc@fp^0,w,c
  6431   002E9C  6ED9               	movwf	fsr2l,c
  6432   002E9E  6ADA               	clrf	fsr2h,c
  6433   002EA0  0E03               	movlw	3
  6434   002EA2  26D9               	addwf	fsr2l,f,c
  6435   002EA4  2ADE               	incf	postinc2,f,c
  6436   002EA6  0E00               	movlw	0
  6437   002EA8  22DD               	addwfc	postdec2,f,c
  6438   002EAA                     l1047:
  6439   002EAA  0012               	return		;funcret
  6440   002EAC                     __end_of_fputc:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function _putch *****************
  6444 ;; Defined at:
  6445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  c               1    wreg     unsigned char 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  c               1    0[COMRAM] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		wreg
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6459 ;;      Params:         0       0       0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0
  6462 ;;      Totals:         0       0       0       0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_fputc
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text26
  6473   0036BA                     __ptext26:
  6474                           	callstack 0
  6475   0036BA                     _putch:
  6476                           	callstack 25
  6477   0036BA  0012               	return		;funcret
  6478   0036BC                     __end_of_putch:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _abs *****************
  6482 ;; Defined at:
  6483 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  a               2    6[COMRAM] int 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2    6[COMRAM] int 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6497 ;;      Params:         2       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0
  6500 ;;      Totals:         4       0       0       0       0       0       0
  6501 ;;Total ram usage:        4 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_dtoa
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text27
  6511   00356A                     __ptext27:
  6512                           	callstack 0
  6513   00356A                     _abs:
  6514                           	callstack 25
  6515   00356A  BE08               	btfsc	(abs@a+1)^0,7,c
  6516   00356C  EFBA  F01A         	goto	u3451
  6517   003570  EFBC  F01A         	goto	u3450
  6518   003574                     u3451:
  6519   003574  EFC2  F01A         	goto	l1006
  6520   003578                     u3450:
  6521   003578  C007  F007         	movff	abs@a,?_abs
  6522   00357C  C008  F008         	movff	abs@a+1,?_abs+1
  6523   003580  EFCE  F01A         	goto	l1009
  6524   003584                     l1006:
  6525   003584  C007  F009         	movff	abs@a,??_abs
  6526   003588  C008  F00A         	movff	abs@a+1,??_abs+1
  6527   00358C  1E09               	comf	??_abs^0,f,c
  6528   00358E  1E0A               	comf	(??_abs+1)^0,f,c
  6529   003590  4A09               	infsnz	??_abs^0,f,c
  6530   003592  2A0A               	incf	(??_abs+1)^0,f,c
  6531   003594  C009  F007         	movff	??_abs,?_abs
  6532   003598  C00A  F008         	movff	??_abs+1,?_abs+1
  6533   00359C                     l1009:
  6534   00359C  0012               	return		;funcret
  6535   00359E                     __end_of_abs:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function ___awmod *****************
  6539 ;; Defined at:
  6540 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  dividend        2    0[COMRAM] int 
  6543 ;;  divisor         2    2[COMRAM] int 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  sign            1    5[COMRAM] unsigned char 
  6546 ;;  counter         1    4[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  2    0[COMRAM] int 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6556 ;;      Params:         4       0       0       0       0       0       0
  6557 ;;      Locals:         2       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0
  6559 ;;      Totals:         6       0       0       0       0       0       0
  6560 ;;Total ram usage:        6 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_dtoa
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text28
  6570   002EAC                     __ptext28:
  6571                           	callstack 0
  6572   002EAC                     ___awmod:
  6573                           	callstack 25
  6574   002EAC  0E00               	movlw	0
  6575   002EAE  6E06               	movwf	___awmod@sign^0,c
  6576   002EB0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6577   002EB2  EF5F  F017         	goto	u3190
  6578   002EB6  EF5D  F017         	goto	u3191
  6579   002EBA                     u3191:
  6580   002EBA  EF65  F017         	goto	l3056
  6581   002EBE                     u3190:
  6582   002EBE  6C01               	negf	___awmod@dividend^0,c
  6583   002EC0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6584   002EC2  B0D8               	btfsc	status,0,c
  6585   002EC4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6586   002EC6  0E01               	movlw	1
  6587   002EC8  6E06               	movwf	___awmod@sign^0,c
  6588   002ECA                     l3056:
  6589   002ECA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6590   002ECC  EF6C  F017         	goto	u3200
  6591   002ED0  EF6A  F017         	goto	u3201
  6592   002ED4                     u3201:
  6593   002ED4  EF70  F017         	goto	l3060
  6594   002ED8                     u3200:
  6595   002ED8  6C03               	negf	___awmod@divisor^0,c
  6596   002EDA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6597   002EDC  B0D8               	btfsc	status,0,c
  6598   002EDE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6599   002EE0                     l3060:
  6600   002EE0  5003               	movf	___awmod@divisor^0,w,c
  6601   002EE2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6602   002EE4  B4D8               	btfsc	status,2,c
  6603   002EE6  EF77  F017         	goto	u3211
  6604   002EEA  EF79  F017         	goto	u3210
  6605   002EEE                     u3211:
  6606   002EEE  EF9D  F017         	goto	l3076
  6607   002EF2                     u3210:
  6608   002EF2  0E01               	movlw	1
  6609   002EF4  6E05               	movwf	___awmod@counter^0,c
  6610   002EF6  EF81  F017         	goto	l3066
  6611   002EFA                     l3064:
  6612   002EFA  90D8               	bcf	status,0,c
  6613   002EFC  3603               	rlcf	___awmod@divisor^0,f,c
  6614   002EFE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6615   002F00  2A05               	incf	___awmod@counter^0,f,c
  6616   002F02                     l3066:
  6617   002F02  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6618   002F04  EF86  F017         	goto	u3221
  6619   002F08  EF88  F017         	goto	u3220
  6620   002F0C                     u3221:
  6621   002F0C  EF7D  F017         	goto	l3064
  6622   002F10                     u3220:
  6623   002F10                     l3068:
  6624   002F10  5003               	movf	___awmod@divisor^0,w,c
  6625   002F12  5C01               	subwf	___awmod@dividend^0,w,c
  6626   002F14  5004               	movf	(___awmod@divisor+1)^0,w,c
  6627   002F16  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6628   002F18  A0D8               	btfss	status,0,c
  6629   002F1A  EF91  F017         	goto	u3231
  6630   002F1E  EF93  F017         	goto	u3230
  6631   002F22                     u3231:
  6632   002F22  EF97  F017         	goto	l3072
  6633   002F26                     u3230:
  6634   002F26  5003               	movf	___awmod@divisor^0,w,c
  6635   002F28  5E01               	subwf	___awmod@dividend^0,f,c
  6636   002F2A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6637   002F2C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6638   002F2E                     l3072:
  6639   002F2E  90D8               	bcf	status,0,c
  6640   002F30  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6641   002F32  3203               	rrcf	___awmod@divisor^0,f,c
  6642   002F34  2E05               	decfsz	___awmod@counter^0,f,c
  6643   002F36  EF88  F017         	goto	l3068
  6644   002F3A                     l3076:
  6645   002F3A  5006               	movf	___awmod@sign^0,w,c
  6646   002F3C  B4D8               	btfsc	status,2,c
  6647   002F3E  EFA3  F017         	goto	u3241
  6648   002F42  EFA5  F017         	goto	u3240
  6649   002F46                     u3241:
  6650   002F46  EFA9  F017         	goto	l3080
  6651   002F4A                     u3240:
  6652   002F4A  6C01               	negf	___awmod@dividend^0,c
  6653   002F4C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6654   002F4E  B0D8               	btfsc	status,0,c
  6655   002F50  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6656   002F52                     l3080:
  6657   002F52  C001  F001         	movff	___awmod@dividend,?___awmod
  6658   002F56  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6659   002F5A  0012               	return		;funcret
  6660   002F5C                     __end_of___awmod:
  6661                           	callstack 0
  6662                           
  6663 ;; *************** function ___awdiv *****************
  6664 ;; Defined at:
  6665 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  dividend        2    0[COMRAM] int 
  6668 ;;  divisor         2    2[COMRAM] int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  quotient        2    6[COMRAM] int 
  6671 ;;  sign            1    5[COMRAM] unsigned char 
  6672 ;;  counter         1    4[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2    0[COMRAM] int 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6682 ;;      Params:         4       0       0       0       0       0       0
  6683 ;;      Locals:         4       0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0
  6685 ;;      Totals:         8       0       0       0       0       0       0
  6686 ;;Total ram usage:        8 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_dtoa
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text29
  6696   002D2E                     __ptext29:
  6697                           	callstack 0
  6698   002D2E                     ___awdiv:
  6699                           	callstack 25
  6700   002D2E  0E00               	movlw	0
  6701   002D30  6E06               	movwf	___awdiv@sign^0,c
  6702   002D32  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6703   002D34  EFA0  F016         	goto	u3130
  6704   002D38  EF9E  F016         	goto	u3131
  6705   002D3C                     u3131:
  6706   002D3C  EFA6  F016         	goto	l3012
  6707   002D40                     u3130:
  6708   002D40  6C03               	negf	___awdiv@divisor^0,c
  6709   002D42  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6710   002D44  B0D8               	btfsc	status,0,c
  6711   002D46  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6712   002D48  0E01               	movlw	1
  6713   002D4A  6E06               	movwf	___awdiv@sign^0,c
  6714   002D4C                     l3012:
  6715   002D4C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6716   002D4E  EFAD  F016         	goto	u3140
  6717   002D52  EFAB  F016         	goto	u3141
  6718   002D56                     u3141:
  6719   002D56  EFB3  F016         	goto	l3018
  6720   002D5A                     u3140:
  6721   002D5A  6C01               	negf	___awdiv@dividend^0,c
  6722   002D5C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6723   002D5E  B0D8               	btfsc	status,0,c
  6724   002D60  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6725   002D62  0E01               	movlw	1
  6726   002D64  1A06               	xorwf	___awdiv@sign^0,f,c
  6727   002D66                     l3018:
  6728   002D66  0E00               	movlw	0
  6729   002D68  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6730   002D6A  0E00               	movlw	0
  6731   002D6C  6E07               	movwf	___awdiv@quotient^0,c
  6732   002D6E  5003               	movf	___awdiv@divisor^0,w,c
  6733   002D70  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6734   002D72  B4D8               	btfsc	status,2,c
  6735   002D74  EFBE  F016         	goto	u3151
  6736   002D78  EFC0  F016         	goto	u3150
  6737   002D7C                     u3151:
  6738   002D7C  EFE8  F016         	goto	l3040
  6739   002D80                     u3150:
  6740   002D80  0E01               	movlw	1
  6741   002D82  6E05               	movwf	___awdiv@counter^0,c
  6742   002D84  EFC8  F016         	goto	l3026
  6743   002D88                     l3024:
  6744   002D88  90D8               	bcf	status,0,c
  6745   002D8A  3603               	rlcf	___awdiv@divisor^0,f,c
  6746   002D8C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6747   002D8E  2A05               	incf	___awdiv@counter^0,f,c
  6748   002D90                     l3026:
  6749   002D90  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6750   002D92  EFCD  F016         	goto	u3161
  6751   002D96  EFCF  F016         	goto	u3160
  6752   002D9A                     u3161:
  6753   002D9A  EFC4  F016         	goto	l3024
  6754   002D9E                     u3160:
  6755   002D9E                     l3028:
  6756   002D9E  90D8               	bcf	status,0,c
  6757   002DA0  3607               	rlcf	___awdiv@quotient^0,f,c
  6758   002DA2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6759   002DA4  5003               	movf	___awdiv@divisor^0,w,c
  6760   002DA6  5C01               	subwf	___awdiv@dividend^0,w,c
  6761   002DA8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6762   002DAA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6763   002DAC  A0D8               	btfss	status,0,c
  6764   002DAE  EFDB  F016         	goto	u3171
  6765   002DB2  EFDD  F016         	goto	u3170
  6766   002DB6                     u3171:
  6767   002DB6  EFE2  F016         	goto	l3036
  6768   002DBA                     u3170:
  6769   002DBA  5003               	movf	___awdiv@divisor^0,w,c
  6770   002DBC  5E01               	subwf	___awdiv@dividend^0,f,c
  6771   002DBE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6772   002DC0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6773   002DC2  8007               	bsf	___awdiv@quotient^0,0,c
  6774   002DC4                     l3036:
  6775   002DC4  90D8               	bcf	status,0,c
  6776   002DC6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6777   002DC8  3203               	rrcf	___awdiv@divisor^0,f,c
  6778   002DCA  2E05               	decfsz	___awdiv@counter^0,f,c
  6779   002DCC  EFCF  F016         	goto	l3028
  6780   002DD0                     l3040:
  6781   002DD0  5006               	movf	___awdiv@sign^0,w,c
  6782   002DD2  B4D8               	btfsc	status,2,c
  6783   002DD4  EFEE  F016         	goto	u3181
  6784   002DD8  EFF0  F016         	goto	u3180
  6785   002DDC                     u3181:
  6786   002DDC  EFF4  F016         	goto	l3044
  6787   002DE0                     u3180:
  6788   002DE0  6C07               	negf	___awdiv@quotient^0,c
  6789   002DE2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6790   002DE4  B0D8               	btfsc	status,0,c
  6791   002DE6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6792   002DE8                     l3044:
  6793   002DE8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6794   002DEC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6795   002DF0  0012               	return		;funcret
  6796   002DF2                     __end_of___awdiv:
  6797                           	callstack 0
  6798                           
  6799 ;; *************** function _lcd_write *****************
  6800 ;; Defined at:
  6801 ;;		line 83 in file "LCD4b_EXSTO.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  lin             1    wreg     unsigned char 
  6804 ;;  col             1    6[COMRAM] unsigned char 
  6805 ;;  str             2    7[COMRAM] PTR unsigned char 
  6806 ;;		 -> STR_12(5), STR_11(4), STR_10(4), STR_9(4), 
  6807 ;;		 -> BufferS4(8), BufferS3(8), BufferS2(8), BufferS1(8), 
  6808 ;;		 -> STR_4(16), STR_3(16), BufferLCD_Voltage(16), BufferLCD_Press(16), 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  lin             1   10[COMRAM] unsigned char 
  6811 ;;  end             1    9[COMRAM] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6821 ;;      Params:         3       0       0       0       0       0       0
  6822 ;;      Locals:         2       0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0
  6824 ;;      Totals:         5       0       0       0       0       0       0
  6825 ;;Total ram usage:        5 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 3
  6828 ;; This function calls:
  6829 ;;		_lcd_send_byte
  6830 ;; This function is called by:
  6831 ;;		_lcd_SENSOR
  6832 ;;		_lcd_PERIPHERAL
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text30
  6837   0030AC                     __ptext30:
  6838                           	callstack 0
  6839   0030AC                     _lcd_write:
  6840                           	callstack 26
  6841                           
  6842                           ;incstack = 0
  6843                           ;lcd_write@lin stored from wreg
  6844   0030AC  6E0B               	movwf	lcd_write@lin^0,c
  6845   0030AE                     
  6846                           ;LCD4b_EXSTO.c: 83: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 84: {;L
      +                          CD4b_EXSTO.c: 85:     char end;;LCD4b_EXSTO.c: 87:     if(lin == 1)
  6847   0030AE  040B               	decf	lcd_write@lin^0,w,c
  6848   0030B0  A4D8               	btfss	status,2,c
  6849   0030B2  EF5D  F018         	goto	u4251
  6850   0030B6  EF5F  F018         	goto	u4250
  6851   0030BA                     u4251:
  6852   0030BA  EF64  F018         	goto	l3728
  6853   0030BE                     u4250:
  6854   0030BE                     
  6855                           ;LCD4b_EXSTO.c: 88:     {;LCD4b_EXSTO.c: 89:         end = col + 0X80 - 1;
  6856   0030BE  5007               	movf	lcd_write@col^0,w,c
  6857   0030C0  0F7F               	addlw	127
  6858   0030C2  6E0A               	movwf	lcd_write@end^0,c
  6859                           
  6860                           ;LCD4b_EXSTO.c: 90:     }
  6861   0030C4  EF70  F018         	goto	l3732
  6862   0030C8                     l3728:
  6863   0030C8  0E02               	movlw	2
  6864   0030CA  180B               	xorwf	lcd_write@lin^0,w,c
  6865   0030CC  A4D8               	btfss	status,2,c
  6866   0030CE  EF6B  F018         	goto	u4261
  6867   0030D2  EF6D  F018         	goto	u4260
  6868   0030D6                     u4261:
  6869   0030D6  EF70  F018         	goto	l3732
  6870   0030DA                     u4260:
  6871   0030DA                     
  6872                           ;LCD4b_EXSTO.c: 92:     {;LCD4b_EXSTO.c: 93:         end = col + 0xC0 - 1;
  6873   0030DA  5007               	movf	lcd_write@col^0,w,c
  6874   0030DC  0FBF               	addlw	191
  6875   0030DE  6E0A               	movwf	lcd_write@end^0,c
  6876   0030E0                     l3732:
  6877                           
  6878                           ;LCD4b_EXSTO.c: 95:     lcd_send_byte(0,end);
  6879   0030E0  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  6880   0030E4  0E00               	movlw	0
  6881   0030E6  EC3B  F01B         	call	_lcd_send_byte
  6882                           
  6883                           ;LCD4b_EXSTO.c: 97:     while(*str)
  6884   0030EA  EF8D  F018         	goto	l3738
  6885   0030EE                     l3734:
  6886                           
  6887                           ;LCD4b_EXSTO.c: 98:     {;LCD4b_EXSTO.c: 99:         lcd_send_byte(1,*str);
  6888   0030EE  C008  FFF6         	movff	lcd_write@str,tblptrl
  6889   0030F2  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  6890   0030F6  6AF8               	clrf	tblptru,c
  6891   0030F8  0E05               	movlw	(high __ramtop+-1)
  6892   0030FA  64F7               	cpfsgt	tblptrh,c
  6893   0030FC  D003               	bra	u4277
  6894   0030FE  0008               	tblrd		*
  6895   003100  50F5               	movf	tablat,w,c
  6896   003102  D005               	bra	u4270
  6897   003104                     u4277:
  6898   003104  CFF6 FFE1          	movff	tblptrl,fsr1l
  6899   003108  CFF7 FFE2          	movff	tblptrh,fsr1h
  6900   00310C  50E7               	movf	indf1,w,c
  6901   00310E                     u4270:
  6902   00310E  6E05               	movwf	lcd_send_byte@data^0,c
  6903   003110  0E01               	movlw	1
  6904   003112  EC3B  F01B         	call	_lcd_send_byte
  6905   003116                     
  6906                           ;LCD4b_EXSTO.c: 100:         str++;
  6907   003116  4A08               	infsnz	lcd_write@str^0,f,c
  6908   003118  2A09               	incf	(lcd_write@str+1)^0,f,c
  6909   00311A                     l3738:
  6910                           
  6911                           ;LCD4b_EXSTO.c: 97:     while(*str)
  6912   00311A  C008  FFF6         	movff	lcd_write@str,tblptrl
  6913   00311E  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  6914   003122  6AF8               	clrf	tblptru,c
  6915   003124  0E05               	movlw	(high __ramtop+-1)
  6916   003126  64F7               	cpfsgt	tblptrh,c
  6917   003128  D003               	bra	u4287
  6918   00312A  0008               	tblrd		*
  6919   00312C  50F5               	movf	tablat,w,c
  6920   00312E  D005               	bra	u4280
  6921   003130                     u4287:
  6922   003130  CFF6 FFE1          	movff	tblptrl,fsr1l
  6923   003134  CFF7 FFE2          	movff	tblptrh,fsr1h
  6924   003138  50E7               	movf	indf1,w,c
  6925   00313A                     u4280:
  6926   00313A  0900               	iorlw	0
  6927   00313C  A4D8               	btfss	status,2,c
  6928   00313E  EFA3  F018         	goto	u4291
  6929   003142  EFA5  F018         	goto	u4290
  6930   003146                     u4291:
  6931   003146  EF77  F018         	goto	l3734
  6932   00314A                     u4290:
  6933   00314A  0012               	return		;funcret
  6934   00314C                     __end_of_lcd_write:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _lcd_send_byte *****************
  6938 ;; Defined at:
  6939 ;;		line 63 in file "LCD4b_EXSTO.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  level           1    wreg     unsigned char 
  6942 ;;  data            1    4[COMRAM] unsigned char 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  level           1    5[COMRAM] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  1    wreg      void 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6954 ;;      Params:         1       0       0       0       0       0       0
  6955 ;;      Locals:         1       0       0       0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0       0       0
  6957 ;;      Totals:         2       0       0       0       0       0       0
  6958 ;;Total ram usage:        2 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; Hardware stack levels required when called: 2
  6961 ;; This function calls:
  6962 ;;		_lcd_cmd
  6963 ;; This function is called by:
  6964 ;;		_lcd_write
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text31
  6969   003676                     __ptext31:
  6970                           	callstack 0
  6971   003676                     _lcd_send_byte:
  6972                           	callstack 26
  6973                           
  6974                           ;incstack = 0
  6975                           ;lcd_send_byte@level stored from wreg
  6976   003676  6E06               	movwf	lcd_send_byte@level^0,c
  6977   003678                     
  6978                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  6979   003678  B006               	btfsc	lcd_send_byte@level^0,0,c
  6980   00367A  D002               	bra	u4235
  6981   00367C  9084               	bcf	132,0,c	;volatile
  6982   00367E  D001               	bra	u4236
  6983   003680                     u4235:
  6984   003680  8084               	bsf	132,0,c	;volatile
  6985   003682                     u4236:
  6986   003682                     
  6987                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6988   003682  0E42               	movlw	66
  6989   003684                     u5247:
  6990   003684  2EE8               	decfsz	wreg,f,c
  6991   003686  D7FE               	bra	u5247
  6992   003688  D000               	nop2	
  6993   00368A                     
  6994                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  6995   00368A  9484               	bcf	132,2,c	;volatile
  6996   00368C                     
  6997                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  6998   00368C  5005               	movf	lcd_send_byte@data^0,w,c
  6999   00368E  ECBB  F015         	call	_lcd_cmd
  7000   003692  0012               	return		;funcret
  7001   003694                     __end_of_lcd_send_byte:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function _lcd_clear *****************
  7005 ;; Defined at:
  7006 ;;		line 71 in file "LCD4b_EXSTO.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7020 ;;      Params:         0       0       0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0
  7022 ;;      Temps:          1       0       0       0       0       0       0
  7023 ;;      Totals:         1       0       0       0       0       0       0
  7024 ;;Total ram usage:        1 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 2
  7027 ;; This function calls:
  7028 ;;		_lcd_cmd
  7029 ;; This function is called by:
  7030 ;;		_lcd_PERIPHERAL
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text32
  7035   0035D2                     __ptext32:
  7036                           	callstack 0
  7037   0035D2                     _lcd_clear:
  7038                           	callstack 27
  7039   0035D2                     
  7040                           ;LCD4b_EXSTO.c: 73:     lcd_cmd(0x01);
  7041   0035D2  0E01               	movlw	1
  7042   0035D4  ECBB  F015         	call	_lcd_cmd
  7043   0035D8                     
  7044                           ;LCD4b_EXSTO.c: 74:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7045   0035D8  0E06               	movlw	6
  7046   0035DA  6E05               	movwf	??_lcd_clear^0,c
  7047   0035DC  0E30               	movlw	48
  7048   0035DE                     u5257:
  7049   0035DE  2EE8               	decfsz	wreg,f,c
  7050   0035E0  D7FE               	bra	u5257
  7051   0035E2  2E05               	decfsz	??_lcd_clear^0,f,c
  7052   0035E4  D7FC               	bra	u5257
  7053   0035E6  D000               	nop2	
  7054   0035E8                     
  7055                           ;LCD4b_EXSTO.c: 75:     lcd_cmd(0x0C);
  7056   0035E8  0E0C               	movlw	12
  7057   0035EA  ECBB  F015         	call	_lcd_cmd
  7058                           
  7059                           ;LCD4b_EXSTO.c: 76:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7060   0035EE  0E1A               	movlw	26
  7061   0035F0                     u5267:
  7062   0035F0  2EE8               	decfsz	wreg,f,c
  7063   0035F2  D7FE               	bra	u5267
  7064   0035F4  D000               	nop2	
  7065   0035F6                     
  7066                           ;LCD4b_EXSTO.c: 77:     PORTD = 0b00000000;
  7067   0035F6  0E00               	movlw	0
  7068   0035F8  6E83               	movwf	131,c	;volatile
  7069   0035FA                     
  7070                           ;LCD4b_EXSTO.c: 78:     PORTEbits.RE0 = 0;
  7071   0035FA  9084               	bcf	132,0,c	;volatile
  7072   0035FC                     
  7073                           ;LCD4b_EXSTO.c: 79:     PORTEbits.RE1 = 0;
  7074   0035FC  9284               	bcf	132,1,c	;volatile
  7075   0035FE                     
  7076                           ;LCD4b_EXSTO.c: 80:     PORTEbits.RE2 = 0;
  7077   0035FE  9484               	bcf	132,2,c	;volatile
  7078   003600  0012               	return		;funcret
  7079   003602                     __end_of_lcd_clear:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function _lcd_cmd *****************
  7083 ;; Defined at:
  7084 ;;		line 42 in file "LCD4b_EXSTO.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  cmd             1    wreg     unsigned char 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  cmd             1    3[COMRAM] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7098 ;;      Params:         0       0       0       0       0       0       0
  7099 ;;      Locals:         1       0       0       0       0       0       0
  7100 ;;      Temps:          1       0       0       0       0       0       0
  7101 ;;      Totals:         2       0       0       0       0       0       0
  7102 ;;Total ram usage:        2 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 1
  7105 ;; This function calls:
  7106 ;;		_set_bit
  7107 ;; This function is called by:
  7108 ;;		_lcd_init
  7109 ;;		_lcd_send_byte
  7110 ;;		_lcd_clear
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text33
  7115   002B76                     __ptext33:
  7116                           	callstack 0
  7117   002B76                     _lcd_cmd:
  7118                           	callstack 28
  7119                           
  7120                           ;incstack = 0
  7121                           ;lcd_cmd@cmd stored from wreg
  7122   002B76  6E04               	movwf	lcd_cmd@cmd^0,c
  7123   002B78                     
  7124                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  7125   002B78  0E10               	movlw	16
  7126   002B7A  6E01               	movwf	set_bit@comp^0,c
  7127   002B7C  5004               	movf	lcd_cmd@cmd^0,w,c
  7128   002B7E  EC2B  F01B         	call	_set_bit
  7129   002B82  6E03               	movwf	??_lcd_cmd^0,c
  7130   002B84  3A03               	swapf	??_lcd_cmd^0,f,c
  7131   002B86  5083               	movf	131,w,c	;volatile
  7132   002B88  1803               	xorwf	??_lcd_cmd^0,w,c
  7133   002B8A  0BEF               	andlw	-17
  7134   002B8C  1803               	xorwf	??_lcd_cmd^0,w,c
  7135   002B8E  6E83               	movwf	131,c	;volatile
  7136                           
  7137                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  7138   002B90  0E20               	movlw	32
  7139   002B92  6E01               	movwf	set_bit@comp^0,c
  7140   002B94  5004               	movf	lcd_cmd@cmd^0,w,c
  7141   002B96  EC2B  F01B         	call	_set_bit
  7142   002B9A  6E03               	movwf	??_lcd_cmd^0,c
  7143   002B9C  3A03               	swapf	??_lcd_cmd^0,f,c
  7144   002B9E  4603               	rlncf	??_lcd_cmd^0,f,c
  7145   002BA0  5083               	movf	131,w,c	;volatile
  7146   002BA2  1803               	xorwf	??_lcd_cmd^0,w,c
  7147   002BA4  0BDF               	andlw	-33
  7148   002BA6  1803               	xorwf	??_lcd_cmd^0,w,c
  7149   002BA8  6E83               	movwf	131,c	;volatile
  7150                           
  7151                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  7152   002BAA  0E40               	movlw	64
  7153   002BAC  6E01               	movwf	set_bit@comp^0,c
  7154   002BAE  5004               	movf	lcd_cmd@cmd^0,w,c
  7155   002BB0  EC2B  F01B         	call	_set_bit
  7156   002BB4  6E03               	movwf	??_lcd_cmd^0,c
  7157   002BB6  3A03               	swapf	??_lcd_cmd^0,f,c
  7158   002BB8  4603               	rlncf	??_lcd_cmd^0,f,c
  7159   002BBA  4603               	rlncf	??_lcd_cmd^0,f,c
  7160   002BBC  5083               	movf	131,w,c	;volatile
  7161   002BBE  1803               	xorwf	??_lcd_cmd^0,w,c
  7162   002BC0  0BBF               	andlw	-65
  7163   002BC2  1803               	xorwf	??_lcd_cmd^0,w,c
  7164   002BC4  6E83               	movwf	131,c	;volatile
  7165                           
  7166                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  7167   002BC6  0E80               	movlw	128
  7168   002BC8  6E01               	movwf	set_bit@comp^0,c
  7169   002BCA  5004               	movf	lcd_cmd@cmd^0,w,c
  7170   002BCC  EC2B  F01B         	call	_set_bit
  7171   002BD0  6E03               	movwf	??_lcd_cmd^0,c
  7172   002BD2  3203               	rrcf	??_lcd_cmd^0,f,c
  7173   002BD4  3203               	rrcf	??_lcd_cmd^0,f,c
  7174   002BD6  5083               	movf	131,w,c	;volatile
  7175   002BD8  1803               	xorwf	??_lcd_cmd^0,w,c
  7176   002BDA  0B7F               	andlw	-129
  7177   002BDC  1803               	xorwf	??_lcd_cmd^0,w,c
  7178   002BDE  6E83               	movwf	131,c	;volatile
  7179   002BE0                     
  7180                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  7181   002BE0  8484               	bsf	132,2,c	;volatile
  7182   002BE2                     
  7183                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  7184   002BE2  9484               	bcf	132,2,c	;volatile
  7185   002BE4                     
  7186                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7187   002BE4  0E42               	movlw	66
  7188   002BE6                     u5277:
  7189   002BE6  2EE8               	decfsz	wreg,f,c
  7190   002BE8  D7FE               	bra	u5277
  7191   002BEA  D000               	nop2	
  7192   002BEC                     
  7193                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  7194   002BEC  0E01               	movlw	1
  7195   002BEE  6E01               	movwf	set_bit@comp^0,c
  7196   002BF0  5004               	movf	lcd_cmd@cmd^0,w,c
  7197   002BF2  EC2B  F01B         	call	_set_bit
  7198   002BF6  6E03               	movwf	??_lcd_cmd^0,c
  7199   002BF8  3A03               	swapf	??_lcd_cmd^0,f,c
  7200   002BFA  5083               	movf	131,w,c	;volatile
  7201   002BFC  1803               	xorwf	??_lcd_cmd^0,w,c
  7202   002BFE  0BEF               	andlw	-17
  7203   002C00  1803               	xorwf	??_lcd_cmd^0,w,c
  7204   002C02  6E83               	movwf	131,c	;volatile
  7205   002C04                     
  7206                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  7207   002C04  0E02               	movlw	2
  7208   002C06  6E01               	movwf	set_bit@comp^0,c
  7209   002C08  5004               	movf	lcd_cmd@cmd^0,w,c
  7210   002C0A  EC2B  F01B         	call	_set_bit
  7211   002C0E  6E03               	movwf	??_lcd_cmd^0,c
  7212   002C10  3A03               	swapf	??_lcd_cmd^0,f,c
  7213   002C12  4603               	rlncf	??_lcd_cmd^0,f,c
  7214   002C14  5083               	movf	131,w,c	;volatile
  7215   002C16  1803               	xorwf	??_lcd_cmd^0,w,c
  7216   002C18  0BDF               	andlw	-33
  7217   002C1A  1803               	xorwf	??_lcd_cmd^0,w,c
  7218   002C1C  6E83               	movwf	131,c	;volatile
  7219   002C1E                     
  7220                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  7221   002C1E  0E04               	movlw	4
  7222   002C20  6E01               	movwf	set_bit@comp^0,c
  7223   002C22  5004               	movf	lcd_cmd@cmd^0,w,c
  7224   002C24  EC2B  F01B         	call	_set_bit
  7225   002C28  6E03               	movwf	??_lcd_cmd^0,c
  7226   002C2A  3A03               	swapf	??_lcd_cmd^0,f,c
  7227   002C2C  4603               	rlncf	??_lcd_cmd^0,f,c
  7228   002C2E  4603               	rlncf	??_lcd_cmd^0,f,c
  7229   002C30  5083               	movf	131,w,c	;volatile
  7230   002C32  1803               	xorwf	??_lcd_cmd^0,w,c
  7231   002C34  0BBF               	andlw	-65
  7232   002C36  1803               	xorwf	??_lcd_cmd^0,w,c
  7233   002C38  6E83               	movwf	131,c	;volatile
  7234   002C3A                     
  7235                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  7236   002C3A  0E08               	movlw	8
  7237   002C3C  6E01               	movwf	set_bit@comp^0,c
  7238   002C3E  5004               	movf	lcd_cmd@cmd^0,w,c
  7239   002C40  EC2B  F01B         	call	_set_bit
  7240   002C44  6E03               	movwf	??_lcd_cmd^0,c
  7241   002C46  3203               	rrcf	??_lcd_cmd^0,f,c
  7242   002C48  3203               	rrcf	??_lcd_cmd^0,f,c
  7243   002C4A  5083               	movf	131,w,c	;volatile
  7244   002C4C  1803               	xorwf	??_lcd_cmd^0,w,c
  7245   002C4E  0B7F               	andlw	-129
  7246   002C50  1803               	xorwf	??_lcd_cmd^0,w,c
  7247   002C52  6E83               	movwf	131,c	;volatile
  7248   002C54                     
  7249                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  7250   002C54  8484               	bsf	132,2,c	;volatile
  7251   002C56                     
  7252                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  7253   002C56  9484               	bcf	132,2,c	;volatile
  7254   002C58  0012               	return		;funcret
  7255   002C5A                     __end_of_lcd_cmd:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function _set_bit *****************
  7259 ;; Defined at:
  7260 ;;		line 36 in file "LCD4b_EXSTO.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  cmd             1    wreg     unsigned char 
  7263 ;;  comp            1    0[COMRAM] unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  cmd             1    1[COMRAM] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      unsigned char 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2, status,0
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7275 ;;      Params:         1       0       0       0       0       0       0
  7276 ;;      Locals:         1       0       0       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0
  7278 ;;      Totals:         2       0       0       0       0       0       0
  7279 ;;Total ram usage:        2 bytes
  7280 ;; Hardware stack levels used: 1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_lcd_cmd
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text34
  7289   003656                     __ptext34:
  7290                           	callstack 0
  7291   003656                     _set_bit:
  7292                           	callstack 28
  7293                           
  7294                           ;incstack = 0
  7295                           ;set_bit@cmd stored from wreg
  7296   003656  6E02               	movwf	set_bit@cmd^0,c
  7297   003658                     
  7298                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  7299   003658  5002               	movf	set_bit@cmd^0,w,c
  7300   00365A  1401               	andwf	set_bit@comp^0,w,c
  7301   00365C  0900               	iorlw	0
  7302   00365E  B4D8               	btfsc	status,2,c
  7303   003660  EF34  F01B         	goto	u3661
  7304   003664  EF36  F01B         	goto	u3660
  7305   003668                     u3661:
  7306   003668  EF39  F01B         	goto	l3276
  7307   00366C                     u3660:
  7308   00366C  0E01               	movlw	1
  7309   00366E  EF3A  F01B         	goto	l23
  7310   003672                     l3276:
  7311   003672  0E00               	movlw	0
  7312   003674                     l23:
  7313   003674  0012               	return		;funcret
  7314   003676                     __end_of_set_bit:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function _equation_SENSOR *****************
  7318 ;; Defined at:
  7319 ;;		line 119 in file "Main_Program.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7333 ;;      Params:         0       0       0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0
  7336 ;;      Totals:         0       0       0       0       0       0       0
  7337 ;;Total ram usage:        0 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 1
  7340 ;; This function calls:
  7341 ;;		___fldiv
  7342 ;;		___flmul
  7343 ;;		___xxtofl
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text35
  7350   002C5A                     __ptext35:
  7351                           	callstack 0
  7352   002C5A                     _equation_SENSOR:
  7353                           	callstack 29
  7354   002C5A                     
  7355                           ;Main_Program.c: 121:     VoltageSensor = 0.0048875855 * VdigADC_AN0;
  7356   002C5A  C0C8  F001         	movff	_VdigADC_AN0,___xxtofl@val
  7357   002C5E  C0C9  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  7358   002C62  6A03               	clrf	(___xxtofl@val+2)^0,c
  7359   002C64  6A04               	clrf	(___xxtofl@val+3)^0,c
  7360   002C66  0E00               	movlw	0
  7361   002C68  ECFF  F011         	call	___xxtofl
  7362   002C6C  C001  F00F         	movff	?___xxtofl,___flmul@b
  7363   002C70  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7364   002C74  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7365   002C78  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7366   002C7C  0E0A               	movlw	10
  7367   002C7E  6E13               	movwf	___flmul@a^0,c
  7368   002C80  0E28               	movlw	40
  7369   002C82  6E14               	movwf	(___flmul@a+1)^0,c
  7370   002C84  0EA0               	movlw	160
  7371   002C86  6E15               	movwf	(___flmul@a+2)^0,c
  7372   002C88  0E3B               	movlw	59
  7373   002C8A  6E16               	movwf	(___flmul@a+3)^0,c
  7374   002C8C  ECBA  F00A         	call	___flmul	;wreg free
  7375   002C90  C00F  F08C         	movff	?___flmul,_VoltageSensor
  7376   002C94  C010  F08D         	movff	?___flmul+1,_VoltageSensor+1
  7377   002C98  C011  F08E         	movff	?___flmul+2,_VoltageSensor+2
  7378   002C9C  C012  F08F         	movff	?___flmul+3,_VoltageSensor+3
  7379   002CA0                     
  7380                           ;Main_Program.c: 122:     PressSensor = VoltageSensor / 0.0769230769;
  7381   002CA0  C08C  F028         	movff	_VoltageSensor,___fldiv@b
  7382   002CA4  C08D  F029         	movff	_VoltageSensor+1,___fldiv@b+1
  7383   002CA8  C08E  F02A         	movff	_VoltageSensor+2,___fldiv@b+2
  7384   002CAC  C08F  F02B         	movff	_VoltageSensor+3,___fldiv@b+3
  7385   002CB0  0ED9               	movlw	217
  7386   002CB2  6E2C               	movwf	___fldiv@a^0,c
  7387   002CB4  0E89               	movlw	137
  7388   002CB6  6E2D               	movwf	(___fldiv@a+1)^0,c
  7389   002CB8  0E9D               	movlw	157
  7390   002CBA  6E2E               	movwf	(___fldiv@a+2)^0,c
  7391   002CBC  0E3D               	movlw	61
  7392   002CBE  6E2F               	movwf	(___fldiv@a+3)^0,c
  7393   002CC0  ECCF  F00C         	call	___fldiv	;wreg free
  7394   002CC4  C028  F077         	movff	?___fldiv,_PressSensor
  7395   002CC8  C029  F078         	movff	?___fldiv+1,_PressSensor+1
  7396   002CCC  C02A  F079         	movff	?___fldiv+2,_PressSensor+2
  7397   002CD0  C02B  F07A         	movff	?___fldiv+3,_PressSensor+3
  7398   002CD4                     
  7399                           ;Main_Program.c: 123:     PressPercent = (PressSensor * 100) / 65;
  7400   002CD4  0E00               	movlw	0
  7401   002CD6  6E13               	movwf	___flmul@a^0,c
  7402   002CD8  0E00               	movlw	0
  7403   002CDA  6E14               	movwf	(___flmul@a+1)^0,c
  7404   002CDC  0EC8               	movlw	200
  7405   002CDE  6E15               	movwf	(___flmul@a+2)^0,c
  7406   002CE0  0E42               	movlw	66
  7407   002CE2  6E16               	movwf	(___flmul@a+3)^0,c
  7408   002CE4  C077  F00F         	movff	_PressSensor,___flmul@b
  7409   002CE8  C078  F010         	movff	_PressSensor+1,___flmul@b+1
  7410   002CEC  C079  F011         	movff	_PressSensor+2,___flmul@b+2
  7411   002CF0  C07A  F012         	movff	_PressSensor+3,___flmul@b+3
  7412   002CF4  ECBA  F00A         	call	___flmul	;wreg free
  7413   002CF8  C00F  F028         	movff	?___flmul,___fldiv@b
  7414   002CFC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7415   002D00  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7416   002D04  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7417   002D08  0E00               	movlw	0
  7418   002D0A  6E2C               	movwf	___fldiv@a^0,c
  7419   002D0C  0E00               	movlw	0
  7420   002D0E  6E2D               	movwf	(___fldiv@a+1)^0,c
  7421   002D10  0E82               	movlw	130
  7422   002D12  6E2E               	movwf	(___fldiv@a+2)^0,c
  7423   002D14  0E42               	movlw	66
  7424   002D16  6E2F               	movwf	(___fldiv@a+3)^0,c
  7425   002D18  ECCF  F00C         	call	___fldiv	;wreg free
  7426   002D1C  C028  F088         	movff	?___fldiv,_PressPercent
  7427   002D20  C029  F089         	movff	?___fldiv+1,_PressPercent+1
  7428   002D24  C02A  F08A         	movff	?___fldiv+2,_PressPercent+2
  7429   002D28  C02B  F08B         	movff	?___fldiv+3,_PressPercent+3
  7430   002D2C  0012               	return		;funcret
  7431   002D2E                     __end_of_equation_SENSOR:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function ___xxtofl *****************
  7435 ;; Defined at:
  7436 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  sign            1    wreg     unsigned char 
  7439 ;;  val             4    0[COMRAM] long 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  sign            1    8[COMRAM] unsigned char 
  7442 ;;  arg             4   10[COMRAM] unsigned long 
  7443 ;;  exp             1    9[COMRAM] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  4    0[COMRAM] unsigned char 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7453 ;;      Params:         4       0       0       0       0       0       0
  7454 ;;      Locals:         6       0       0       0       0       0       0
  7455 ;;      Temps:          4       0       0       0       0       0       0
  7456 ;;      Totals:        14       0       0       0       0       0       0
  7457 ;;Total ram usage:       14 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_equation_SENSOR
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text36
  7467   0023FE                     __ptext36:
  7468                           	callstack 0
  7469   0023FE                     ___xxtofl:
  7470                           	callstack 29
  7471                           
  7472                           ;incstack = 0
  7473                           ;___xxtofl@sign stored from wreg
  7474   0023FE  6E09               	movwf	___xxtofl@sign^0,c
  7475   002400  5009               	movf	___xxtofl@sign^0,w,c
  7476   002402  B4D8               	btfsc	status,2,c
  7477   002404  EF06  F012         	goto	u4301
  7478   002408  EF08  F012         	goto	u4300
  7479   00240C                     u4301:
  7480   00240C  EF2A  F012         	goto	l808
  7481   002410                     u4300:
  7482   002410  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7483   002412  EF0F  F012         	goto	u4310
  7484   002416  EF0D  F012         	goto	u4311
  7485   00241A                     u4311:
  7486   00241A  EF2A  F012         	goto	l808
  7487   00241E                     u4310:
  7488   00241E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7489   002422  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7490   002426  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7491   00242A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7492   00242E  1E05               	comf	??___xxtofl^0,f,c
  7493   002430  1E06               	comf	(??___xxtofl+1)^0,f,c
  7494   002432  1E07               	comf	(??___xxtofl+2)^0,f,c
  7495   002434  1E08               	comf	(??___xxtofl+3)^0,f,c
  7496   002436  2A05               	incf	??___xxtofl^0,f,c
  7497   002438  0E00               	movlw	0
  7498   00243A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7499   00243C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7500   00243E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7501   002440  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7502   002444  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7503   002448  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7504   00244C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7505   002450  EF32  F012         	goto	l3758
  7506   002454                     l808:
  7507   002454  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7508   002458  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7509   00245C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7510   002460  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7511   002464                     l3758:
  7512   002464  5001               	movf	___xxtofl@val^0,w,c
  7513   002466  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7514   002468  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7515   00246A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7516   00246C  A4D8               	btfss	status,2,c
  7517   00246E  EF3B  F012         	goto	u4321
  7518   002472  EF3D  F012         	goto	u4320
  7519   002476                     u4321:
  7520   002476  EF47  F012         	goto	l3764
  7521   00247A                     u4320:
  7522   00247A  0E00               	movlw	0
  7523   00247C  6E01               	movwf	?___xxtofl^0,c
  7524   00247E  0E00               	movlw	0
  7525   002480  6E02               	movwf	(?___xxtofl+1)^0,c
  7526   002482  0E00               	movlw	0
  7527   002484  6E03               	movwf	(?___xxtofl+2)^0,c
  7528   002486  0E00               	movlw	0
  7529   002488  6E04               	movwf	(?___xxtofl+3)^0,c
  7530   00248A  EFD8  F012         	goto	l811
  7531   00248E                     l3764:
  7532   00248E  0E96               	movlw	150
  7533   002490  6E0A               	movwf	___xxtofl@exp^0,c
  7534   002492  EF51  F012         	goto	l3768
  7535   002496                     l3766:
  7536   002496  2A0A               	incf	___xxtofl@exp^0,f,c
  7537   002498  90D8               	bcf	status,0,c
  7538   00249A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7539   00249C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7540   00249E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7541   0024A0  320B               	rrcf	___xxtofl@arg^0,f,c
  7542   0024A2                     l3768:
  7543   0024A2  0E00               	movlw	0
  7544   0024A4  140B               	andwf	___xxtofl@arg^0,w,c
  7545   0024A6  6E05               	movwf	??___xxtofl^0,c
  7546   0024A8  0E00               	movlw	0
  7547   0024AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7548   0024AC  6E06               	movwf	(??___xxtofl+1)^0,c
  7549   0024AE  0E00               	movlw	0
  7550   0024B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7551   0024B2  6E07               	movwf	(??___xxtofl+2)^0,c
  7552   0024B4  0EFE               	movlw	254
  7553   0024B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7554   0024B8  6E08               	movwf	(??___xxtofl+3)^0,c
  7555   0024BA  5005               	movf	??___xxtofl^0,w,c
  7556   0024BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7557   0024BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7558   0024C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7559   0024C2  A4D8               	btfss	status,2,c
  7560   0024C4  EF66  F012         	goto	u4331
  7561   0024C8  EF68  F012         	goto	u4330
  7562   0024CC                     u4331:
  7563   0024CC  EF4B  F012         	goto	l3766
  7564   0024D0                     u4330:
  7565   0024D0  EF76  F012         	goto	l815
  7566   0024D4                     l3770:
  7567   0024D4  2A0A               	incf	___xxtofl@exp^0,f,c
  7568   0024D6  0E01               	movlw	1
  7569   0024D8  260B               	addwf	___xxtofl@arg^0,f,c
  7570   0024DA  0E00               	movlw	0
  7571   0024DC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7572   0024DE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7573   0024E0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7574   0024E2  90D8               	bcf	status,0,c
  7575   0024E4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7576   0024E6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7577   0024E8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7578   0024EA  320B               	rrcf	___xxtofl@arg^0,f,c
  7579   0024EC                     l815:
  7580   0024EC  0E00               	movlw	0
  7581   0024EE  140B               	andwf	___xxtofl@arg^0,w,c
  7582   0024F0  6E05               	movwf	??___xxtofl^0,c
  7583   0024F2  0E00               	movlw	0
  7584   0024F4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7585   0024F6  6E06               	movwf	(??___xxtofl+1)^0,c
  7586   0024F8  0E00               	movlw	0
  7587   0024FA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7588   0024FC  6E07               	movwf	(??___xxtofl+2)^0,c
  7589   0024FE  0EFF               	movlw	255
  7590   002500  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7591   002502  6E08               	movwf	(??___xxtofl+3)^0,c
  7592   002504  5005               	movf	??___xxtofl^0,w,c
  7593   002506  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7594   002508  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7595   00250A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7596   00250C  A4D8               	btfss	status,2,c
  7597   00250E  EF8B  F012         	goto	u4341
  7598   002512  EF8D  F012         	goto	u4340
  7599   002516                     u4341:
  7600   002516  EF6A  F012         	goto	l3770
  7601   00251A                     u4340:
  7602   00251A  EF95  F012         	goto	l3778
  7603   00251E                     l3776:
  7604   00251E  060A               	decf	___xxtofl@exp^0,f,c
  7605   002520  90D8               	bcf	status,0,c
  7606   002522  360B               	rlcf	___xxtofl@arg^0,f,c
  7607   002524  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7608   002526  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7609   002528  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7610   00252A                     l3778:
  7611   00252A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7612   00252C  EF9A  F012         	goto	u4351
  7613   002530  EF9C  F012         	goto	u4350
  7614   002534                     u4351:
  7615   002534  EFA4  F012         	goto	l822
  7616   002538                     u4350:
  7617   002538  0E02               	movlw	2
  7618   00253A  600A               	cpfslt	___xxtofl@exp^0,c
  7619   00253C  EFA2  F012         	goto	u4361
  7620   002540  EFA4  F012         	goto	u4360
  7621   002544                     u4361:
  7622   002544  EF8F  F012         	goto	l3776
  7623   002548                     u4360:
  7624   002548                     l822:
  7625   002548  B00A               	btfsc	___xxtofl@exp^0,0,c
  7626   00254A  EFA9  F012         	goto	u4371
  7627   00254E  EFAB  F012         	goto	u4370
  7628   002552                     u4371:
  7629   002552  EFAC  F012         	goto	l3784
  7630   002556                     u4370:
  7631   002556  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7632   002558                     l3784:
  7633   002558  90D8               	bcf	status,0,c
  7634   00255A  320A               	rrcf	___xxtofl@exp^0,f,c
  7635   00255C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7636   002560  6A06               	clrf	(??___xxtofl+1)^0,c
  7637   002562  6A07               	clrf	(??___xxtofl+2)^0,c
  7638   002564  6A08               	clrf	(??___xxtofl+3)^0,c
  7639   002566  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7640   00256A  6A07               	clrf	(??___xxtofl+2)^0,c
  7641   00256C  6A06               	clrf	(??___xxtofl+1)^0,c
  7642   00256E  6A05               	clrf	??___xxtofl^0,c
  7643   002570  5005               	movf	??___xxtofl^0,w,c
  7644   002572  120B               	iorwf	___xxtofl@arg^0,f,c
  7645   002574  5006               	movf	(??___xxtofl+1)^0,w,c
  7646   002576  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7647   002578  5007               	movf	(??___xxtofl+2)^0,w,c
  7648   00257A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7649   00257C  5008               	movf	(??___xxtofl+3)^0,w,c
  7650   00257E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7651   002580  5009               	movf	___xxtofl@sign^0,w,c
  7652   002582  B4D8               	btfsc	status,2,c
  7653   002584  EFC6  F012         	goto	u4381
  7654   002588  EFC8  F012         	goto	u4380
  7655   00258C                     u4381:
  7656   00258C  EFD0  F012         	goto	l3794
  7657   002590                     u4380:
  7658   002590  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7659   002592  EFCF  F012         	goto	u4390
  7660   002596  EFCD  F012         	goto	u4391
  7661   00259A                     u4391:
  7662   00259A  EFD0  F012         	goto	l3794
  7663   00259E                     u4390:
  7664   00259E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7665   0025A0                     l3794:
  7666   0025A0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7667   0025A4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7668   0025A8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7669   0025AC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7670   0025B0                     l811:
  7671   0025B0  0012               	return		;funcret
  7672   0025B2                     __end_of___xxtofl:
  7673                           	callstack 0
  7674                           
  7675 ;; *************** function ___flmul *****************
  7676 ;; Defined at:
  7677 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  b               4   14[COMRAM] unsigned char 
  7680 ;;  a               4   18[COMRAM] unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  prod            4   33[COMRAM] struct .
  7683 ;;  grs             4   27[COMRAM] unsigned long 
  7684 ;;  temp            2   37[COMRAM] struct .
  7685 ;;  bexp            1   32[COMRAM] unsigned char 
  7686 ;;  aexp            1   31[COMRAM] unsigned char 
  7687 ;;  sign            1   26[COMRAM] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  4   14[COMRAM] unsigned char 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0, prodl, prodh
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7697 ;;      Params:         8       0       0       0       0       0       0
  7698 ;;      Locals:        13       0       0       0       0       0       0
  7699 ;;      Temps:          4       0       0       0       0       0       0
  7700 ;;      Totals:        25       0       0       0       0       0       0
  7701 ;;Total ram usage:       25 bytes
  7702 ;; Hardware stack levels used: 1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		_equation_SENSOR
  7707 ;;		_efgtoa
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text37
  7712   001574                     __ptext37:
  7713                           	callstack 0
  7714   001574                     ___flmul:
  7715                           	callstack 25
  7716   001574  5012               	movf	(___flmul@b+3)^0,w,c
  7717   001576  0B80               	andlw	128
  7718   001578  6E1B               	movwf	___flmul@sign^0,c
  7719   00157A  5012               	movf	(___flmul@b+3)^0,w,c
  7720   00157C  2412               	addwf	(___flmul@b+3)^0,w,c
  7721   00157E  6E21               	movwf	___flmul@bexp^0,c
  7722   001580  AE11               	btfss	(___flmul@b+2)^0,7,c
  7723   001582  EFC5  F00A         	goto	u2941
  7724   001586  EFC7  F00A         	goto	u2940
  7725   00158A                     u2941:
  7726   00158A  EFC8  F00A         	goto	l2874
  7727   00158E                     u2940:
  7728   00158E  8021               	bsf	___flmul@bexp^0,0,c
  7729   001590                     l2874:
  7730   001590  5021               	movf	___flmul@bexp^0,w,c
  7731   001592  B4D8               	btfsc	status,2,c
  7732   001594  EFCE  F00A         	goto	u2951
  7733   001598  EFD0  F00A         	goto	u2950
  7734   00159C                     u2951:
  7735   00159C  EFE3  F00A         	goto	l2882
  7736   0015A0                     u2950:
  7737   0015A0  2821               	incf	___flmul@bexp^0,w,c
  7738   0015A2  A4D8               	btfss	status,2,c
  7739   0015A4  EFD6  F00A         	goto	u2961
  7740   0015A8  EFD8  F00A         	goto	u2960
  7741   0015AC                     u2961:
  7742   0015AC  EFE0  F00A         	goto	l2880
  7743   0015B0                     u2960:
  7744   0015B0  0E00               	movlw	0
  7745   0015B2  6E0F               	movwf	___flmul@b^0,c
  7746   0015B4  0E00               	movlw	0
  7747   0015B6  6E10               	movwf	(___flmul@b+1)^0,c
  7748   0015B8  0E00               	movlw	0
  7749   0015BA  6E11               	movwf	(___flmul@b+2)^0,c
  7750   0015BC  0E00               	movlw	0
  7751   0015BE  6E12               	movwf	(___flmul@b+3)^0,c
  7752   0015C0                     l2880:
  7753   0015C0  8E11               	bsf	(___flmul@b+2)^0,7,c
  7754   0015C2  EFEB  F00A         	goto	l2884
  7755   0015C6                     l2882:
  7756   0015C6  0E00               	movlw	0
  7757   0015C8  6E0F               	movwf	___flmul@b^0,c
  7758   0015CA  0E00               	movlw	0
  7759   0015CC  6E10               	movwf	(___flmul@b+1)^0,c
  7760   0015CE  0E00               	movlw	0
  7761   0015D0  6E11               	movwf	(___flmul@b+2)^0,c
  7762   0015D2  0E00               	movlw	0
  7763   0015D4  6E12               	movwf	(___flmul@b+3)^0,c
  7764   0015D6                     l2884:
  7765   0015D6  5016               	movf	(___flmul@a+3)^0,w,c
  7766   0015D8  0B80               	andlw	128
  7767   0015DA  1A1B               	xorwf	___flmul@sign^0,f,c
  7768   0015DC  5016               	movf	(___flmul@a+3)^0,w,c
  7769   0015DE  2416               	addwf	(___flmul@a+3)^0,w,c
  7770   0015E0  6E20               	movwf	___flmul@aexp^0,c
  7771   0015E2  AE15               	btfss	(___flmul@a+2)^0,7,c
  7772   0015E4  EFF6  F00A         	goto	u2971
  7773   0015E8  EFF8  F00A         	goto	u2970
  7774   0015EC                     u2971:
  7775   0015EC  EFF9  F00A         	goto	l2892
  7776   0015F0                     u2970:
  7777   0015F0  8020               	bsf	___flmul@aexp^0,0,c
  7778   0015F2                     l2892:
  7779   0015F2  5020               	movf	___flmul@aexp^0,w,c
  7780   0015F4  B4D8               	btfsc	status,2,c
  7781   0015F6  EFFF  F00A         	goto	u2981
  7782   0015FA  EF01  F00B         	goto	u2980
  7783   0015FE                     u2981:
  7784   0015FE  EF14  F00B         	goto	l2900
  7785   001602                     u2980:
  7786   001602  2820               	incf	___flmul@aexp^0,w,c
  7787   001604  A4D8               	btfss	status,2,c
  7788   001606  EF07  F00B         	goto	u2991
  7789   00160A  EF09  F00B         	goto	u2990
  7790   00160E                     u2991:
  7791   00160E  EF11  F00B         	goto	l2898
  7792   001612                     u2990:
  7793   001612  0E00               	movlw	0
  7794   001614  6E13               	movwf	___flmul@a^0,c
  7795   001616  0E00               	movlw	0
  7796   001618  6E14               	movwf	(___flmul@a+1)^0,c
  7797   00161A  0E00               	movlw	0
  7798   00161C  6E15               	movwf	(___flmul@a+2)^0,c
  7799   00161E  0E00               	movlw	0
  7800   001620  6E16               	movwf	(___flmul@a+3)^0,c
  7801   001622                     l2898:
  7802   001622  8E15               	bsf	(___flmul@a+2)^0,7,c
  7803   001624  EF1C  F00B         	goto	l767
  7804   001628                     l2900:
  7805   001628  0E00               	movlw	0
  7806   00162A  6E13               	movwf	___flmul@a^0,c
  7807   00162C  0E00               	movlw	0
  7808   00162E  6E14               	movwf	(___flmul@a+1)^0,c
  7809   001630  0E00               	movlw	0
  7810   001632  6E15               	movwf	(___flmul@a+2)^0,c
  7811   001634  0E00               	movlw	0
  7812   001636  6E16               	movwf	(___flmul@a+3)^0,c
  7813   001638                     l767:
  7814   001638  5020               	movf	___flmul@aexp^0,w,c
  7815   00163A  B4D8               	btfsc	status,2,c
  7816   00163C  EF22  F00B         	goto	u3001
  7817   001640  EF24  F00B         	goto	u3000
  7818   001644                     u3001:
  7819   001644  EF2C  F00B         	goto	l2904
  7820   001648                     u3000:
  7821   001648  5021               	movf	___flmul@bexp^0,w,c
  7822   00164A  A4D8               	btfss	status,2,c
  7823   00164C  EF2A  F00B         	goto	u3011
  7824   001650  EF2C  F00B         	goto	u3010
  7825   001654                     u3011:
  7826   001654  EF36  F00B         	goto	l2908
  7827   001658                     u3010:
  7828   001658                     l2904:
  7829   001658  0E00               	movlw	0
  7830   00165A  6E0F               	movwf	?___flmul^0,c
  7831   00165C  0E00               	movlw	0
  7832   00165E  6E10               	movwf	(?___flmul+1)^0,c
  7833   001660  0E00               	movlw	0
  7834   001662  6E11               	movwf	(?___flmul+2)^0,c
  7835   001664  0E00               	movlw	0
  7836   001666  6E12               	movwf	(?___flmul+3)^0,c
  7837   001668  EFCE  F00C         	goto	l771
  7838   00166C                     l2908:
  7839   00166C  5015               	movf	(___flmul@a+2)^0,w,c
  7840   00166E  020F               	mulwf	___flmul@b^0,c
  7841   001670  CFF3 F026          	movff	prodl,___flmul@temp
  7842   001674  CFF4 F027          	movff	prodh,___flmul@temp+1
  7843   001678  5026               	movf	___flmul@temp^0,w,c
  7844   00167A  6E1C               	movwf	___flmul@grs^0,c
  7845   00167C  6A1D               	clrf	(___flmul@grs+1)^0,c
  7846   00167E  6A1E               	clrf	(___flmul@grs+2)^0,c
  7847   001680  6A1F               	clrf	(___flmul@grs+3)^0,c
  7848   001682  5027               	movf	(___flmul@temp+1)^0,w,c
  7849   001684  6E22               	movwf	___flmul@prod^0,c
  7850   001686  6A23               	clrf	(___flmul@prod+1)^0,c
  7851   001688  6A24               	clrf	(___flmul@prod+2)^0,c
  7852   00168A  6A25               	clrf	(___flmul@prod+3)^0,c
  7853   00168C  5014               	movf	(___flmul@a+1)^0,w,c
  7854   00168E  0210               	mulwf	(___flmul@b+1)^0,c
  7855   001690  CFF3 F026          	movff	prodl,___flmul@temp
  7856   001694  CFF4 F027          	movff	prodh,___flmul@temp+1
  7857   001698  5026               	movf	___flmul@temp^0,w,c
  7858   00169A  261C               	addwf	___flmul@grs^0,f,c
  7859   00169C  0E00               	movlw	0
  7860   00169E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7861   0016A0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7862   0016A2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7863   0016A4  5027               	movf	(___flmul@temp+1)^0,w,c
  7864   0016A6  2622               	addwf	___flmul@prod^0,f,c
  7865   0016A8  0E00               	movlw	0
  7866   0016AA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7867   0016AC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7868   0016AE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7869   0016B0  5013               	movf	___flmul@a^0,w,c
  7870   0016B2  0211               	mulwf	(___flmul@b+2)^0,c
  7871   0016B4  CFF3 F026          	movff	prodl,___flmul@temp
  7872   0016B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  7873   0016BC  5026               	movf	___flmul@temp^0,w,c
  7874   0016BE  261C               	addwf	___flmul@grs^0,f,c
  7875   0016C0  0E00               	movlw	0
  7876   0016C2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7877   0016C4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7878   0016C6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7879   0016C8  5027               	movf	(___flmul@temp+1)^0,w,c
  7880   0016CA  2622               	addwf	___flmul@prod^0,f,c
  7881   0016CC  0E00               	movlw	0
  7882   0016CE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7883   0016D0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7884   0016D2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7885   0016D4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7886   0016D8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7887   0016DC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7888   0016E0  6A1C               	clrf	___flmul@grs^0,c
  7889   0016E2  5013               	movf	___flmul@a^0,w,c
  7890   0016E4  0210               	mulwf	(___flmul@b+1)^0,c
  7891   0016E6  CFF3 F026          	movff	prodl,___flmul@temp
  7892   0016EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  7893   0016EE  5026               	movf	___flmul@temp^0,w,c
  7894   0016F0  261C               	addwf	___flmul@grs^0,f,c
  7895   0016F2  5027               	movf	(___flmul@temp+1)^0,w,c
  7896   0016F4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7897   0016F6  0E00               	movlw	0
  7898   0016F8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7899   0016FA  0E00               	movlw	0
  7900   0016FC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7901   0016FE  5014               	movf	(___flmul@a+1)^0,w,c
  7902   001700  020F               	mulwf	___flmul@b^0,c
  7903   001702  CFF3 F026          	movff	prodl,___flmul@temp
  7904   001706  CFF4 F027          	movff	prodh,___flmul@temp+1
  7905   00170A  5026               	movf	___flmul@temp^0,w,c
  7906   00170C  261C               	addwf	___flmul@grs^0,f,c
  7907   00170E  5027               	movf	(___flmul@temp+1)^0,w,c
  7908   001710  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7909   001712  0E00               	movlw	0
  7910   001714  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7911   001716  0E00               	movlw	0
  7912   001718  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7913   00171A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7914   00171E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7915   001722  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7916   001726  6A1C               	clrf	___flmul@grs^0,c
  7917   001728  5013               	movf	___flmul@a^0,w,c
  7918   00172A  020F               	mulwf	___flmul@b^0,c
  7919   00172C  CFF3 F026          	movff	prodl,___flmul@temp
  7920   001730  CFF4 F027          	movff	prodh,___flmul@temp+1
  7921   001734  5026               	movf	___flmul@temp^0,w,c
  7922   001736  261C               	addwf	___flmul@grs^0,f,c
  7923   001738  5027               	movf	(___flmul@temp+1)^0,w,c
  7924   00173A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7925   00173C  0E00               	movlw	0
  7926   00173E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7927   001740  0E00               	movlw	0
  7928   001742  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7929   001744  5015               	movf	(___flmul@a+2)^0,w,c
  7930   001746  0210               	mulwf	(___flmul@b+1)^0,c
  7931   001748  CFF3 F026          	movff	prodl,___flmul@temp
  7932   00174C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7933   001750  5026               	movf	___flmul@temp^0,w,c
  7934   001752  2622               	addwf	___flmul@prod^0,f,c
  7935   001754  5027               	movf	(___flmul@temp+1)^0,w,c
  7936   001756  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7937   001758  0E00               	movlw	0
  7938   00175A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7939   00175C  0E00               	movlw	0
  7940   00175E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7941   001760  5014               	movf	(___flmul@a+1)^0,w,c
  7942   001762  0211               	mulwf	(___flmul@b+2)^0,c
  7943   001764  CFF3 F026          	movff	prodl,___flmul@temp
  7944   001768  CFF4 F027          	movff	prodh,___flmul@temp+1
  7945   00176C  5026               	movf	___flmul@temp^0,w,c
  7946   00176E  2622               	addwf	___flmul@prod^0,f,c
  7947   001770  5027               	movf	(___flmul@temp+1)^0,w,c
  7948   001772  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7949   001774  0E00               	movlw	0
  7950   001776  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7951   001778  0E00               	movlw	0
  7952   00177A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7953   00177C  5015               	movf	(___flmul@a+2)^0,w,c
  7954   00177E  0211               	mulwf	(___flmul@b+2)^0,c
  7955   001780  CFF3 F026          	movff	prodl,___flmul@temp
  7956   001784  CFF4 F027          	movff	prodh,___flmul@temp+1
  7957   001788  5026               	movf	___flmul@temp^0,w,c
  7958   00178A  6E17               	movwf	??___flmul^0,c
  7959   00178C  5027               	movf	(___flmul@temp+1)^0,w,c
  7960   00178E  6E18               	movwf	(??___flmul+1)^0,c
  7961   001790  6A19               	clrf	(??___flmul+2)^0,c
  7962   001792  6A1A               	clrf	(??___flmul+3)^0,c
  7963   001794  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7964   001798  C018  F019         	movff	??___flmul+1,??___flmul+2
  7965   00179C  C017  F018         	movff	??___flmul,??___flmul+1
  7966   0017A0  6A17               	clrf	??___flmul^0,c
  7967   0017A2  5017               	movf	??___flmul^0,w,c
  7968   0017A4  2622               	addwf	___flmul@prod^0,f,c
  7969   0017A6  5018               	movf	(??___flmul+1)^0,w,c
  7970   0017A8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7971   0017AA  5019               	movf	(??___flmul+2)^0,w,c
  7972   0017AC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7973   0017AE  501A               	movf	(??___flmul+3)^0,w,c
  7974   0017B0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7975   0017B2  C01C  F017         	movff	___flmul@grs,??___flmul
  7976   0017B6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7977   0017BA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7978   0017BE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7979   0017C2  0E19               	movlw	25
  7980   0017C4  EFE9  F00B         	goto	u3020
  7981   0017C8                     u3025:
  7982   0017C8  90D8               	bcf	status,0,c
  7983   0017CA  321A               	rrcf	(??___flmul+3)^0,f,c
  7984   0017CC  3219               	rrcf	(??___flmul+2)^0,f,c
  7985   0017CE  3218               	rrcf	(??___flmul+1)^0,f,c
  7986   0017D0  3217               	rrcf	??___flmul^0,f,c
  7987   0017D2                     u3020:
  7988   0017D2  2EE8               	decfsz	wreg,f,c
  7989   0017D4  EFE4  F00B         	goto	u3025
  7990   0017D8  5017               	movf	??___flmul^0,w,c
  7991   0017DA  2622               	addwf	___flmul@prod^0,f,c
  7992   0017DC  5018               	movf	(??___flmul+1)^0,w,c
  7993   0017DE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7994   0017E0  5019               	movf	(??___flmul+2)^0,w,c
  7995   0017E2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7996   0017E4  501A               	movf	(??___flmul+3)^0,w,c
  7997   0017E6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7998   0017E8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7999   0017EC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8000   0017F0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8001   0017F4  6A1C               	clrf	___flmul@grs^0,c
  8002   0017F6  5020               	movf	___flmul@aexp^0,w,c
  8003   0017F8  C021  F017         	movff	___flmul@bexp,??___flmul
  8004   0017FC  6A18               	clrf	(??___flmul+1)^0,c
  8005   0017FE  2617               	addwf	??___flmul^0,f,c
  8006   001800  0E00               	movlw	0
  8007   001802  2218               	addwfc	(??___flmul+1)^0,f,c
  8008   001804  0E82               	movlw	130
  8009   001806  2417               	addwf	??___flmul^0,w,c
  8010   001808  6E26               	movwf	___flmul@temp^0,c
  8011   00180A  0EFF               	movlw	255
  8012   00180C  2018               	addwfc	(??___flmul+1)^0,w,c
  8013   00180E  6E27               	movwf	(___flmul@temp+1)^0,c
  8014   001810  EF1F  F00C         	goto	l2956
  8015   001814                     l2950:
  8016   001814  90D8               	bcf	status,0,c
  8017   001816  3622               	rlcf	___flmul@prod^0,f,c
  8018   001818  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8019   00181A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8020   00181C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8021   00181E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8022   001820  EF14  F00C         	goto	u3031
  8023   001824  EF16  F00C         	goto	u3030
  8024   001828                     u3031:
  8025   001828  EF17  F00C         	goto	l774
  8026   00182C                     u3030:
  8027   00182C  8022               	bsf	___flmul@prod^0,0,c
  8028   00182E                     l774:
  8029   00182E  90D8               	bcf	status,0,c
  8030   001830  361C               	rlcf	___flmul@grs^0,f,c
  8031   001832  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8032   001834  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8033   001836  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8034   001838  0626               	decf	___flmul@temp^0,f,c
  8035   00183A  A0D8               	btfss	status,0,c
  8036   00183C  0627               	decf	(___flmul@temp+1)^0,f,c
  8037   00183E                     l2956:
  8038   00183E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8039   001840  EF24  F00C         	goto	u3041
  8040   001844  EF26  F00C         	goto	u3040
  8041   001848                     u3041:
  8042   001848  EF0A  F00C         	goto	l2950
  8043   00184C                     u3040:
  8044   00184C  0E00               	movlw	0
  8045   00184E  6E20               	movwf	___flmul@aexp^0,c
  8046   001850  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8047   001852  EF2D  F00C         	goto	u3051
  8048   001856  EF2F  F00C         	goto	u3050
  8049   00185A                     u3051:
  8050   00185A  EF53  F00C         	goto	l776
  8051   00185E                     u3050:
  8052   00185E  0EFF               	movlw	255
  8053   001860  141C               	andwf	___flmul@grs^0,w,c
  8054   001862  6E17               	movwf	??___flmul^0,c
  8055   001864  0EFF               	movlw	255
  8056   001866  141D               	andwf	(___flmul@grs+1)^0,w,c
  8057   001868  6E18               	movwf	(??___flmul+1)^0,c
  8058   00186A  0EFF               	movlw	255
  8059   00186C  141E               	andwf	(___flmul@grs+2)^0,w,c
  8060   00186E  6E19               	movwf	(??___flmul+2)^0,c
  8061   001870  0E7F               	movlw	127
  8062   001872  141F               	andwf	(___flmul@grs+3)^0,w,c
  8063   001874  6E1A               	movwf	(??___flmul+3)^0,c
  8064   001876  5017               	movf	??___flmul^0,w,c
  8065   001878  1018               	iorwf	(??___flmul+1)^0,w,c
  8066   00187A  1019               	iorwf	(??___flmul+2)^0,w,c
  8067   00187C  101A               	iorwf	(??___flmul+3)^0,w,c
  8068   00187E  B4D8               	btfsc	status,2,c
  8069   001880  EF44  F00C         	goto	u3061
  8070   001884  EF46  F00C         	goto	u3060
  8071   001888                     u3061:
  8072   001888  EF4A  F00C         	goto	l777
  8073   00188C                     u3060:
  8074   00188C                     l2964:
  8075   00188C  0E01               	movlw	1
  8076   00188E  6E20               	movwf	___flmul@aexp^0,c
  8077   001890  EF53  F00C         	goto	l776
  8078   001894                     l777:
  8079   001894  A022               	btfss	___flmul@prod^0,0,c
  8080   001896  EF4F  F00C         	goto	u3071
  8081   00189A  EF51  F00C         	goto	u3070
  8082   00189E                     u3071:
  8083   00189E  EF53  F00C         	goto	l776
  8084   0018A2                     u3070:
  8085   0018A2  EF46  F00C         	goto	l2964
  8086   0018A6                     l776:
  8087   0018A6  5020               	movf	___flmul@aexp^0,w,c
  8088   0018A8  B4D8               	btfsc	status,2,c
  8089   0018AA  EF59  F00C         	goto	u3081
  8090   0018AE  EF5B  F00C         	goto	u3080
  8091   0018B2                     u3081:
  8092   0018B2  EF7F  F00C         	goto	l2976
  8093   0018B6                     u3080:
  8094   0018B6  0E01               	movlw	1
  8095   0018B8  2622               	addwf	___flmul@prod^0,f,c
  8096   0018BA  0E00               	movlw	0
  8097   0018BC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8098   0018BE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8099   0018C0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8100   0018C2  A025               	btfss	(___flmul@prod+3)^0,0,c
  8101   0018C4  EF66  F00C         	goto	u3091
  8102   0018C8  EF68  F00C         	goto	u3090
  8103   0018CC                     u3091:
  8104   0018CC  EF7F  F00C         	goto	l2976
  8105   0018D0                     u3090:
  8106   0018D0  C022  F017         	movff	___flmul@prod,??___flmul
  8107   0018D4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8108   0018D8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8109   0018DC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8110   0018E0  341A               	rlcf	(??___flmul+3)^0,w,c
  8111   0018E2  321A               	rrcf	(??___flmul+3)^0,f,c
  8112   0018E4  3219               	rrcf	(??___flmul+2)^0,f,c
  8113   0018E6  3218               	rrcf	(??___flmul+1)^0,f,c
  8114   0018E8  3217               	rrcf	??___flmul^0,f,c
  8115   0018EA  C017  F022         	movff	??___flmul,___flmul@prod
  8116   0018EE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8117   0018F2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8118   0018F6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8119   0018FA  4A26               	infsnz	___flmul@temp^0,f,c
  8120   0018FC  2A27               	incf	(___flmul@temp+1)^0,f,c
  8121   0018FE                     l2976:
  8122   0018FE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8123   001900  EF8A  F00C         	goto	u3101
  8124   001904  5027               	movf	(___flmul@temp+1)^0,w,c
  8125   001906  E108               	bnz	u3100
  8126   001908  2826               	incf	___flmul@temp^0,w,c
  8127   00190A  A0D8               	btfss	status,0,c
  8128   00190C  EF8A  F00C         	goto	u3101
  8129   001910  EF8C  F00C         	goto	u3100
  8130   001914                     u3101:
  8131   001914  EF96  F00C         	goto	l2980
  8132   001918                     u3100:
  8133   001918  0E00               	movlw	0
  8134   00191A  6E22               	movwf	___flmul@prod^0,c
  8135   00191C  0E00               	movlw	0
  8136   00191E  6E23               	movwf	(___flmul@prod+1)^0,c
  8137   001920  0E80               	movlw	128
  8138   001922  6E24               	movwf	(___flmul@prod+2)^0,c
  8139   001924  0E7F               	movlw	127
  8140   001926  6E25               	movwf	(___flmul@prod+3)^0,c
  8141   001928  EFC4  F00C         	goto	l2992
  8142   00192C                     l2980:
  8143   00192C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8144   00192E  EFA3  F00C         	goto	u3110
  8145   001932  5027               	movf	(___flmul@temp+1)^0,w,c
  8146   001934  E106               	bnz	u3111
  8147   001936  0426               	decf	___flmul@temp^0,w,c
  8148   001938  B0D8               	btfsc	status,0,c
  8149   00193A  EFA1  F00C         	goto	u3111
  8150   00193E  EFA3  F00C         	goto	u3110
  8151   001942                     u3111:
  8152   001942  EFAF  F00C         	goto	l784
  8153   001946                     u3110:
  8154   001946  0E00               	movlw	0
  8155   001948  6E22               	movwf	___flmul@prod^0,c
  8156   00194A  0E00               	movlw	0
  8157   00194C  6E23               	movwf	(___flmul@prod+1)^0,c
  8158   00194E  0E00               	movlw	0
  8159   001950  6E24               	movwf	(___flmul@prod+2)^0,c
  8160   001952  0E00               	movlw	0
  8161   001954  6E25               	movwf	(___flmul@prod+3)^0,c
  8162   001956  0E00               	movlw	0
  8163   001958  6E1B               	movwf	___flmul@sign^0,c
  8164   00195A  EFC4  F00C         	goto	l2992
  8165   00195E                     l784:
  8166   00195E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8167   001962  0EFF               	movlw	255
  8168   001964  1622               	andwf	___flmul@prod^0,f,c
  8169   001966  0EFF               	movlw	255
  8170   001968  1623               	andwf	(___flmul@prod+1)^0,f,c
  8171   00196A  0E7F               	movlw	127
  8172   00196C  1624               	andwf	(___flmul@prod+2)^0,f,c
  8173   00196E  0E00               	movlw	0
  8174   001970  1625               	andwf	(___flmul@prod+3)^0,f,c
  8175   001972  A021               	btfss	___flmul@bexp^0,0,c
  8176   001974  EFBE  F00C         	goto	u3121
  8177   001978  EFC0  F00C         	goto	u3120
  8178   00197C                     u3121:
  8179   00197C  EFC1  F00C         	goto	l2990
  8180   001980                     u3120:
  8181   001980  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8182   001982                     l2990:
  8183   001982  90D8               	bcf	status,0,c
  8184   001984  3021               	rrcf	___flmul@bexp^0,w,c
  8185   001986  6E25               	movwf	(___flmul@prod+3)^0,c
  8186   001988                     l2992:
  8187   001988  501B               	movf	___flmul@sign^0,w,c
  8188   00198A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8189   00198C  C022  F00F         	movff	___flmul@prod,?___flmul
  8190   001990  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8191   001994  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8192   001998  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8193   00199C                     l771:
  8194   00199C  0012               	return		;funcret
  8195   00199E                     __end_of___flmul:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function ___fldiv *****************
  8199 ;; Defined at:
  8200 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  b               4   39[COMRAM] unsigned char 
  8203 ;;  a               4   43[COMRAM] unsigned char 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  grs             4   58[COMRAM] unsigned long 
  8206 ;;  rem             4   51[COMRAM] unsigned long 
  8207 ;;  new_exp         2   56[COMRAM] short 
  8208 ;;  aexp            1   63[COMRAM] unsigned char 
  8209 ;;  bexp            1   62[COMRAM] unsigned char 
  8210 ;;  sign            1   55[COMRAM] unsigned char 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  4   39[COMRAM] unsigned char 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8220 ;;      Params:         8       0       0       0       0       0       0
  8221 ;;      Locals:        13       0       0       0       0       0       0
  8222 ;;      Temps:          4       0       0       0       0       0       0
  8223 ;;      Totals:        25       0       0       0       0       0       0
  8224 ;;Total ram usage:       25 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_equation_SENSOR
  8230 ;;		_efgtoa
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text38
  8235   00199E                     __ptext38:
  8236                           	callstack 0
  8237   00199E                     ___fldiv:
  8238                           	callstack 25
  8239   00199E  502B               	movf	(___fldiv@b+3)^0,w,c
  8240   0019A0  0B80               	andlw	128
  8241   0019A2  6E38               	movwf	___fldiv@sign^0,c
  8242   0019A4  502B               	movf	(___fldiv@b+3)^0,w,c
  8243   0019A6  242B               	addwf	(___fldiv@b+3)^0,w,c
  8244   0019A8  6E3F               	movwf	___fldiv@bexp^0,c
  8245   0019AA  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8246   0019AC  EFDA  F00C         	goto	u2711
  8247   0019B0  EFDC  F00C         	goto	u2710
  8248   0019B4                     u2711:
  8249   0019B4  EFDD  F00C         	goto	l2736
  8250   0019B8                     u2710:
  8251   0019B8  803F               	bsf	___fldiv@bexp^0,0,c
  8252   0019BA                     l2736:
  8253   0019BA  503F               	movf	___fldiv@bexp^0,w,c
  8254   0019BC  B4D8               	btfsc	status,2,c
  8255   0019BE  EFE3  F00C         	goto	u2721
  8256   0019C2  EFE5  F00C         	goto	u2720
  8257   0019C6                     u2721:
  8258   0019C6  EFFA  F00C         	goto	l2746
  8259   0019CA                     u2720:
  8260   0019CA  283F               	incf	___fldiv@bexp^0,w,c
  8261   0019CC  A4D8               	btfss	status,2,c
  8262   0019CE  EFEB  F00C         	goto	u2731
  8263   0019D2  EFED  F00C         	goto	u2730
  8264   0019D6                     u2731:
  8265   0019D6  EFF5  F00C         	goto	l2742
  8266   0019DA                     u2730:
  8267   0019DA  0E00               	movlw	0
  8268   0019DC  6E28               	movwf	___fldiv@b^0,c
  8269   0019DE  0E00               	movlw	0
  8270   0019E0  6E29               	movwf	(___fldiv@b+1)^0,c
  8271   0019E2  0E00               	movlw	0
  8272   0019E4  6E2A               	movwf	(___fldiv@b+2)^0,c
  8273   0019E6  0E00               	movlw	0
  8274   0019E8  6E2B               	movwf	(___fldiv@b+3)^0,c
  8275   0019EA                     l2742:
  8276   0019EA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8277   0019EC  0E00               	movlw	0
  8278   0019EE  6E2B               	movwf	(___fldiv@b+3)^0,c
  8279   0019F0  EF02  F00D         	goto	l2748
  8280   0019F4                     l2746:
  8281   0019F4  0E00               	movlw	0
  8282   0019F6  6E28               	movwf	___fldiv@b^0,c
  8283   0019F8  0E00               	movlw	0
  8284   0019FA  6E29               	movwf	(___fldiv@b+1)^0,c
  8285   0019FC  0E00               	movlw	0
  8286   0019FE  6E2A               	movwf	(___fldiv@b+2)^0,c
  8287   001A00  0E00               	movlw	0
  8288   001A02  6E2B               	movwf	(___fldiv@b+3)^0,c
  8289   001A04                     l2748:
  8290   001A04  502F               	movf	(___fldiv@a+3)^0,w,c
  8291   001A06  0B80               	andlw	128
  8292   001A08  1A38               	xorwf	___fldiv@sign^0,f,c
  8293   001A0A  502F               	movf	(___fldiv@a+3)^0,w,c
  8294   001A0C  242F               	addwf	(___fldiv@a+3)^0,w,c
  8295   001A0E  6E40               	movwf	___fldiv@aexp^0,c
  8296   001A10  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  8297   001A12  EF0D  F00D         	goto	u2741
  8298   001A16  EF0F  F00D         	goto	u2740
  8299   001A1A                     u2741:
  8300   001A1A  EF10  F00D         	goto	l2756
  8301   001A1E                     u2740:
  8302   001A1E  8040               	bsf	___fldiv@aexp^0,0,c
  8303   001A20                     l2756:
  8304   001A20  5040               	movf	___fldiv@aexp^0,w,c
  8305   001A22  B4D8               	btfsc	status,2,c
  8306   001A24  EF16  F00D         	goto	u2751
  8307   001A28  EF18  F00D         	goto	u2750
  8308   001A2C                     u2751:
  8309   001A2C  EF2D  F00D         	goto	l2766
  8310   001A30                     u2750:
  8311   001A30  2840               	incf	___fldiv@aexp^0,w,c
  8312   001A32  A4D8               	btfss	status,2,c
  8313   001A34  EF1E  F00D         	goto	u2761
  8314   001A38  EF20  F00D         	goto	u2760
  8315   001A3C                     u2761:
  8316   001A3C  EF28  F00D         	goto	l2762
  8317   001A40                     u2760:
  8318   001A40  0E00               	movlw	0
  8319   001A42  6E2C               	movwf	___fldiv@a^0,c
  8320   001A44  0E00               	movlw	0
  8321   001A46  6E2D               	movwf	(___fldiv@a+1)^0,c
  8322   001A48  0E00               	movlw	0
  8323   001A4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  8324   001A4C  0E00               	movlw	0
  8325   001A4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  8326   001A50                     l2762:
  8327   001A50  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  8328   001A52  0E00               	movlw	0
  8329   001A54  6E2F               	movwf	(___fldiv@a+3)^0,c
  8330   001A56  EF35  F00D         	goto	l2768
  8331   001A5A                     l2766:
  8332   001A5A  0E00               	movlw	0
  8333   001A5C  6E2C               	movwf	___fldiv@a^0,c
  8334   001A5E  0E00               	movlw	0
  8335   001A60  6E2D               	movwf	(___fldiv@a+1)^0,c
  8336   001A62  0E00               	movlw	0
  8337   001A64  6E2E               	movwf	(___fldiv@a+2)^0,c
  8338   001A66  0E00               	movlw	0
  8339   001A68  6E2F               	movwf	(___fldiv@a+3)^0,c
  8340   001A6A                     l2768:
  8341   001A6A  502C               	movf	___fldiv@a^0,w,c
  8342   001A6C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  8343   001A6E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  8344   001A70  102F               	iorwf	(___fldiv@a+3)^0,w,c
  8345   001A72  A4D8               	btfss	status,2,c
  8346   001A74  EF3E  F00D         	goto	u2771
  8347   001A78  EF40  F00D         	goto	u2770
  8348   001A7C                     u2771:
  8349   001A7C  EF58  F00D         	goto	l2780
  8350   001A80                     u2770:
  8351   001A80  0E00               	movlw	0
  8352   001A82  6E28               	movwf	___fldiv@b^0,c
  8353   001A84  0E00               	movlw	0
  8354   001A86  6E29               	movwf	(___fldiv@b+1)^0,c
  8355   001A88  0E00               	movlw	0
  8356   001A8A  6E2A               	movwf	(___fldiv@b+2)^0,c
  8357   001A8C  0E00               	movlw	0
  8358   001A8E  6E2B               	movwf	(___fldiv@b+3)^0,c
  8359   001A90  0E80               	movlw	128
  8360   001A92  122A               	iorwf	(___fldiv@b+2)^0,f,c
  8361   001A94  0E7F               	movlw	127
  8362   001A96  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8363   001A98                     l2774:
  8364   001A98  5038               	movf	___fldiv@sign^0,w,c
  8365   001A9A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8366   001A9C  C028  F028         	movff	___fldiv@b,?___fldiv
  8367   001AA0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  8368   001AA4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  8369   001AA8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  8370   001AAC  EF9B  F00E         	goto	l735
  8371   001AB0                     l2780:
  8372   001AB0  503F               	movf	___fldiv@bexp^0,w,c
  8373   001AB2  A4D8               	btfss	status,2,c
  8374   001AB4  EF5E  F00D         	goto	u2781
  8375   001AB8  EF60  F00D         	goto	u2780
  8376   001ABC                     u2781:
  8377   001ABC  EF6A  F00D         	goto	l2788
  8378   001AC0                     u2780:
  8379   001AC0  0E00               	movlw	0
  8380   001AC2  6E28               	movwf	?___fldiv^0,c
  8381   001AC4  0E00               	movlw	0
  8382   001AC6  6E29               	movwf	(?___fldiv+1)^0,c
  8383   001AC8  0E00               	movlw	0
  8384   001ACA  6E2A               	movwf	(?___fldiv+2)^0,c
  8385   001ACC  0E00               	movlw	0
  8386   001ACE  6E2B               	movwf	(?___fldiv+3)^0,c
  8387   001AD0  EF9B  F00E         	goto	l735
  8388   001AD4                     l2788:
  8389   001AD4  5040               	movf	___fldiv@aexp^0,w,c
  8390   001AD6  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  8391   001ADA  6A31               	clrf	(??___fldiv+1)^0,c
  8392   001ADC  5E30               	subwf	??___fldiv^0,f,c
  8393   001ADE  0E00               	movlw	0
  8394   001AE0  5A31               	subwfb	(??___fldiv+1)^0,f,c
  8395   001AE2  0E7F               	movlw	127
  8396   001AE4  2430               	addwf	??___fldiv^0,w,c
  8397   001AE6  6E39               	movwf	___fldiv@new_exp^0,c
  8398   001AE8  0E00               	movlw	0
  8399   001AEA  2031               	addwfc	(??___fldiv+1)^0,w,c
  8400   001AEC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8401   001AEE  C028  F034         	movff	___fldiv@b,___fldiv@rem
  8402   001AF2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  8403   001AF6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  8404   001AFA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  8405   001AFE  0E00               	movlw	0
  8406   001B00  6E28               	movwf	___fldiv@b^0,c
  8407   001B02  0E00               	movlw	0
  8408   001B04  6E29               	movwf	(___fldiv@b+1)^0,c
  8409   001B06  0E00               	movlw	0
  8410   001B08  6E2A               	movwf	(___fldiv@b+2)^0,c
  8411   001B0A  0E00               	movlw	0
  8412   001B0C  6E2B               	movwf	(___fldiv@b+3)^0,c
  8413   001B0E  0E00               	movlw	0
  8414   001B10  6E3B               	movwf	___fldiv@grs^0,c
  8415   001B12  0E00               	movlw	0
  8416   001B14  6E3C               	movwf	(___fldiv@grs+1)^0,c
  8417   001B16  0E00               	movlw	0
  8418   001B18  6E3D               	movwf	(___fldiv@grs+2)^0,c
  8419   001B1A  0E00               	movlw	0
  8420   001B1C  6E3E               	movwf	(___fldiv@grs+3)^0,c
  8421   001B1E  0E00               	movlw	0
  8422   001B20  6E40               	movwf	___fldiv@aexp^0,c
  8423   001B22  EFCB  F00D         	goto	l737
  8424   001B26                     l2798:
  8425   001B26  5040               	movf	___fldiv@aexp^0,w,c
  8426   001B28  B4D8               	btfsc	status,2,c
  8427   001B2A  EF99  F00D         	goto	u2791
  8428   001B2E  EF9B  F00D         	goto	u2790
  8429   001B32                     u2791:
  8430   001B32  EFB2  F00D         	goto	l2806
  8431   001B36                     u2790:
  8432   001B36  90D8               	bcf	status,0,c
  8433   001B38  3634               	rlcf	___fldiv@rem^0,f,c
  8434   001B3A  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  8435   001B3C  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  8436   001B3E  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  8437   001B40  90D8               	bcf	status,0,c
  8438   001B42  3628               	rlcf	___fldiv@b^0,f,c
  8439   001B44  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8440   001B46  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8441   001B48  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8442   001B4A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8443   001B4C  EFAA  F00D         	goto	u2801
  8444   001B50  EFAC  F00D         	goto	u2800
  8445   001B54                     u2801:
  8446   001B54  EFAD  F00D         	goto	l740
  8447   001B58                     u2800:
  8448   001B58  8028               	bsf	___fldiv@b^0,0,c
  8449   001B5A                     l740:
  8450   001B5A  90D8               	bcf	status,0,c
  8451   001B5C  363B               	rlcf	___fldiv@grs^0,f,c
  8452   001B5E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8453   001B60  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8454   001B62  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8455   001B64                     l2806:
  8456   001B64  502C               	movf	___fldiv@a^0,w,c
  8457   001B66  5C34               	subwf	___fldiv@rem^0,w,c
  8458   001B68  502D               	movf	(___fldiv@a+1)^0,w,c
  8459   001B6A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  8460   001B6C  502E               	movf	(___fldiv@a+2)^0,w,c
  8461   001B6E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  8462   001B70  502F               	movf	(___fldiv@a+3)^0,w,c
  8463   001B72  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  8464   001B74  A0D8               	btfss	status,0,c
  8465   001B76  EFBF  F00D         	goto	u2811
  8466   001B7A  EFC1  F00D         	goto	u2810
  8467   001B7E                     u2811:
  8468   001B7E  EFCA  F00D         	goto	l2812
  8469   001B82                     u2810:
  8470   001B82  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  8471   001B84  502C               	movf	___fldiv@a^0,w,c
  8472   001B86  5E34               	subwf	___fldiv@rem^0,f,c
  8473   001B88  502D               	movf	(___fldiv@a+1)^0,w,c
  8474   001B8A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  8475   001B8C  502E               	movf	(___fldiv@a+2)^0,w,c
  8476   001B8E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  8477   001B90  502F               	movf	(___fldiv@a+3)^0,w,c
  8478   001B92  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  8479   001B94                     l2812:
  8480   001B94  2A40               	incf	___fldiv@aexp^0,f,c
  8481   001B96                     l737:
  8482   001B96  0E19               	movlw	25
  8483   001B98  6440               	cpfsgt	___fldiv@aexp^0,c
  8484   001B9A  EFD1  F00D         	goto	u2821
  8485   001B9E  EFD3  F00D         	goto	u2820
  8486   001BA2                     u2821:
  8487   001BA2  EF93  F00D         	goto	l2798
  8488   001BA6                     u2820:
  8489   001BA6  5034               	movf	___fldiv@rem^0,w,c
  8490   001BA8  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  8491   001BAA  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  8492   001BAC  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  8493   001BAE  B4D8               	btfsc	status,2,c
  8494   001BB0  EFDC  F00D         	goto	u2831
  8495   001BB4  EFDE  F00D         	goto	u2830
  8496   001BB8                     u2831:
  8497   001BB8  EFF6  F00D         	goto	l2824
  8498   001BBC                     u2830:
  8499   001BBC  803B               	bsf	___fldiv@grs^0,0,c
  8500   001BBE  EFF6  F00D         	goto	l2824
  8501   001BC2                     l2818:
  8502   001BC2  90D8               	bcf	status,0,c
  8503   001BC4  3628               	rlcf	___fldiv@b^0,f,c
  8504   001BC6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8505   001BC8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8506   001BCA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8507   001BCC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8508   001BCE  EFEB  F00D         	goto	u2841
  8509   001BD2  EFED  F00D         	goto	u2840
  8510   001BD6                     u2841:
  8511   001BD6  EFEE  F00D         	goto	l746
  8512   001BDA                     u2840:
  8513   001BDA  8028               	bsf	___fldiv@b^0,0,c
  8514   001BDC                     l746:
  8515   001BDC  90D8               	bcf	status,0,c
  8516   001BDE  363B               	rlcf	___fldiv@grs^0,f,c
  8517   001BE0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8518   001BE2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8519   001BE4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8520   001BE6  0639               	decf	___fldiv@new_exp^0,f,c
  8521   001BE8  A0D8               	btfss	status,0,c
  8522   001BEA  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  8523   001BEC                     l2824:
  8524   001BEC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8525   001BEE  EFFB  F00D         	goto	u2851
  8526   001BF2  EFFD  F00D         	goto	u2850
  8527   001BF6                     u2851:
  8528   001BF6  EFE1  F00D         	goto	l2818
  8529   001BFA                     u2850:
  8530   001BFA  0E00               	movlw	0
  8531   001BFC  6E40               	movwf	___fldiv@aexp^0,c
  8532   001BFE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8533   001C00  EF04  F00E         	goto	u2861
  8534   001C04  EF06  F00E         	goto	u2860
  8535   001C08                     u2861:
  8536   001C08  EF2A  F00E         	goto	l748
  8537   001C0C                     u2860:
  8538   001C0C  0EFF               	movlw	255
  8539   001C0E  143B               	andwf	___fldiv@grs^0,w,c
  8540   001C10  6E30               	movwf	??___fldiv^0,c
  8541   001C12  0EFF               	movlw	255
  8542   001C14  143C               	andwf	(___fldiv@grs+1)^0,w,c
  8543   001C16  6E31               	movwf	(??___fldiv+1)^0,c
  8544   001C18  0EFF               	movlw	255
  8545   001C1A  143D               	andwf	(___fldiv@grs+2)^0,w,c
  8546   001C1C  6E32               	movwf	(??___fldiv+2)^0,c
  8547   001C1E  0E7F               	movlw	127
  8548   001C20  143E               	andwf	(___fldiv@grs+3)^0,w,c
  8549   001C22  6E33               	movwf	(??___fldiv+3)^0,c
  8550   001C24  5030               	movf	??___fldiv^0,w,c
  8551   001C26  1031               	iorwf	(??___fldiv+1)^0,w,c
  8552   001C28  1032               	iorwf	(??___fldiv+2)^0,w,c
  8553   001C2A  1033               	iorwf	(??___fldiv+3)^0,w,c
  8554   001C2C  B4D8               	btfsc	status,2,c
  8555   001C2E  EF1B  F00E         	goto	u2871
  8556   001C32  EF1D  F00E         	goto	u2870
  8557   001C36                     u2871:
  8558   001C36  EF21  F00E         	goto	l749
  8559   001C3A                     u2870:
  8560   001C3A                     l2832:
  8561   001C3A  0E01               	movlw	1
  8562   001C3C  6E40               	movwf	___fldiv@aexp^0,c
  8563   001C3E  EF2A  F00E         	goto	l748
  8564   001C42                     l749:
  8565   001C42  A028               	btfss	___fldiv@b^0,0,c
  8566   001C44  EF26  F00E         	goto	u2881
  8567   001C48  EF28  F00E         	goto	u2880
  8568   001C4C                     u2881:
  8569   001C4C  EF2A  F00E         	goto	l748
  8570   001C50                     u2880:
  8571   001C50  EF1D  F00E         	goto	l2832
  8572   001C54                     l748:
  8573   001C54  5040               	movf	___fldiv@aexp^0,w,c
  8574   001C56  B4D8               	btfsc	status,2,c
  8575   001C58  EF30  F00E         	goto	u2891
  8576   001C5C  EF32  F00E         	goto	u2890
  8577   001C60                     u2891:
  8578   001C60  EF56  F00E         	goto	l2844
  8579   001C64                     u2890:
  8580   001C64  0E01               	movlw	1
  8581   001C66  2628               	addwf	___fldiv@b^0,f,c
  8582   001C68  0E00               	movlw	0
  8583   001C6A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  8584   001C6C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  8585   001C6E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  8586   001C70  A02B               	btfss	(___fldiv@b+3)^0,0,c
  8587   001C72  EF3D  F00E         	goto	u2901
  8588   001C76  EF3F  F00E         	goto	u2900
  8589   001C7A                     u2901:
  8590   001C7A  EF56  F00E         	goto	l2844
  8591   001C7E                     u2900:
  8592   001C7E  C028  F030         	movff	___fldiv@b,??___fldiv
  8593   001C82  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  8594   001C86  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  8595   001C8A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  8596   001C8E  3433               	rlcf	(??___fldiv+3)^0,w,c
  8597   001C90  3233               	rrcf	(??___fldiv+3)^0,f,c
  8598   001C92  3232               	rrcf	(??___fldiv+2)^0,f,c
  8599   001C94  3231               	rrcf	(??___fldiv+1)^0,f,c
  8600   001C96  3230               	rrcf	??___fldiv^0,f,c
  8601   001C98  C030  F028         	movff	??___fldiv,___fldiv@b
  8602   001C9C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  8603   001CA0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  8604   001CA4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  8605   001CA8  4A39               	infsnz	___fldiv@new_exp^0,f,c
  8606   001CAA  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  8607   001CAC                     l2844:
  8608   001CAC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8609   001CAE  EF61  F00E         	goto	u2911
  8610   001CB2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8611   001CB4  E108               	bnz	u2910
  8612   001CB6  2839               	incf	___fldiv@new_exp^0,w,c
  8613   001CB8  A0D8               	btfss	status,0,c
  8614   001CBA  EF61  F00E         	goto	u2911
  8615   001CBE  EF63  F00E         	goto	u2910
  8616   001CC2                     u2911:
  8617   001CC2  EF6E  F00E         	goto	l2848
  8618   001CC6                     u2910:
  8619   001CC6  0E00               	movlw	0
  8620   001CC8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8621   001CCA  6839               	setf	___fldiv@new_exp^0,c
  8622   001CCC  0E00               	movlw	0
  8623   001CCE  6E28               	movwf	___fldiv@b^0,c
  8624   001CD0  0E00               	movlw	0
  8625   001CD2  6E29               	movwf	(___fldiv@b+1)^0,c
  8626   001CD4  0E00               	movlw	0
  8627   001CD6  6E2A               	movwf	(___fldiv@b+2)^0,c
  8628   001CD8  0E00               	movlw	0
  8629   001CDA  6E2B               	movwf	(___fldiv@b+3)^0,c
  8630   001CDC                     l2848:
  8631   001CDC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8632   001CDE  EF7B  F00E         	goto	u2920
  8633   001CE2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8634   001CE4  E106               	bnz	u2921
  8635   001CE6  0439               	decf	___fldiv@new_exp^0,w,c
  8636   001CE8  B0D8               	btfsc	status,0,c
  8637   001CEA  EF79  F00E         	goto	u2921
  8638   001CEE  EF7B  F00E         	goto	u2920
  8639   001CF2                     u2921:
  8640   001CF2  EF89  F00E         	goto	l2852
  8641   001CF6                     u2920:
  8642   001CF6  0E00               	movlw	0
  8643   001CF8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8644   001CFA  0E00               	movlw	0
  8645   001CFC  6E39               	movwf	___fldiv@new_exp^0,c
  8646   001CFE  0E00               	movlw	0
  8647   001D00  6E28               	movwf	___fldiv@b^0,c
  8648   001D02  0E00               	movlw	0
  8649   001D04  6E29               	movwf	(___fldiv@b+1)^0,c
  8650   001D06  0E00               	movlw	0
  8651   001D08  6E2A               	movwf	(___fldiv@b+2)^0,c
  8652   001D0A  0E00               	movlw	0
  8653   001D0C  6E2B               	movwf	(___fldiv@b+3)^0,c
  8654   001D0E  0E00               	movlw	0
  8655   001D10  6E38               	movwf	___fldiv@sign^0,c
  8656   001D12                     l2852:
  8657   001D12  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  8658   001D16  A03F               	btfss	___fldiv@bexp^0,0,c
  8659   001D18  EF90  F00E         	goto	u2931
  8660   001D1C  EF92  F00E         	goto	u2930
  8661   001D20                     u2931:
  8662   001D20  EF95  F00E         	goto	l2858
  8663   001D24                     u2930:
  8664   001D24  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8665   001D26  EF96  F00E         	goto	l2860
  8666   001D2A                     l2858:
  8667   001D2A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  8668   001D2C                     l2860:
  8669   001D2C  90D8               	bcf	status,0,c
  8670   001D2E  303F               	rrcf	___fldiv@bexp^0,w,c
  8671   001D30  6E2B               	movwf	(___fldiv@b+3)^0,c
  8672   001D32  EF4C  F00D         	goto	l2774
  8673   001D36                     l735:
  8674   001D36  0012               	return		;funcret
  8675   001D38                     __end_of___fldiv:
  8676                           	callstack 0
  8677                           
  8678 ;; *************** function _conv_AN0 *****************
  8679 ;; Defined at:
  8680 ;;		line 110 in file "Main_Program.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8694 ;;      Params:         0       0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0
  8696 ;;      Temps:          2       0       0       0       0       0       0
  8697 ;;      Totals:         2       0       0       0       0       0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_main
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text39
  8708   00359E                     __ptext39:
  8709                           	callstack 0
  8710   00359E                     _conv_AN0:
  8711                           	callstack 30
  8712   00359E                     
  8713                           ;Main_Program.c: 112:     _delay((unsigned long)((50)*(8000000/4000.0)));
  8714   00359E  0E82               	movlw	130
  8715   0035A0  6E01               	movwf	??_conv_AN0^0,c
  8716   0035A2  0EDE               	movlw	222
  8717   0035A4                     u5287:
  8718   0035A4  2EE8               	decfsz	wreg,f,c
  8719   0035A6  D7FE               	bra	u5287
  8720   0035A8  2E01               	decfsz	??_conv_AN0^0,f,c
  8721   0035AA  D7FC               	bra	u5287
  8722   0035AC                     
  8723                           ;Main_Program.c: 113:     ADCON0bits.GO = 1;
  8724   0035AC  82C2               	bsf	194,1,c	;volatile
  8725   0035AE                     l118:
  8726   0035AE  B2C2               	btfsc	194,1,c	;volatile
  8727   0035B0  EFDC  F01A         	goto	u4411
  8728   0035B4  EFDE  F01A         	goto	u4410
  8729   0035B8                     u4411:
  8730   0035B8  EFD7  F01A         	goto	l118
  8731   0035BC                     u4410:
  8732   0035BC                     
  8733                           ;Main_Program.c: 115:     VdigADC_AN0 = ADRESH;
  8734   0035BC  CFC4 F0C8          	movff	4036,_VdigADC_AN0	;volatile
  8735   0035C0  0100               	movlb	0	; () banked
  8736   0035C2  6BC9               	clrf	(_VdigADC_AN0+1)& (0+255),b
  8737   0035C4                     
  8738                           ; BSR set to: 0
  8739                           ;Main_Program.c: 116:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
  8740   0035C4  51C8               	movf	_VdigADC_AN0& (0+255),w,b
  8741   0035C6  6E01               	movwf	??_conv_AN0^0,c
  8742   0035C8  50C3               	movf	195,w,c	;volatile
  8743   0035CA  6FC8               	movwf	_VdigADC_AN0& (0+255),b
  8744   0035CC  C001  F0C9         	movff	??_conv_AN0,_VdigADC_AN0+1
  8745   0035D0                     
  8746                           ; BSR set to: 0
  8747   0035D0  0012               	return		;funcret
  8748   0035D2                     __end_of_conv_AN0:
  8749                           	callstack 0
  8750                           
  8751 ;; *************** function _config_IO *****************
  8752 ;; Defined at:
  8753 ;;		line 96 in file "Main_Program.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8767 ;;      Params:         0       0       0       0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_main
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text40
  8781   003694                     __ptext40:
  8782                           	callstack 0
  8783   003694                     _config_IO:
  8784                           	callstack 30
  8785   003694                     
  8786                           ;Main_Program.c: 98:     TRISB = 0X01;
  8787   003694  0E01               	movlw	1
  8788   003696  6E93               	movwf	147,c	;volatile
  8789                           
  8790                           ;Main_Program.c: 99:     TRISC = 0X00;
  8791   003698  0E00               	movlw	0
  8792   00369A  6E94               	movwf	148,c	;volatile
  8793                           
  8794                           ;Main_Program.c: 100:     PORTC = 0X00;
  8795   00369C  0E00               	movlw	0
  8796   00369E  6E82               	movwf	130,c	;volatile
  8797   0036A0  0012               	return		;funcret
  8798   0036A2                     __end_of_config_IO:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _config_FOSC *****************
  8802 ;; Defined at:
  8803 ;;		line 90 in file "Main_Program.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg, status,2
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8817 ;;      Params:         0       0       0       0       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0
  8820 ;;      Totals:         0       0       0       0       0       0       0
  8821 ;;Total ram usage:        0 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_main
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text41
  8831   0036B0                     __ptext41:
  8832                           	callstack 0
  8833   0036B0                     _config_FOSC:
  8834                           	callstack 30
  8835   0036B0                     
  8836                           ;Main_Program.c: 92:     OSCCON = 0X00;
  8837   0036B0  0E00               	movlw	0
  8838   0036B2  6ED3               	movwf	211,c	;volatile
  8839                           
  8840                           ;Main_Program.c: 93:     OSCTUNE = 0X00;
  8841   0036B4  0E00               	movlw	0
  8842   0036B6  6E9B               	movwf	155,c	;volatile
  8843   0036B8  0012               	return		;funcret
  8844   0036BA                     __end_of_config_FOSC:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function _config_ADC *****************
  8848 ;; Defined at:
  8849 ;;		line 103 in file "Main_Program.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8863 ;;      Params:         0       0       0       0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_main
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text42
  8877   0036A2                     __ptext42:
  8878                           	callstack 0
  8879   0036A2                     _config_ADC:
  8880                           	callstack 30
  8881   0036A2                     
  8882                           ;Main_Program.c: 105:     ADCON0 = 0X01;
  8883   0036A2  0E01               	movlw	1
  8884   0036A4  6EC2               	movwf	194,c	;volatile
  8885                           
  8886                           ;Main_Program.c: 106:     ADCON1 = 0X0E;
  8887   0036A6  0E0E               	movlw	14
  8888   0036A8  6EC1               	movwf	193,c	;volatile
  8889                           
  8890                           ;Main_Program.c: 107:     ADCON2 = 0X80;
  8891   0036AA  0E80               	movlw	128
  8892   0036AC  6EC0               	movwf	192,c	;volatile
  8893   0036AE  0012               	return		;funcret
  8894   0036B0                     __end_of_config_ADC:
  8895                           	callstack 0
  8896                           
  8897                           	psect	rparam
  8898   000000                     
  8899                           	psect	config
  8900                           
  8901                           ; Padding undefined space
  8902   300000                     	org	3145728
  8903   300000  FF                 	db	255
  8904                           
  8905                           ;Config register CONFIG1H @ 0x300001
  8906                           ;	Oscillator Selection bits
  8907                           ;	OSC = HS, HS oscillator
  8908                           ;	Fail-Safe Clock Monitor Enable bit
  8909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8910                           ;	Internal/External Oscillator Switchover bit
  8911                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8912   300001                     	org	3145729
  8913   300001  02                 	db	2
  8914                           
  8915                           ;Config register CONFIG2L @ 0x300002
  8916                           ;	Power-up Timer Enable bit
  8917                           ;	PWRT = OFF, PWRT disabled
  8918                           ;	Brown-out Reset Enable bits
  8919                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8920                           ;	Brown Out Reset Voltage bits
  8921                           ;	BORV = 3, Minimum setting
  8922   300002                     	org	3145730
  8923   300002  19                 	db	25
  8924                           
  8925                           ;Config register CONFIG2H @ 0x300003
  8926                           ;	Watchdog Timer Enable bit
  8927                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8928                           ;	Watchdog Timer Postscale Select bits
  8929                           ;	WDTPS = 32768, 1:32768
  8930   300003                     	org	3145731
  8931   300003  1E                 	db	30
  8932                           
  8933                           ; Padding undefined space
  8934   300004                     	org	3145732
  8935   300004  FF                 	db	255
  8936                           
  8937                           ;Config register CONFIG3H @ 0x300005
  8938                           ;	CCP2 MUX bit
  8939                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8940                           ;	PORTB A/D Enable bit
  8941                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8942                           ;	Low-Power Timer1 Oscillator Enable bit
  8943                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8944                           ;	MCLR Pin Enable bit
  8945                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8946   300005                     	org	3145733
  8947   300005  81                 	db	129
  8948                           
  8949                           ;Config register CONFIG4L @ 0x300006
  8950                           ;	Stack Full/Underflow Reset Enable bit
  8951                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8952                           ;	Single-Supply ICSP Enable bit
  8953                           ;	LVP = OFF, Single-Supply ICSP disabled
  8954                           ;	Extended Instruction Set Enable bit
  8955                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8956                           ;	Background Debugger Enable bit
  8957                           ;	DEBUG = 0x1, unprogrammed default
  8958   300006                     	org	3145734
  8959   300006  81                 	db	129
  8960                           
  8961                           ; Padding undefined space
  8962   300007                     	org	3145735
  8963   300007  FF                 	db	255
  8964                           
  8965                           ;Config register CONFIG5L @ 0x300008
  8966                           ;	Code Protection bit
  8967                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8968                           ;	Code Protection bit
  8969                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8970                           ;	Code Protection bit
  8971                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8972                           ;	Code Protection bit
  8973                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8974   300008                     	org	3145736
  8975   300008  0F                 	db	15
  8976                           
  8977                           ;Config register CONFIG5H @ 0x300009
  8978                           ;	Boot Block Code Protection bit
  8979                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8980                           ;	Data EEPROM Code Protection bit
  8981                           ;	CPD = OFF, Data EEPROM not code-protected
  8982   300009                     	org	3145737
  8983   300009  C0                 	db	192
  8984                           
  8985                           ;Config register CONFIG6L @ 0x30000A
  8986                           ;	Write Protection bit
  8987                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8988                           ;	Write Protection bit
  8989                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8990                           ;	Write Protection bit
  8991                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8992                           ;	Write Protection bit
  8993                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8994   30000A                     	org	3145738
  8995   30000A  0F                 	db	15
  8996                           
  8997                           ;Config register CONFIG6H @ 0x30000B
  8998                           ;	Configuration Register Write Protection bit
  8999                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9000                           ;	Boot Block Write Protection bit
  9001                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9002                           ;	Data EEPROM Write Protection bit
  9003                           ;	WRTD = OFF, Data EEPROM not write-protected
  9004   30000B                     	org	3145739
  9005   30000B  E0                 	db	224
  9006                           
  9007                           ;Config register CONFIG7L @ 0x30000C
  9008                           ;	Table Read Protection bit
  9009                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9010                           ;	Table Read Protection bit
  9011                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9012                           ;	Table Read Protection bit
  9013                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9014                           ;	Table Read Protection bit
  9015                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9016   30000C                     	org	3145740
  9017   30000C  0F                 	db	15
  9018                           
  9019                           ;Config register CONFIG7H @ 0x30000D
  9020                           ;	Boot Block Table Read Protection bit
  9021                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9022   30000D                     	org	3145741
  9023   30000D  40                 	db	64
  9024                           tosu	equ	0xFFF
  9025                           tosh	equ	0xFFE
  9026                           tosl	equ	0xFFD
  9027                           stkptr	equ	0xFFC
  9028                           pclatu	equ	0xFFB
  9029                           pclath	equ	0xFFA
  9030                           pcl	equ	0xFF9
  9031                           tblptru	equ	0xFF8
  9032                           tblptrh	equ	0xFF7
  9033                           tblptrl	equ	0xFF6
  9034                           tablat	equ	0xFF5
  9035                           prodh	equ	0xFF4
  9036                           prodl	equ	0xFF3
  9037                           indf0	equ	0xFEF
  9038                           postinc0	equ	0xFEE
  9039                           postdec0	equ	0xFED
  9040                           preinc0	equ	0xFEC
  9041                           plusw0	equ	0xFEB
  9042                           fsr0h	equ	0xFEA
  9043                           fsr0l	equ	0xFE9
  9044                           wreg	equ	0xFE8
  9045                           indf1	equ	0xFE7
  9046                           postinc1	equ	0xFE6
  9047                           postdec1	equ	0xFE5
  9048                           preinc1	equ	0xFE4
  9049                           plusw1	equ	0xFE3
  9050                           fsr1h	equ	0xFE2
  9051                           fsr1l	equ	0xFE1
  9052                           bsr	equ	0xFE0
  9053                           indf2	equ	0xFDF
  9054                           postinc2	equ	0xFDE
  9055                           postdec2	equ	0xFDD
  9056                           preinc2	equ	0xFDC
  9057                           plusw2	equ	0xFDB
  9058                           fsr2h	equ	0xFDA
  9059                           fsr2l	equ	0xFD9
  9060                           status	equ	0xFD8

Data Sizes:
    Strings     94
    Constant    0
    Data        0
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    118     127
    BANK0           128     54     128
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> BufferLCD_Press(BANK1[16]), BufferLCD_Voltage(BANK0[16]), BufferS1(BANK0[8]), BufferS2(BANK0[8]), 
		 -> BufferS3(BANK0[8]), BufferS4(BANK0[8]), STR_10(CODE[4]), STR_11(CODE[4]), 
		 -> STR_12(CODE[5]), STR_3(CODE[16]), STR_4(CODE[16]), STR_9(CODE[4]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1005$buffer	PTR unsigned char  size(2) Largest target is 0

    S1005$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), STR_5(CODE[10]), STR_6(CODE[10]), 
		 -> STR_7(CODE[10]), STR_8(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> BufferLCD_Press(BANK1[16]), BufferLCD_Voltage(BANK0[16]), BufferS1(BANK0[8]), BufferS2(BANK0[8]), 
		 -> BufferS3(BANK0[8]), BufferS4(BANK0[8]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_13(CODE[4]), STR_16(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), STR_5(CODE[10]), STR_6(CODE[10]), 
		 -> STR_7(CODE[10]), STR_8(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), STR_5(CODE[10]), STR_6(CODE[10]), 
		 -> STR_7(CODE[10]), STR_8(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), STR_5(CODE[10]), STR_6(CODE[10]), 
		 -> STR_7(CODE[10]), STR_8(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_lcd_PERIPHERAL
    _logic_CONTROL->___flge
    _lcd_init->_lcd_cmd
    _lcd_SENSOR->_sprintf
    _lcd_PERIPHERAL->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_set_bit
    _equation_SENSOR->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _lcd_SENSOR->_sprintf
    _lcd_PERIPHERAL->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   79075
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                    _equation_SENSOR
                     _lcd_PERIPHERAL
                         _lcd_SENSOR
                           _lcd_init
                      _logic_CONTROL
 ---------------------------------------------------------------------------------
 (1) _logic_CONTROL                                        0     0      0    1702
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_SENSOR                                           0     0      0   35077
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_PERIPHERAL                                       1     1      0   35905
                                            117 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   32072
                                            104 COMRAM    13    13      0
                                             47 BANK0      7     0      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   30668
                                            103 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   30162
                                             92 COMRAM    11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     795
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   22243
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1702
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    5023
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3201
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    3005
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     828
                                              4 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _equation_SENSOR                                      0     0      0    5517
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
   _equation_SENSOR
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _lcd_PERIPHERAL
     _lcd_clear
       _lcd_cmd
         _set_bit
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _lcd_SENSOR
     _lcd_write
     _sprintf
   _lcd_init
     _lcd_cmd
   _logic_CONTROL
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     36      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     76      7F       1      100.0%
BITBIGSFRhh         2C      0       0      16        0.0%
BITBIGSFRhlhl       24      0       0      18        0.0%
BITBIGSFRhlhhh       E      0       0      17        0.0%
BITBIGSFRlhl         E      0       0      20        0.0%
BITBIGSFRhll         4      0       0      19        0.0%
BITBIGSFRll          1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15F      22        0.0%
DATA                 0      0     15F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 04 13:53:26 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l30 3692                          l23 3674                          l33 3600  
                        l42 314A                          l27 2C58                          l19 31E8  
            ?_lcd_send_byte 0005                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
                       l112 36A0                         l120 35BC                         l121 35D0  
                       l130 286C                         l115 36AE                         l124 2D2C  
                       l140 23FC                         l109 36B8                         l118 35AE  
                       l127 327A                         l136 23CC                         l153 3654  
                       l412 3004                         l423 2A76                         l418 2A30  
                       l450 2972                         l427 3568                         l384 2DF0  
                       l811 25B0                         l707 148C                         l723 33F8  
                       l740 1B5A                         l708 147A                         l397 2F5A  
                       l901 09E6                         l822 2548                         l735 1D36  
                       l815 24EC                         l903 082C                         l831 3438  
                       l808 2454                         l737 1B96                         l681 12A2  
                       l746 1BDC                         l690 1572                         l682 1290  
                       l771 199C                         l683 1256                         l931 0E30  
                       l748 1C54                         l749 1C42                         l861 32B0  
                       l774 182E                         l767 1638                         l871 25F0  
                       l784 195E                         l776 18A6                         l864 32EE  
                       l777 1894                         l873 25F8                         l953 30AA  
                       l866 330C                         l874 263E                         l698 13BC  
                       l949 30A2                         l887 2760                         l991 3478  
                       l969 1FF4                         l898 10B2                         _abs 356A  
                       _pad 327C                ___awmod@sign 0006                         wreg 0FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                ___fltol@exp1 000A  
                      l1001 2B74                        l1006 3584                        l1015 2206  
                      l1009 359C                        l1018 214A                        l1035 33B2  
                      ?_abs 0007                        l1029 3362                        l1047 2EAA  
                      l1055 34B8                        l3000 33C4                        l1064 3530  
                      l3010 2D48                        l1058 36BA                        l3020 2D6E  
                      l3012 2D4C                        l3004 2D2E                        l3100 2974  
                      l3030 2DA4                        l3022 2D80                        l3014 2D5A  
                      l3006 2D32                        l3110 29FE                        l3102 29A2  
                      l3032 2DBA                        l3024 2D88                        l3040 2DD0  
                      l3016 2D62                        l3008 2D40                        l4000 2694  
                      l3112 2A10                        l3104 29B2                        l3200 2AFE  
                      l2410 36A2                        l3042 2DE0                        l3034 2DC2  
                      l3026 2D90                        l3018 2D66                        l3050 2EB0  
                      l4010 2710                        l4002 26B0                        l3114 2A1E  
                      l3106 29E0                        l3122 3532                        l3130 286E  
                      l3202 2B0A                        l3044 2DE8                        l3036 2DC4  
                      l3028 2D9E                        l3060 2EE0                        l3052 2EBE  
                      l2500 2DF2                        l4004 26CA                        l4012 271E  
                      l3116 2A6E                        l3108 29F0                        l3124 3548  
                      l3140 28C4                        l3132 2884                        l3212 2B6C  
                      l3220 330E                        l4100 0938                        l2406 36B0  
                      l3038 2DCA                        l3070 2F26                        l3062 2EF2  
                      l3054 2EC6                        l2510 2E6A                        l2502 2E02  
                      l4014 272E                        l4006 26DC                        l3118 2A74  
                      l3126 3558                        l3142 28D4                        l3206 2B16  
                      l3230 2016                        l3222 331C                        l4110 09EE  
                      l4102 096C                        l4030 0688                        l4022 0660  
                      l2408 3694                        l3080 2F52                        l3072 2F2E  
                      l3064 2EFA                        l3056 2ECA                        l3048 2EAC  
                      l2504 2E12                        l4016 2734                        l4008 26F6  
                      l2600 124E                        l2520 10D0                        l3152 28FE  
                      l3144 28D8                        l3136 2898                        l3208 2B28  
                      l3240 20FE                        l3232 206C                        l3224 3330  
                      l4200 0E86                        l4120 0A20                        l4112 09FC  
                      l4104 0974                        l4040 06DE                        l4032 06AC  
                      l4024 0666                        l3074 2F34                        l3066 2F02  
                      l3058 2ED8                        l2506 2E1C                        l4018 2744  
                      l3090 2FC8                        l2610 1284                        l2602 1264  
                      l2522 10E0                        l2530 110A                        l2514 10B4  
                      l3170 2962                        l3162 2926                        l3154 2908  
                      l3146 28E6                        l3138 28C2                        l3250 21E6  
                      l3242 213A                        l3234 2080                        l4210 0EBA  
                      l4202 0E8C                        l4122 0A32                        l4130 0A72  
                      l4114 0A08                        l4050 072E                        l4042 06EA  
                      l4034 06B6                        l4026 0676                        l3068 2F10  
                      l3076 2F3A                        l2508 2E38                        l3092 2FD8  
                      l3084 2F5C                        l2700 1536                        l2620 12D4  
                      l2612 128E                        l2604 1270                        l2540 113A  
                      l2532 111A                        l2524 10F0                        l2516 10C0  
                      l3164 2932                        l3156 2912                        l3252 21F6  
                      l3236 208E                        l3244 216E                        l3228 1FF6  
                      l4212 0EC0                        l4204 0E92                        l4220 0F58  
                      l4140 0B5A                        l4132 0A7A                        l4124 0A40  
                      l4116 0A12                        l4108 09B4                        l4060 075E  
                      l4052 0732                        l4044 06F2                        l4036 06BE  
                      l4028 0684                        l4300 1E8C                        l3270 366C  
                      l3078 2F4A                        l3190 356A                        l3094 2FFC  
                      l3086 2F8A                        l2710 1560                        l2702 1544  
                      l2630 1310                        l2622 12E4                        l2614 12B0  
                      l2606 1274                        l2550 117A                        l2542 1148  
                      l2534 1120                        l2526 1100                        l2518 10CE  
                      l3166 2942                        l3246 21AA                        l4230 0FD8  
                      l4222 0F76                        l4214 0F18                        l4206 0EA4  
                      l4150 0C18                        l4142 0B8E                        l4134 0A8A  
                      l4126 0A58                        l4118 0A1A                        l4070 07B6  
                      l4054 0738                        l4038 06CE                        l4046 06F6  
                      l4310 1EC2                        l2800 1B36                        l3192 3578  
                      l3096 3002                        l3088 2F9A                        l2712 1562  
                      l2704 154A                        l2640 1356                        l2632 131E  
                      l2624 12F2                        l2616 12C0                        l2608 1282  
                      l2560 11B4                        l2552 117C                        l2544 114A  
                      l2536 1132                        l2528 1102                        l3168 2952  
                      l3248 21BE                        l4240 1026                        l4232 0FE6  
                      l4224 0F92                        l4216 0F4C                        l4208 0EB6  
                      l4160 0CB4                        l4152 0C2E                        l4136 0A9E  
                      l4144 0B94                        l4128 0A6A                        l4072 07BC  
                      l4056 0740                        l4048 071C                        l4064 077A  
                      l4320 1F10                        l4312 1ECA                        l4304 1EA0  
                      l4400 285C                        l2810 1B84                        l2802 1B4A  
                      l2730 199E                        l2706 154C                        l2650 13D2  
                      l2642 138A                        l2634 1320                        l2626 1300  
                      l2570 11C8                        l2562 11B8                        l2546 115A  
                      l2554 1184                        l2538 1134                        l3194 2A78  
                      l4250 108E                        l4242 102C                        l4234 0FFE  
                      l4226 0F9A                        l4218 0F54                        l4162 0D0A  
                      l4170 0D5C                        l4154 0C60                        l4146 0BB2  
                      l4138 0B02                        l4090 0842                        l4074 07C4  
                      l4066 07A0                        l4082 07DC                        l4058 0754  
                      l4330 1F84                        l4322 1F38                        l4306 1EAA  
                      l4410 34D2                        l4402 34BA                        l2820 1BCC  
                      l2812 1B94                        l2804 1B58                        l2740 19DA  
                      l2732 19AA                        l2900 1628                        l3276 3672  
                      l3268 3658                        l2708 1552                        l2660 140E  
                      l2652 13E2                        l2644 138C                        l2636 132A  
                      l2628 130C                        l2580 11DC                        l2572 11CC  
                      l2564 11BC                        l2556 1194                        l2548 116A  
                      l3196 2A98                        l4252 1096                        l4244 104A  
                      l4228 0FA8                        l4180 0D8E                        l4172 0D6C  
                      l4164 0D10                        l4156 0C70                        l4148 0BE6  
                      l4092 0876                        l4084 07F6                        l4068 07B2  
                      l2724 3630                        l4308 1EBC                        l4316 1ED2  
                      l4260 1D62                        l4412 34D6                        l4404 34C6  
                      l2830 1C0C                        l2822 1BDA                        l2814 1BA6  
                      l2806 1B64                        l2750 1A0A                        l2742 19EA  
                      l2734 19B8                        l2910 1678                        l2902 1648  
                      l3710 35D2                        l2670 143A                        l2662 1410  
                      l2646 139C                        l2638 1330                        l2590 11F0  
                      l2582 11E0                        l2574 11D0                        l2566 11C0  
                      l2558 11A6                        l3198 2AD6                        l4238 1010  
                      l4246 1068                        l4190 0E60                        l4182 0E06  
                      l4174 0D74                        l4166 0D44                        l4158 0C80  
                      l4094 08B4                        l2726 364C                        l4326 1F60  
                      l4318 1EF0                        l4270 1D88                        l4262 1D6E  
                      l4342 1FD2                        l4350 3442                        l4414 34E4  
                      l4406 34CA                        l2840 1C7E                        l2832 1C3A  
                      l2816 1BBC                        l2824 1BEC                        l2808 1B82  
                      l2760 1A40                        l2752 1A10                        l2744 19EC  
                      l2736 19BA                        l2920 16C8                        l2912 1682  
                      l2904 1658                        l3720 35FC                        l3712 35D8  
                      l2680 1472                        l2664 141E                        l2656 13F6  
                      l2672 143C                        l2648 13AC                        l2584 11E4  
                      l2576 11D4                        l2568 11C4                        l2592 11F4  
                      l4248 1078                        l4192 0E64                        l4184 0E26  
                      l4176 0D7A                        l4168 0D58                        l4096 08E6  
                      l4088 083C                        l4336 1FAE                        l4328 1F76  
                      l4280 1DD2                        l4264 1D72                        l4256 1D38  
                      l4352 3452                        l4360 3406                        l3800 3150  
                      l4416 34EC                        l4408 34CE                        l2850 1CF6  
                      l2842 1CA8                        l2826 1BFA                        l2818 1BC2  
                      l2770 1A80                        l2762 1A50                        l2754 1A1E  
                      l2738 19CA                        l2746 19F4                        l2930 170A  
                      l2922 16D4                        l2914 1698                        l3722 35FE  
                      l3714 35E8                        l3730 30DA                        l2690 14F0  
                      l2666 1426                        l2658 1400                        l2674 144A  
                      l2594 11F8                        l2586 11E8                        l2578 11D8  
                      l4194 0E6A                        l4186 0E42                        l4178 0D82  
                      l4098 0924                        l3570 3030                        l4338 1FC6  
                      l4290 1E28                        l4282 1DE0                        l4274 1D90  
                      l4266 1D7A                        l4258 1D5A                        l4354 346E  
                      l4362 340E                        l4370 31EA                        l3810 315E  
                      l3802 3152                        l2860 1D2C                        l2852 1D12  
                      l2836 1C64                        l2844 1CAC                        l2828 1BFE  
                      l2772 1A90                        l2780 1AB0                        l2764 1A52  
                      l2756 1A20                        l2748 1A04                        l2940 176C  
                      l2932 171A                        l2924 16E2                        l2916 16A4  
                      l2908 166C                        l3580 2B78                        l3716 35F6  
                      l3732 30E0                        l3724 30AE                        l2684 149C  
                      l2692 14F2                        l2676 144E                        l2668 142A  
                      l2596 1222                        l2588 11EC                        l4196 0E72  
                      l4188 0E50                        l3572 3038                        l4292 1E32  
                      l4284 1DEA                        l4268 1D7C                        l4276 1DAE  
                      l4348 343A                        l4364 3416                        l4380 2762  
                      l4372 322C                        l3820 3174                        l3812 3160  
                      l3804 3154                        l3900 234E                        l2854 1D16  
                      l2846 1CC6                        l2838 1C70                        l2790 1AEE  
                      l2782 1AC0                        l2774 1A98                        l2758 1A30  
                      l2766 1A5A                        l2950 1814                        l2942 1788  
                      l2934 1734                        l2926 16EE                        l2918 16BC  
                      l2870 1580                        l3590 2C04                        l3582 2BE0  
                      l3718 35FA                        l3734 30EE                        l3726 30BE  
                      l2694 1502                        l2686 14A8                        l2678 145C  
                      l2598 123E                        l4198 0E82                        l3574 3054  
                      l3566 3006                        l4294 1E4E                        l4286 1E0C  
                      l4278 1DBE                        l4366 3428                        l4358 33FA  
                      l4390 27FA                        l4382 27C2                        l4374 3242  
                      l3830 31A0                        l3822 317A                        l3814 3170  
                      l3806 315A                        l3910 23E4                        l3902 2374  
                      ?_pad 000F                        l2856 1D24                        l2848 1CDC  
                      l2792 1AFE                        l2784 1AC0                        l2776 1A9C  
                      l2768 1A6A                        l2960 1850                        l2952 181E  
                      l2944 17B2                        l2936 1744                        l2928 16FE  
                      l2880 15C0                        l2872 158E                        l3760 247A  
                      l3752 2400                        l3592 2C1E                        l3584 2BE2  
                      l3736 3116                        l3728 30C8                        l2696 1512  
                      l2688 14B6                        l3576 3074                        l3568 300E  
                      l4296 1E6A                        l4288 1E14                        l4392 2810  
                      l4384 27C6                        l4376 3252                        l3840 31DA  
                      l3832 31A8                        l3824 3188                        l3808 315C  
                      l3912 23F0                        l3904 23A6                        l3842 359E  
                      l2858 1D2A                        l2794 1B0E                        l2970 18C2  
                      l2962 185E                        l2954 182C                        l2946 17E8  
                      l2938 1760                        l2890 15F0                        l2882 15C6  
                      l2874 1590                        l3770 24D4                        l3754 2410  
                      l3850 2CA0                        l3594 2C3A                        l3586 2BE4  
                      l3738 311A                        l3930 347A                        l2698 1532  
                      l3578 307C                        l4298 1E82                        l4394 2820  
                      l4386 27D4                        l4378 3268                        l3834 31B6  
                      l3826 318A                        l3906 23CC                        l3844 35AC  
                      l2796 1B1E                        l2788 1AD4                        l2980 192C  
                      l2972 18D0                        l2964 188C                        l2956 183E  
                      l2948 17F6                        l2892 15F2                        l2884 15D6  
                      l2876 15A0                        l2868 1574                        l3780 2538  
                      l3772 24D6                        l3764 248E                        l3756 241E  
                      l3852 2CD4                        l3596 2C54                        l3588 2BEC  
                      l3692 3678                        l3932 3486                        l3940 328A  
                      l4396 2836                        l4388 27EA                        l3836 31BC  
                      l3828 319A                        l3908 23D8                        l3846 35C4  
                      l2798 1B26                        l2990 1982                        l2982 1946  
                      l2974 18FA                        l2958 184C                        l2894 1602  
                      l2886 15DC                        l2878 15B0                        l3790 2590  
                      l3782 2556                        l3774 24E2                        l3766 2496  
                      l3758 2464                        l3598 2C56                        l3694 3682  
                      l3934 3494                        l3950 32D0                        l3942 329A  
                      l4398 2846                        l3838 31D2                        l2984 1962  
                      l2992 1988                        l2968 18B6                        l2976 18FE  
                      l2896 1612                        l2888 15E2                        l3792 259E  
                      l3784 2558                        l3776 251E                        l3768 24A2  
                      l3848 2C5A                        l3696 368A                        l3936 3498  
                      l3952 32FC                        l3944 32A8                        l3960 3378  
                      l2994 198C                        l2986 1972                        l2978 1918  
                      l2898 1622                        l3794 25A0                        l3786 255C  
                      l3778 252A                        l3698 368C                        l3946 32BC  
                      l3938 327C                        l3970 25B2                        l3962 3384  
                      l3954 34F8                        l3890 2260                        l2988 1980  
                      l3788 2580                        l3948 32CC                        l3980 2610  
                      l3972 25D4                        l3964 3388                        l3956 3500  
                      l3892 2292                        l3990 2646                        l3982 2616  
                      l3974 25D6                        l2998 33B4                        l3966 3394  
                      l3958 3364                        l3798 314C                        l3894 22C4  
                      l3886 2208                        l3992 2650                        l3984 2626  
                      l3976 25E4                        l3968 3398                        l3896 22EA  
                      l3888 223A                        l3994 2656                        l3986 2632  
                      l3978 2600                        l3898 231C                        l3996 2688  
                      l3988 263A                        l3998 268E                        STR_1 0621  
                      STR_2 0630                        STR_3 0601                        STR_4 0611  
                      STR_5 063C                        STR_6 063C                        STR_7 063C  
                      STR_8 063C                        STR_9 0653                        u3000 1648  
                      u3001 1644                        u3010 1658                        u3011 1654  
                      u3100 1918                        u3020 17D2                        u2300 2E6A  
                      u3101 1914                        u2301 2E66                        u3110 1946  
                      u3030 182C                        u2310 10CE                        u3111 1942  
                      u3031 1828                        u2311 10CA                        u3120 1980  
                      u3040 184C                        u3200 2ED8                        u2400 1222  
                      u2320 10E0                        u3121 197C                        u3041 1848  
                      u3025 17C8                        u3201 2ED4                        u2401 121E  
                      u2321 10DC                        u3050 185E                        u3130 2D40  
                      u3210 2EF2                        u2410 123A                        u2330 10F0  
                      u3051 185A                        u3131 2D3C                        u3211 2EEE  
                      u2411 1234                        u2331 10EC                        u3060 188C  
                      u3140 2D5A                        u3220 2F10                        u3300 29FE  
                      u2500 131E                        u2420 123C                        u2340 1132  
                      u3061 1888                        u3141 2D56                        u3221 2F0C  
                      u3301 29FA                        u2501 131A                        u2341 112E  
                      u3070 18A2                        u3150 2D80                        u3230 2F26  
                      u2270 2E02                        u3310 2A1E                        u2510 1356  
                      u2430 1264                        u2350 1148                        u3071 189E  
                      u3151 2D7C                        u3231 2F22                        u2271 2DFE  
                      u3311 2A1A                        u2511 1352                        u2431 1260  
                      u2351 1144                        u3080 18B6                        u3160 2D9E  
                      u3240 2F4A                        u2280 2E12                        u3320 2A6E  
                      u2600 1472                        u2520 139C                        u2440 1282  
                      u2360 115A                        u3400 2952                        u5000 0F92  
                      u3081 18B2                        u3161 2D9A                        u3241 2F46  
                      u2281 2E0E                        u3321 2A6A                        u2601 146E  
                      u2521 1398                        u2441 127E                        u2361 1156  
                      u3401 294E                        u5001 0F8E                        u3090 18D0  
                      u3170 2DBA                        u2290 2E38                        u3250 2F8A  
                      u3330 3548                        u2610 1488                        u2530 13D2  
                      u2450 12A2                        u2370 116A                        u5010 0FF8  
                      u3091 18CC                        u3171 2DB6                        u2291 2E34  
                      u3251 2F86                        u3331 3544                        u2611 1484  
                      u2531 13CE                        u2451 129E                        u2371 1166  
                      u5011 0FF2                        u4300 2410                        u3180 2DE0  
                      u3260 2FC8                        u2620 149C                        u2540 13E2  
                      u2460 12B0                        u2380 11A6                        u3340 2884  
                      u5020 0FFA                        u4140 3030                        u5100 1E0C  
                      u4301 240C                        u3181 2DDC                        u3261 2FC4  
                      u2621 1498                        u2541 13DE                        u2461 12AC  
                      u2381 11A2                        u3341 2880                        u4141 302C  
                      u5101 1E08                        u2710 19B8                        u4310 241E  
                      u3190 2EBE                        u3270 2FFC                        u2630 14B6  
                      u2550 140E                        u2470 12C0                        u2390 11B4  
                      u3350 28B8                        u3510 2B62                        u5030 100C  
                      u4150 30A2                        u5110 1E4E                        u2711 19B4  
                      u4311 241A                        u3191 2EBA                        u3271 2FF8  
                      u2631 14B2                        u2551 140A                        u2471 12BC  
                      u2391 11B0                        u3511 2B5C                        u5031 1008  
                      u4151 309E                        u5111 1E4A                        u2800 1B58  
                      u2720 19CA                        u4320 247A                        u3280 29A2  
                      u2640 14F0                        u2560 141E                        u2480 12F2  
                      u3360 28E6                        u3520 2B64                        u3600 211E  
                      u5040 104A                        u5120 1E6A                        u4400 319A  
                      u2801 1B54                        u2721 19C6                        u4321 2476  
                      u3281 299E                        u2641 14EC                        u2561 141A  
                      u2481 12EE                        u3361 28E2                        u3505 2B3A  
                      u5041 1046                        u5121 1E66                        u4401 3196  
                      u4410 35BC                        u2810 1B82                        u2730 19DA  
                      u4330 24D0                        u4250 30BE                        u3450 3578  
                      u3290 29E0                        u2650 1502                        u2570 143A  
                      u2490 1300                        u3370 28FA                        u3610 213A  
                      u5050 1068                        u5130 1F0C                        u4411 35B8  
                      u2811 1B7E                        u2731 19D6                        u4331 24CC  
                      u4235 3680                        u4251 30BA                        u3451 3574  
                      u3291 29DC                        u2651 14FE                        u2571 1436  
                      u2491 12FC                        u3371 28F6                        u3355 28AE  
                      u3611 2136                        u5051 1064                        u5131 1F08  
                      u2900 1C7E                        u2820 1BA6                        u2740 1A1E  
                      u4340 251A                        u4236 3682                        u4260 30DA  
                      u2660 1512                        u2580 144A                        u3380 2922  
                      u3460 2AB8                        u3620 218E                        u3540 331C  
                      u5060 1078                        u5140 346E                        u4420 223A  
                      u2901 1C7A                        u2821 1BA2                        u2741 1A1A  
                      u4341 2516                        u4261 30D6                        u2661 150E  
                      u2581 1446                        u3381 291E                        u3605 2114  
                      u3541 3318                        u5061 1074                        u5141 346A  
                      u4421 2236                        u2910 1CC6                        u2830 1BBC  
                      u2750 1A30                        u4350 2538                        u4270 310E  
                      u2670 1532                        u2590 145C                        u3390 2942  
                      u3470 2AD6                        u3630 21AA                        u3550 203E  
                      u5070 1D5A                        u4430 2292                        u5150 34E4  
                      u2911 1CC2                        u2831 1BB8                        u2751 1A2C  
                      u4351 2534                        u2671 152E                        u2591 1458  
                      u3391 293E                        u3471 2AD2                        u3631 21A6  
                      u5071 1D56                        u5207 31C2                        u4431 228E  
                      u5151 34E0                        u2920 1CF6                        u2840 1BDA  
                      u2760 1A40                        u4360 2548                        u4280 313A  
                      u4600 25C2                        u2680 1544                        u3480 2AFE  
                      u3640 21E6                        u3560 206C                        u5080 1DBE  
                      u4440 22C4                        u2921 1CF2                        u2841 1BD6  
                      u2761 1A3C                        u4361 2544                        u4601 25BC  
                      u2681 1540                        u3481 2AFA                        u3465 2AAE  
                      u3641 21E2                        u3625 2184                        u3561 2068  
                      u5081 1DBA                        u5217 31D4                        u4505 23EE  
                      u4441 22C0                        u2930 1D24                        u2850 1BFA  
                      u2770 1A80                        u4370 2556                        u4290 314A  
                      u4530 34B8                        u4610 25C4                        u2690 1560  
                      u3490 2B28                        u3570 208E                        u5090 1DE0  
                      u4506 23F0                        u4450 231C                        u2931 1D20  
                      u2851 1BF6                        u2771 1A7C                        u4371 2552  
                      u4291 3146                        u4531 34B4                        u2691 155C  
                      u3491 2B24                        u3571 208A                        u3555 2034  
                      u5091 1DDC                        u5227 31E2                        u4515 23FA  
                      u4451 2318                        u2860 1C0C                        u2780 1AC0  
                      u2940 158E                        u4380 2590                        u3660 366C  
                      u4540 328A                        u4700 271E                        u4620 25D4  
                      u4516 23FC                        u4460 234E                        u2861 1C08  
                      u2781 1ABC                        u2941 158A                        u4381 258C  
                      u3661 3668                        u4277 3104                        u4541 3286  
                      u4701 271A                        u4621 25D0                        u5237 27CC  
                      u4461 234A                        u2870 1C3A                        u2790 1B36  
                      u2950 15A0                        u4390 259E                        u4550 32A8  
                      u4710 272E                        u4630 25E4                        u3590 20FA  
                      u4470 23A6                        u2871 1C36                        u2791 1B32  
                      u2951 159C                        u4391 259A                        u5247 3684  
                      u4287 3130                        u4551 32A4                        u4711 272A  
                      u4631 25E0                        u3591 20F6                        u5167 3166  
                      u4471 23A2                        u2880 1C50                        u2960 15B0  
                      u4560 32EE                        u4640 2610                        u4800 08B4  
                      u4720 0684                        u2881 1C4C                        u2961 15AC  
                      u5257 35DE                        u4561 32EA                        u4641 260C  
                      u3585 20A2                        u4801 08B0                        u4721 0680  
                      u5177 3180                        u2890 1C64                        u2970 15F0  
                      u4570 32FC                        u4650 2626                        u3586 20AC  
                      u4810 08E6                        u4730 06CE                        u2891 1C60  
                      u2971 15EC                        u5267 35F0                        u4571 32F8  
                      u4651 2622                        u3587 20BC                        u4811 08E2  
                      u4731 06CA                        u5187 31A2                        u2980 1602  
                      u4660 26CA                        u4580 3530                        u4900 0C18  
                      u4820 0924                        u4740 06DE                        u2981 15FE  
                      u5277 2BE6                        u4661 26C6                        u4581 352C  
                      u4901 0C14                        u4821 0920                        u4741 06DA  
                      u5197 31B0                        u4485 23D6                        u2990 1612  
                      u4670 26DC                        u4590 33B2                        u4910 0C60  
                      u4830 09B0                        u4750 071C                        u4486 23D8  
                      u5287 35A4                        u2991 160E                        u4671 26D8  
                      u4591 33AE                        u4911 0C5C                        u4831 09AC  
                      u4751 0718                        u4495 23E2                        u4680 26F6  
                      u4920 0C70                        u4840 09E6                        u4760 072E  
                      u4496 23E4                        u4681 26F2                        u4921 0C6C  
                      u4841 09E2                        u4761 072A                        u4690 2710  
                      u4930 0D0A                        u4850 09FC                        u4770 07A0  
                      u4691 270C                        u4931 0D06                        u4851 09F8  
                      u4771 079C                        u4940 0D58                        u4860 0A32  
                      u4780 07B2                        u4941 0D54                        u4861 0A2E  
                      u4781 07AE                        u4950 0E06                        u4870 0A40  
                      u4790 0828                        u4951 0E02                        u4871 0A3C  
                      u4791 0824                        u4960 0E42                        u4880 0A6A  
                      u4961 0E3E                        u4881 0A66                        u4970 0E50  
                      u4890 0BB2                        u4971 0E4C                        u4891 0BAE  
                      u4980 0EA4                        u4981 0EA0                        u4990 0F76  
                      u4991 0F72                        abs@a 0007                        _dbuf 0100  
                      _labs 330E                        _main 34BA                        _dtoa 25B2  
                      _prec 007D                        pad@i 0015                        pad@p 0012  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
             ___fpclassifyf 2A78                        prodh 0FF4                        prodl 0FF3  
                      start 0000             ___fldiv@new_exp 0039             _equation_SENSOR 2C5A  
              ___param_bank 0000                       ??_abs 0009                       ??_pad 0014  
             ___fltol@sign1 0009                       ?_labs 0001             __end_of___fladd 1574  
                     ?_main 0001                       ?_dtoa 0017             __end_of___fldiv 1D38  
           __end_of___awdiv 2DF2             __end_of___flneg 356A                       STR_10 0657  
                     STR_11 065B                       STR_12 0646                       STR_13 064B  
                     STR_16 064F             __end_of___awmod 2F5C             __end_of___flmul 199E  
           __end_of___flsub 33FA             __end_of___fltol 2974             ___awdiv@divisor 0003  
           ___awdiv@counter 0005               _VoltageSensor 008C                vfpfcnvrt@fmt 005E  
                     _PORTC 0F82                       _PORTD 0F83                       _TRISB 0F93  
                     _TRISC 0F94                       _TRISD 0F95                       _SolS1 0096  
                     _SolS2 0094                       _SolS3 0092                       _SolS4 0090  
           __end_of_lcd_cmd 2C5A                       _flags 007F         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 2DF2                       _fputs 347A  
                     labs@a 0001                       pad@fp 000F                       _width 007B  
                     _putch 36BA                       dtoa@d 0018                       dtoa@i 0021  
                     dtoa@p 001C                       dtoa@s 0020                       dtoa@w 001E  
           __end_of_set_bit 3676                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 343A              ?___fpclassifyf 0001                lcd_write@end 000A  
              lcd_write@col 0007                lcd_write@lin 000B                lcd_write@str 0008  
           __initialization 3602                __end_of_labs 3364                __end_of_main 34F8  
              __end_of_dtoa 2762             ??_lcd_send_byte 0006                      ??_labs 0005  
                    ??_main 0077                      ??_dtoa 001A               __activetblptr 0002  
__end_of_read_prec_or_width 30AC                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0FC4                      _ADRESL 0FC3            ___awdiv@dividend 0001  
                    ?_putch 0001     __end_of_equation_SENSOR 2D2E                      _OSCCON 0FD3  
             vfpfcnvrt@done 0061            __end_of___xxtofl 25B2            __end_of_conv_AN0 35D2  
              vfprintf@cfmt 0068            __end_of_lcd_init 31EA                      ___flge 2974  
                    ___fleq 2F5C                   ??___fladd 0009                      ___wmul 3630  
                 ??___fldiv 0030                   ??___awdiv 0005                   ??___flneg 0005  
                 ??___awmod 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0660                      _floorf 1FF6  
                    _memcpy 3364        read_prec_or_width@ap 0008                      clear_0 3608  
                    clear_1 3614                      clear_2 3620            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 0010                   ??_lcd_cmd 0003                      dtoa@fp 0017  
                    _strcpy 34F8                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_set_bit 0002                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 347A  
                 ??_sprintf 0069                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0080     __end_of__initialization 3626                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 2EAC               __end_of_fputs 34BA               __end_of_putch 36BC  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 0080                  __pbssBANK1 0100            ?_equation_SENSOR 0001  
               _VdigADC_AN0 00C8                     ?___flge 0028                     ?___fleq 0001  
                _lcd_SENSOR 31EA                     ?___wmul 0001                     ?_efgtoa 0055  
             _logic_CONTROL 2208                     ?_floorf 0041                     ?_memcpy 0001  
            _lcd_PERIPHERAL 2762                     ?_strcpy 0001                  _config_ADC 36A2  
                 ?___xxtofl 0001          lcd_send_byte@level 0006                     _OSCTUNE 0F9B  
                 ?_conv_AN0 0001                   ?_lcd_init 0001                     __Hparam 0000  
                   __Lparam 0000           __end_of_lcd_clear 3602           __end_of_config_IO 36A2  
         _BufferLCD_Voltage 0098                     ___fladd 10B4              ?_logic_CONTROL 0001  
                   ___fldiv 199E                     ___awdiv 2D2E                     ___flneg 3532  
                   ___awmod 2EAC                     ___flmul 1574                     ___flsub 33B4  
                   ___fltol 286E           __end_of_lcd_write 314C                   ?_vfprintf 00F6  
               set_bit@comp 0001                __psmallconst 0600      __end_of_lcd_PERIPHERAL 286E  
                   __pcinit 3602                     __ramtop 0600                     __ptext0 34BA  
                   __ptext1 2208                     __ptext2 314C                     __ptext3 31EA  
                   __ptext4 2762                     __ptext5 33FA                     __ptext6 343A  
                   __ptext7 1D38                     __ptext8 3006                     __ptext9 3630  
                   _lcd_cmd 2B76       read_prec_or_width@fmt 0007                 _PressSensor 0077  
                ??___xxtofl 0005            ___awmod@dividend 0001                     _set_bit 3656  
                   efgtoa@c 005A                     efgtoa@d 00D5                     efgtoa@e 00D9  
                   efgtoa@f 0056                     efgtoa@g 00EC                     efgtoa@h 00E1  
                   efgtoa@i 00E9                     efgtoa@l 00E5                     efgtoa@m 00D7  
                   efgtoa@n 00F0                     efgtoa@p 00CC                     efgtoa@t 00CE  
                   efgtoa@u 00F2                     efgtoa@w 00DF                  ??_conv_AN0 0001  
                   _sprintf 33FA                  ??_lcd_init 0005        end_of_initialization 3626  
                   floorf@e 004F                     floorf@m 004B                     floorf@u 0051  
                   floorf@x 0041                     memcpy@d 0008                     memcpy@n 0005  
                   memcpy@s 000A                     fputc@fp 0003               __Lmediumconst 0000  
                   fputs@fp 000B          _read_prec_or_width 3006           __end_of_vfpfcnvrt 1FF6  
                efgtoa@mode 00D3                  efgtoa@sign 00EB                 ?_lcd_SENSOR 0001  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0062  
                ??_vfprintf 0068       __end_of_lcd_send_byte 3694             ?_lcd_PERIPHERAL 0001  
                   strcpy@d 0005                   _PORTBbits 0F81                   _PORTCbits 0F82  
                 _PORTDbits 0F83                   _PORTEbits 0F84                 ___fladd@grs 0010  
               ?_config_ADC 0001               ___xxtofl@sign 0009                   _TRISEbits 0F96  
                lcd_cmd@cmd 0004        ??_read_prec_or_width 0009                 ___fldiv@grs 003B  
               ___fldiv@rem 0034                 ___flmul@grs 001C               ??_config_FOSC 0001  
           ??_logic_CONTROL 0034              __end_of___flge 2A78              __end_of___fleq 3006  
               vfpfcnvrt@ap 005F                 vfpfcnvrt@cp 0067                 vfpfcnvrt@fp 005D  
            __end_of___wmul 3656              __end_of_efgtoa 10B4              __end_of_floorf 2208  
            __end_of_memcpy 33B4                  floorf@F521 0080              __end_of_strcpy 3532  
       start_initialization 3602                 __end_of_abs 359E                 __end_of_pad 330E  
     __end_of___fpclassifyf 2B76                 vfprintf@fmt 00F7                    ??___flge 0030  
                  ??___fleq 0009         __end_of_config_FOSC 36BA                    ??___wmul 0005  
                  ??_efgtoa 005B                    ??_floorf 0045                    ??_memcpy 0007  
                  ??_strcpy 0004                   ___fladd@a 0005                   ___fladd@b 0001  
                 ___fldiv@a 002C                   ___fldiv@b 0028                   ___flmul@a 0013  
                 ___flmul@b 000F                 __pbssCOMRAM 0077                   ___flsub@a 002C  
                 ___flsub@b 0028               __pcstackBANK0 00CA                 _efgtoa$1146 00D0  
                 _dtoa$1115 001A                    ?___fladd 0001                    ?___fldiv 0028  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0001  
                 _lcd_clear 35D2                   _config_IO 3694           lcd_send_byte@data 0005  
                  ?_lcd_cmd 0001                   _lcd_write 30AC                 __smallconst 0600  
                  ?_set_bit 0001                  set_bit@cmd 0002                    ?_sprintf 00F9  
            ___wmul@product 0005                 _config_FOSC 36B0            ??_lcd_PERIPHERAL 0076  
              ??_lcd_SENSOR 0076                  ?_lcd_clear 0001                   _vfpfcnvrt 1D38  
                ?_config_IO 0001                  _ADCON0bits 0FC2                  ?_lcd_write 0007  
         ___wmul@multiplier 0001                   lcd_init@i 0006                ??_config_ADC 0001  
                  _BufferS1 00C0                    _BufferS2 00B8                    _BufferS3 00B0  
                  _BufferS4 00A8                  vfpfcnvrt@c 0066          __end_of_lcd_SENSOR 327C  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 00F8  
                  __Lrparam 0000                  vfprintf@fp 00F6          __end_of_config_ADC 36B0  
                ?_vfpfcnvrt 005D           ??_equation_SENSOR 0041          ___fpclassifyf@F465 0084  
                sprintf@fmt 00FB                    ___xxtofl 23FE                    __ptext10 0660  
                  __ptext11 34F8                    __ptext20 2974                    __ptext12 3364  
                  __ptext21 2F5C                    __ptext13 330E                    __ptext30 30AC  
                  __ptext22 25B2                    __ptext14 1FF6                    __ptext31 3676  
                  __ptext23 327C                    __ptext15 2A78                    __ptext40 3694  
                  __ptext32 35D2                    __ptext24 347A                    __ptext16 286E  
                  __ptext41 36B0                    __ptext33 2B76                    __ptext25 2DF2  
                  __ptext17 33B4                    __ptext42 36A2                    __ptext34 3656  
                  __ptext26 36BA                    __ptext18 10B4                    __ptext35 2C5A  
                  __ptext27 356A                    __ptext19 3532                    __ptext36 23FE  
                  __ptext28 2EAC                    __ptext37 1574                    __ptext29 2D2E  
                  __ptext38 199E                    __ptext39 359E                    _conv_AN0 359E  
                  _lcd_init 314C                  strcpy@dest 0001             _BufferLCD_Press 0150  
              _PressPercent 0088                    efgtoa@fp 0055                    efgtoa@ne 00CA  
                  efgtoa@pp 00D2                    efgtoa@ou 00DB                    isa$xinst 0000  
     __end_of_logic_CONTROL 23FE                    _vfprintf 343A                 ??_lcd_clear 0005  
               ??_config_IO 0001                 ??_lcd_write 000A                    memcpy@d1 0001  
                  memcpy@s1 0003                   sprintf@ap 0069                   strcpy@src 0003  
               efgtoa@nmode 00D4                 ??_vfpfcnvrt 0060               _lcd_send_byte 3676  
                  sprintf@f 006A                    sprintf@s 00F9               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F                ?_config_FOSC 0001  
