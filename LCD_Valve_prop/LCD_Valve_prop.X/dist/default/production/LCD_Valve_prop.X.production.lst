

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 28 13:51:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 17/10/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4520 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     _ADRESL	set	4035
    88   000000                     _ADRESH	set	4036
    89   000000                     _PORTCbits	set	3970
    90   000000                     _ADCON0bits	set	4034
    91   000000                     _PORTDbits	set	3971
    92   000000                     _PORTC	set	3970
    93   000000                     _PORTD	set	3971
    94   000000                     _TRISD	set	3989
    95   000000                     _OSCTUNE	set	3995
    96   000000                     _OSCCON	set	4051
    97   000000                     _TRISEbits	set	3990
    98   000000                     _TRISC	set	3988
    99   000000                     _PORTEbits	set	3972
   100   000000                     _ADCON2	set	4032
   101   000000                     _ADCON1	set	4033
   102   000000                     _ADCON0	set	4034
   103                           
   104                           	psect	smallconst
   105   000600                     __psmallconst:
   106                           	callstack 0
   107   000600  00                 	db	0
   108   000601                     STR_3:
   109   000601  53                 	db	83	;'S'
   110   000602  45                 	db	69	;'E'
   111   000603  4E                 	db	78	;'N'
   112   000604  53                 	db	83	;'S'
   113   000605  4F                 	db	79	;'O'
   114   000606  52                 	db	82	;'R'
   115   000607  3A                 	db	58	;':'
   116   000608  20                 	db	32
   117   000609  20                 	db	32
   118   00060A  20                 	db	32
   119   00060B  20                 	db	32
   120   00060C  20                 	db	32
   121   00060D  20                 	db	32
   122   00060E  20                 	db	32
   123   00060F  20                 	db	32
   124   000610  00                 	db	0
   125   000611                     STR_4:
   126   000611  50                 	db	80	;'P'
   127   000612  52                 	db	82	;'R'
   128   000613  45                 	db	69	;'E'
   129   000614  53                 	db	83	;'S'
   130   000615  53                 	db	83	;'S'
   131   000616  41                 	db	65	;'A'
   132   000617  4F                 	db	79	;'O'
   133   000618  3A                 	db	58	;':'
   134   000619  20                 	db	32
   135   00061A  20                 	db	32
   136   00061B  20                 	db	32
   137   00061C  20                 	db	32
   138   00061D  20                 	db	32
   139   00061E  20                 	db	32
   140   00061F  20                 	db	32
   141   000620  00                 	db	0
   142   000621                     STR_1:
   143   000621  25                 	db	37
   144   000622  30                 	db	48	;'0'
   145   000623  2E                 	db	46
   146   000624  31                 	db	49	;'1'
   147   000625  66                 	db	102	;'f'
   148   000626  42                 	db	66	;'B'
   149   000627  41                 	db	65	;'A'
   150   000628  52                 	db	82	;'R'
   151   000629  20                 	db	32
   152   00062A  20                 	db	32
   153   00062B  20                 	db	32
   154   00062C  20                 	db	32
   155   00062D  20                 	db	32
   156   00062E  20                 	db	32
   157   00062F  00                 	db	0
   158   000630                     STR_2:
   159   000630  25                 	db	37
   160   000631  30                 	db	48	;'0'
   161   000632  2E                 	db	46
   162   000633  32                 	db	50	;'2'
   163   000634  66                 	db	102	;'f'
   164   000635  56                 	db	86	;'V'
   165   000636  20                 	db	32
   166   000637  20                 	db	32
   167   000638  20                 	db	32
   168   000639  20                 	db	32
   169   00063A  20                 	db	32
   170   00063B  00                 	db	0
   171   00063C                     STR_5:
   172   00063C  69                 	db	105	;'i'
   173   00063D  6E                 	db	110	;'n'
   174   00063E  66                 	db	102	;'f'
   175   00063F  00                 	db	0
   176   000640                     STR_8:
   177   000640  6E                 	db	110	;'n'
   178   000641  61                 	db	97	;'a'
   179   000642  6E                 	db	110	;'n'
   180   000643  00                 	db	0
   181   000644  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   002F8C                     __pcinit:
   187                           	callstack 0
   188   002F8C                     start_initialization:
   189                           	callstack 0
   190   002F8C                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Clear objects allocated to BANK1 (80 bytes)
   194   002F8C  EE01  F000         	lfsr	0,__pbssBANK1
   195   002F90  0E50               	movlw	80
   196   002F92                     clear_0:
   197   002F92  6AEE               	clrf	postinc0,c
   198   002F94  06E8               	decf	wreg,f,c
   199   002F96  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK0 (48 bytes)
   202   002F98  EE00  F0C2         	lfsr	0,__pbssBANK0
   203   002F9C  0E30               	movlw	48
   204   002F9E                     clear_1:
   205   002F9E  6AEE               	clrf	postinc0,c
   206   002FA0  06E8               	decf	wreg,f,c
   207   002FA2  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to COMRAM (11 bytes)
   210   002FA4  EE00  F069         	lfsr	0,__pbssCOMRAM
   211   002FA8  0E0B               	movlw	11
   212   002FAA                     clear_2:
   213   002FAA  6AEE               	clrf	postinc0,c
   214   002FAC  06E8               	decf	wreg,f,c
   215   002FAE  E1FD               	bnz	clear_2
   216   002FB0                     end_of_initialization:
   217                           	callstack 0
   218   002FB0                     __end_of__initialization:
   219                           	callstack 0
   220   002FB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221   002FB2  6EF8               	movwf	tblptru,c
   222   002FB4  0100               	movlb	0
   223   002FB6  EFDD  F017         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226   000069                     __pbssCOMRAM:
   227                           	callstack 0
   228   000069                     _PressSensor:
   229                           	callstack 0
   230   000069                     	ds	4
   231   00006D                     _width:
   232                           	callstack 0
   233   00006D                     	ds	2
   234   00006F                     _prec:
   235                           	callstack 0
   236   00006F                     	ds	2
   237   000071                     _flags:
   238                           	callstack 0
   239   000071                     	ds	1
   240   000072                     _VdigADC_AN0:
   241                           	callstack 0
   242   000072                     	ds	2
   243                           
   244                           	psect	bssBANK0
   245   0000C2                     __pbssBANK0:
   246                           	callstack 0
   247   0000C2                     floorf@F521:
   248                           	callstack 0
   249   0000C2                     	ds	4
   250   0000C6                     ___fpclassifyf@F465:
   251                           	callstack 0
   252   0000C6                     	ds	4
   253   0000CA                     _PressPercent:
   254                           	callstack 0
   255   0000CA                     	ds	4
   256   0000CE                     _VoltageSensor:
   257                           	callstack 0
   258   0000CE                     	ds	4
   259   0000D2                     _BufferLCD_Press:
   260                           	callstack 0
   261   0000D2                     	ds	16
   262   0000E2                     _BufferLCD_Voltage:
   263                           	callstack 0
   264   0000E2                     	ds	16
   265                           
   266                           	psect	bssBANK1
   267   000100                     __pbssBANK1:
   268                           	callstack 0
   269   000100                     _dbuf:
   270                           	callstack 0
   271   000100                     	ds	80
   272                           
   273                           	psect	cstackBANK0
   274   000080                     __pcstackBANK0:
   275                           	callstack 0
   276   000080                     efgtoa@ne:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x0
   280   000080                     	ds	2
   281   000082                     efgtoa@p:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285   000082                     	ds	2
   286   000084                     efgtoa@t:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x4
   290   000084                     	ds	2
   291   000086                     _efgtoa$1030:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x6
   295   000086                     	ds	2
   296   000088                     efgtoa@pp:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x8
   300   000088                     	ds	1
   301   000089                     efgtoa@mode:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x9
   305   000089                     	ds	1
   306   00008A                     efgtoa@nmode:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xA
   310   00008A                     	ds	1
   311   00008B                     efgtoa@d:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315   00008B                     	ds	2
   316   00008D                     efgtoa@m:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xD
   320   00008D                     	ds	2
   321   00008F                     efgtoa@e:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xF
   325   00008F                     	ds	2
   326   000091                     efgtoa@ou:
   327                           	callstack 0
   328                           
   329                           ; 4 bytes @ 0x11
   330   000091                     	ds	4
   331   000095                     efgtoa@w:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x15
   335   000095                     	ds	2
   336   000097                     efgtoa@h:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x17
   340   000097                     	ds	4
   341   00009B                     efgtoa@l:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0x1B
   345   00009B                     	ds	4
   346   00009F                     efgtoa@i:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x1F
   350   00009F                     	ds	2
   351   0000A1                     efgtoa@sign:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x21
   355   0000A1                     	ds	1
   356   0000A2                     efgtoa@g:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x22
   360   0000A2                     	ds	4
   361   0000A6                     efgtoa@n:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x26
   365   0000A6                     	ds	2
   366   0000A8                     efgtoa@u:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x28
   370   0000A8                     	ds	4
   371   0000AC                     ?_vfprintf:
   372                           	callstack 0
   373   0000AC                     vfprintf@fp:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x2C
   377   0000AC                     	ds	1
   378   0000AD                     vfprintf@fmt:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x2D
   382   0000AD                     	ds	1
   383   0000AE                     vfprintf@ap:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x2E
   387   0000AE                     	ds	1
   388   0000AF                     ?_sprintf:
   389                           	callstack 0
   390   0000AF                     sprintf@s:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x2F
   394   0000AF                     	ds	1
   395   0000B0                     sprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x30
   399   0000B0                     	ds	5
   400   0000B5                     sprintf@ap:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x35
   404   0000B5                     	ds	1
   405   0000B6                     sprintf@f:
   406                           	callstack 0
   407                           
   408                           ; 12 bytes @ 0x36
   409   0000B6                     	ds	12
   410                           
   411                           	psect	cstackCOMRAM
   412   000001                     __pcstackCOMRAM:
   413                           	callstack 0
   414   000001                     ??_conv_AN0:
   415   000001                     ?___fpclassifyf:
   416                           	callstack 0
   417   000001                     ?___wmul:
   418                           	callstack 0
   419   000001                     ?___fladd:
   420                           	callstack 0
   421   000001                     ?_labs:
   422                           	callstack 0
   423   000001                     ?___flneg:
   424                           	callstack 0
   425   000001                     ?___fltol:
   426                           	callstack 0
   427   000001                     ?___xxtofl:
   428                           	callstack 0
   429   000001                     set_bit@comp:
   430                           	callstack 0
   431   000001                     ___wmul@multiplier:
   432                           	callstack 0
   433   000001                     memcpy@d1:
   434                           	callstack 0
   435   000001                     fputc@c:
   436                           	callstack 0
   437   000001                     strcpy@dest:
   438                           	callstack 0
   439   000001                     ___fleq@ff1:
   440                           	callstack 0
   441   000001                     ___flneg@f1:
   442                           	callstack 0
   443   000001                     ___fltol@f1:
   444                           	callstack 0
   445   000001                     ___fladd@b:
   446                           	callstack 0
   447   000001                     ___xxtofl@val:
   448                           	callstack 0
   449   000001                     ___fpclassifyf@x:
   450                           	callstack 0
   451   000001                     labs@a:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x0
   455   000001                     	ds	1
   456   000002                     set_bit@cmd:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x1
   460   000002                     	ds	1
   461   000003                     ??_lcd_cmd:
   462   000003                     fputc@fp:
   463                           	callstack 0
   464   000003                     strcpy@src:
   465                           	callstack 0
   466   000003                     ___wmul@multiplicand:
   467                           	callstack 0
   468   000003                     memcpy@s1:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x2
   472   000003                     	ds	1
   473   000004                     ??_fputc:
   474   000004                     ??_strcpy:
   475   000004                     lcd_cmd@cmd:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x3
   479   000004                     	ds	1
   480   000005                     ??___fpclassifyf:
   481   000005                     ??_labs:
   482   000005                     ??_lcd_init:
   483   000005                     ??___fltol:
   484   000005                     ??___xxtofl:
   485   000005                     lcd_send_byte@data:
   486                           	callstack 0
   487   000005                     ___wmul@product:
   488                           	callstack 0
   489   000005                     memcpy@n:
   490                           	callstack 0
   491   000005                     strcpy@d:
   492                           	callstack 0
   493   000005                     ___fleq@ff2:
   494                           	callstack 0
   495   000005                     ___fladd@a:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499   000005                     	ds	1
   500   000006                     lcd_init@i:
   501                           	callstack 0
   502   000006                     lcd_send_byte@level:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x5
   506   000006                     	ds	1
   507   000007                     ?_read_prec_or_width:
   508                           	callstack 0
   509   000007                     lcd_write@col:
   510                           	callstack 0
   511   000007                     read_prec_or_width@fmt:
   512                           	callstack 0
   513   000007                     memcpy@tmp:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x6
   517   000007                     	ds	1
   518   000008                     read_prec_or_width@ap:
   519                           	callstack 0
   520   000008                     lcd_write@str:
   521                           	callstack 0
   522   000008                     memcpy@d:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x7
   526   000008                     	ds	1
   527   000009                     ??___fladd:
   528   000009                     ??___fleq:
   529   000009                     ___fltol@sign1:
   530                           	callstack 0
   531   000009                     ___xxtofl@sign:
   532                           	callstack 0
   533   000009                     read_prec_or_width@c:
   534                           	callstack 0
   535   000009                     ___fpclassifyf@e:
   536                           	callstack 0
   537   000009                     fputs@s:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x8
   541   000009                     	ds	1
   542   00000A                     lcd_write@end:
   543                           	callstack 0
   544   00000A                     ___fltol@exp1:
   545                           	callstack 0
   546   00000A                     ___xxtofl@exp:
   547                           	callstack 0
   548   00000A                     read_prec_or_width@n:
   549                           	callstack 0
   550   00000A                     memcpy@s:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x9
   554   00000A                     	ds	1
   555   00000B                     lcd_write@lin:
   556                           	callstack 0
   557   00000B                     fputs@fp:
   558                           	callstack 0
   559   00000B                     ___xxtofl@arg:
   560                           	callstack 0
   561   00000B                     ___fpclassifyf@u:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0xA
   565   00000B                     	ds	1
   566   00000C                     fputs@c:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0xB
   570   00000C                     	ds	1
   571   00000D                     ___fladd@signs:
   572                           	callstack 0
   573   00000D                     fputs@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0xC
   577   00000D                     	ds	1
   578   00000E                     ___fladd@aexp:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0xD
   582   00000E                     	ds	1
   583   00000F                     ?___flmul:
   584                           	callstack 0
   585   00000F                     ___fladd@bexp:
   586                           	callstack 0
   587   00000F                     pad@fp:
   588                           	callstack 0
   589   00000F                     ___flmul@b:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0xE
   593   00000F                     	ds	1
   594   000010                     ___fladd@grs:
   595                           	callstack 0
   596   000010                     pad@buf:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xF
   600   000010                     	ds	2
   601   000012                     pad@p:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x11
   605   000012                     	ds	1
   606   000013                     ___flmul@a:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x12
   610   000013                     	ds	1
   611   000014                     ??_pad:
   612                           
   613                           ; 1 bytes @ 0x13
   614   000014                     	ds	1
   615   000015                     pad@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x14
   619   000015                     	ds	2
   620   000017                     ??___flmul:
   621                           
   622                           ; 1 bytes @ 0x16
   623   000017                     	ds	4
   624   00001B                     ___flmul@sign:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x1A
   628   00001B                     	ds	1
   629   00001C                     ___flmul@aexp:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x1B
   633   00001C                     	ds	1
   634   00001D                     ___flmul@grs:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x1C
   638   00001D                     	ds	4
   639   000021                     ___flmul@bexp:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x20
   643   000021                     	ds	1
   644   000022                     ___flmul@prod:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x21
   648   000022                     	ds	4
   649   000026                     ___flmul@temp:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x25
   653   000026                     	ds	2
   654   000028                     ?___fldiv:
   655                           	callstack 0
   656   000028                     ?___flsub:
   657                           	callstack 0
   658   000028                     ___flge@ff1:
   659                           	callstack 0
   660   000028                     ___flsub@b:
   661                           	callstack 0
   662   000028                     ___fldiv@b:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x27
   666   000028                     	ds	4
   667   00002C                     ___flge@ff2:
   668                           	callstack 0
   669   00002C                     ___flsub@a:
   670                           	callstack 0
   671   00002C                     ___fldiv@a:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x2B
   675   00002C                     	ds	4
   676   000030                     ??___fldiv:
   677   000030                     ??___flge:
   678                           
   679                           ; 1 bytes @ 0x2F
   680   000030                     	ds	4
   681   000034                     ___fldiv@rem:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x33
   685   000034                     	ds	4
   686   000038                     ___fldiv@sign:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x37
   690   000038                     	ds	1
   691   000039                     ___fldiv@new_exp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x38
   695   000039                     	ds	2
   696   00003B                     ___fldiv@grs:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x3A
   700   00003B                     	ds	4
   701   00003F                     ___fldiv@bexp:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x3E
   705   00003F                     	ds	1
   706   000040                     ___fldiv@aexp:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x3F
   710   000040                     	ds	1
   711   000041                     ?_floorf:
   712                           	callstack 0
   713   000041                     floorf@x:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x40
   717   000041                     	ds	4
   718   000045                     ??_floorf:
   719                           
   720                           ; 1 bytes @ 0x44
   721   000045                     	ds	6
   722   00004B                     floorf@m:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x4A
   726   00004B                     	ds	4
   727   00004F                     floorf@e:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x4E
   731   00004F                     	ds	2
   732   000051                     floorf@u:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x50
   736   000051                     	ds	4
   737   000055                     efgtoa@fp:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x54
   741   000055                     	ds	1
   742   000056                     efgtoa@f:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x55
   746   000056                     	ds	4
   747   00005A                     efgtoa@c:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x59
   751   00005A                     	ds	1
   752   00005B                     ??_efgtoa:
   753                           
   754                           ; 1 bytes @ 0x5A
   755   00005B                     	ds	2
   756   00005D                     vfpfcnvrt@fp:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x5C
   760   00005D                     	ds	1
   761   00005E                     vfpfcnvrt@fmt:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x5D
   765   00005E                     	ds	1
   766   00005F                     vfpfcnvrt@ap:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x5E
   770   00005F                     	ds	1
   771   000060                     ??_vfpfcnvrt:
   772                           
   773                           ; 1 bytes @ 0x5F
   774   000060                     	ds	1
   775   000061                     vfpfcnvrt@convarg:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x60
   779   000061                     	ds	4
   780   000065                     vfpfcnvrt@done:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x64
   784   000065                     	ds	1
   785   000066                     vfpfcnvrt@c:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x65
   789   000066                     	ds	1
   790   000067                     vfpfcnvrt@cp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x66
   794   000067                     	ds	1
   795   000068                     vfprintf@cfmt:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x67
   799   000068                     	ds	1
   800   000069                     
   801                           ; 1 bytes @ 0x68
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 165 in file "Main_program.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   821 ;;      Params:         0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels required when called: 9
   827 ;; This function calls:
   828 ;;		_config_ADC
   829 ;;		_config_FOSC
   830 ;;		_config_IO
   831 ;;		_conv_AN0
   832 ;;		_equation_SENSOR
   833 ;;		_lcd_SENSOR
   834 ;;		_lcd_init
   835 ;;		_logic_CONTROL
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text0
   842   002FBA                     __ptext0:
   843                           	callstack 0
   844   002FBA                     _main:
   845                           	callstack 22
   846   002FBA                     
   847                           ;Main_program.c: 167:     config_FOSC();
   848   002FBA  EC2F  F018         	call	_config_FOSC	;wreg free
   849                           
   850                           ;Main_program.c: 168:     config_IO();
   851   002FBE  EC2A  F018         	call	_config_IO	;wreg free
   852                           
   853                           ;Main_program.c: 169:     config_ADC();
   854   002FC2  EC23  F018         	call	_config_ADC	;wreg free
   855   002FC6                     
   856                           ;Main_program.c: 170:     lcd_init();
   857   002FC6  ECDB  F015         	call	_lcd_init	;wreg free
   858   002FCA                     l4535:
   859                           
   860                           ;Main_program.c: 172:     {;Main_program.c: 173:         conv_AN0();
   861   002FCA  ECAD  F017         	call	_conv_AN0	;wreg free
   862   002FCE                     
   863                           ;Main_program.c: 174:         equation_SENSOR();
   864   002FCE  EC24  F014         	call	_equation_SENSOR	;wreg free
   865   002FD2                     
   866                           ;Main_program.c: 175:         logic_CONTROL();
   867   002FD2  EC7F  F011         	call	_logic_CONTROL	;wreg free
   868   002FD6                     
   869                           ;Main_program.c: 176:         lcd_SENSOR();
   870   002FD6  EC2A  F016         	call	_lcd_SENSOR	;wreg free
   871   002FDA  EFE5  F017         	goto	l4535
   872   002FDE  EF00  F000         	goto	start
   873   002FE2                     __end_of_main:
   874                           	callstack 0
   875                           
   876 ;; *************** function _logic_CONTROL *****************
   877 ;; Defined at:
   878 ;;		line 134 in file "Main_program.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   892 ;;      Params:         0       0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		___flge
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text1
   907   0022FE                     __ptext1:
   908                           	callstack 0
   909   0022FE                     _logic_CONTROL:
   910                           	callstack 29
   911   0022FE                     
   912                           ;Main_program.c: 136:     if(PressSensor <= (0.25*65))
   913   0022FE  0E00               	movlw	0
   914   002300  6E28               	movwf	___flge@ff1^0,c
   915   002302  0E00               	movlw	0
   916   002304  6E29               	movwf	(___flge@ff1+1)^0,c
   917   002306  0E82               	movlw	130
   918   002308  6E2A               	movwf	(___flge@ff1+2)^0,c
   919   00230A  0E41               	movlw	65
   920   00230C  6E2B               	movwf	(___flge@ff1+3)^0,c
   921   00230E  C069  F02C         	movff	_PressSensor,___flge@ff2
   922   002312  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
   923   002316  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
   924   00231A  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
   925   00231E  ECB1  F012         	call	___flge	;wreg free
   926   002322  A0D8               	btfss	status,0,c
   927   002324  EF96  F011         	goto	u5481
   928   002328  EF98  F011         	goto	u5480
   929   00232C                     u5481:
   930   00232C  EF9E  F011         	goto	l4515
   931   002330                     u5480:
   932   002330                     
   933                           ;Main_program.c: 137:     {;Main_program.c: 138:         PORTCbits.RC0 = 1;
   934   002330  8082               	bsf	130,0,c	;volatile
   935                           
   936                           ;Main_program.c: 139:         PORTCbits.RC1 = 0;
   937   002332  9282               	bcf	130,1,c	;volatile
   938                           
   939                           ;Main_program.c: 140:         PORTCbits.RC2 = 0;
   940   002334  9482               	bcf	130,2,c	;volatile
   941                           
   942                           ;Main_program.c: 141:         PORTCbits.RC3 = 0;
   943   002336  9682               	bcf	130,3,c	;volatile
   944                           
   945                           ;Main_program.c: 142:     }
   946   002338  EF2D  F012         	goto	l115
   947   00233C                     l4515:
   948   00233C  0E00               	movlw	0
   949   00233E  6E28               	movwf	___flge@ff1^0,c
   950   002340  0E00               	movlw	0
   951   002342  6E29               	movwf	(___flge@ff1+1)^0,c
   952   002344  0E82               	movlw	130
   953   002346  6E2A               	movwf	(___flge@ff1+2)^0,c
   954   002348  0E41               	movlw	65
   955   00234A  6E2B               	movwf	(___flge@ff1+3)^0,c
   956   00234C  C069  F02C         	movff	_PressSensor,___flge@ff2
   957   002350  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
   958   002354  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
   959   002358  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
   960   00235C  ECB1  F012         	call	___flge	;wreg free
   961   002360  B0D8               	btfsc	status,0,c
   962   002362  EFB5  F011         	goto	u5491
   963   002366  EFB7  F011         	goto	u5490
   964   00236A                     u5491:
   965   00236A  EFD6  F011         	goto	l4521
   966   00236E                     u5490:
   967   00236E  0E00               	movlw	0
   968   002370  6E28               	movwf	___flge@ff1^0,c
   969   002372  0E00               	movlw	0
   970   002374  6E29               	movwf	(___flge@ff1+1)^0,c
   971   002376  0E02               	movlw	2
   972   002378  6E2A               	movwf	(___flge@ff1+2)^0,c
   973   00237A  0E42               	movlw	66
   974   00237C  6E2B               	movwf	(___flge@ff1+3)^0,c
   975   00237E  C069  F02C         	movff	_PressSensor,___flge@ff2
   976   002382  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
   977   002386  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
   978   00238A  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
   979   00238E  ECB1  F012         	call	___flge	;wreg free
   980   002392  A0D8               	btfss	status,0,c
   981   002394  EFCE  F011         	goto	u5501
   982   002398  EFD0  F011         	goto	u5500
   983   00239C                     u5501:
   984   00239C  EFD6  F011         	goto	l4521
   985   0023A0                     u5500:
   986   0023A0                     
   987                           ;Main_program.c: 144:     {;Main_program.c: 145:         PORTCbits.RC0 = 1;
   988   0023A0  8082               	bsf	130,0,c	;volatile
   989                           
   990                           ;Main_program.c: 146:         PORTCbits.RC1 = 1;
   991   0023A2  8282               	bsf	130,1,c	;volatile
   992                           
   993                           ;Main_program.c: 147:         PORTCbits.RC2 = 0;
   994   0023A4  9482               	bcf	130,2,c	;volatile
   995                           
   996                           ;Main_program.c: 148:         PORTCbits.RC3 = 0;
   997   0023A6  9682               	bcf	130,3,c	;volatile
   998                           
   999                           ;Main_program.c: 149:     }
  1000   0023A8  EF2D  F012         	goto	l115
  1001   0023AC                     l4521:
  1002   0023AC  0E00               	movlw	0
  1003   0023AE  6E28               	movwf	___flge@ff1^0,c
  1004   0023B0  0E00               	movlw	0
  1005   0023B2  6E29               	movwf	(___flge@ff1+1)^0,c
  1006   0023B4  0E02               	movlw	2
  1007   0023B6  6E2A               	movwf	(___flge@ff1+2)^0,c
  1008   0023B8  0E42               	movlw	66
  1009   0023BA  6E2B               	movwf	(___flge@ff1+3)^0,c
  1010   0023BC  C069  F02C         	movff	_PressSensor,___flge@ff2
  1011   0023C0  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1012   0023C4  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1013   0023C8  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1014   0023CC  ECB1  F012         	call	___flge	;wreg free
  1015   0023D0  B0D8               	btfsc	status,0,c
  1016   0023D2  EFED  F011         	goto	u5511
  1017   0023D6  EFEF  F011         	goto	u5510
  1018   0023DA                     u5511:
  1019   0023DA  EF0E  F012         	goto	l4527
  1020   0023DE                     u5510:
  1021   0023DE  0E00               	movlw	0
  1022   0023E0  6E28               	movwf	___flge@ff1^0,c
  1023   0023E2  0E00               	movlw	0
  1024   0023E4  6E29               	movwf	(___flge@ff1+1)^0,c
  1025   0023E6  0E43               	movlw	67
  1026   0023E8  6E2A               	movwf	(___flge@ff1+2)^0,c
  1027   0023EA  0E42               	movlw	66
  1028   0023EC  6E2B               	movwf	(___flge@ff1+3)^0,c
  1029   0023EE  C069  F02C         	movff	_PressSensor,___flge@ff2
  1030   0023F2  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1031   0023F6  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1032   0023FA  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1033   0023FE  ECB1  F012         	call	___flge	;wreg free
  1034   002402  A0D8               	btfss	status,0,c
  1035   002404  EF06  F012         	goto	u5521
  1036   002408  EF08  F012         	goto	u5520
  1037   00240C                     u5521:
  1038   00240C  EF0E  F012         	goto	l4527
  1039   002410                     u5520:
  1040   002410                     
  1041                           ;Main_program.c: 151:     {;Main_program.c: 152:         PORTCbits.RC0 = 1;
  1042   002410  8082               	bsf	130,0,c	;volatile
  1043                           
  1044                           ;Main_program.c: 153:         PORTCbits.RC1 = 1;
  1045   002412  8282               	bsf	130,1,c	;volatile
  1046                           
  1047                           ;Main_program.c: 154:         PORTCbits.RC2 = 1;
  1048   002414  8482               	bsf	130,2,c	;volatile
  1049                           
  1050                           ;Main_program.c: 155:         PORTCbits.RC3 = 0;
  1051   002416  9682               	bcf	130,3,c	;volatile
  1052                           
  1053                           ;Main_program.c: 156:     }
  1054   002418  EF2D  F012         	goto	l115
  1055   00241C                     l4527:
  1056   00241C  0E00               	movlw	0
  1057   00241E  6E28               	movwf	___flge@ff1^0,c
  1058   002420  0E00               	movlw	0
  1059   002422  6E29               	movwf	(___flge@ff1+1)^0,c
  1060   002424  0E43               	movlw	67
  1061   002426  6E2A               	movwf	(___flge@ff1+2)^0,c
  1062   002428  0E42               	movlw	66
  1063   00242A  6E2B               	movwf	(___flge@ff1+3)^0,c
  1064   00242C  C069  F02C         	movff	_PressSensor,___flge@ff2
  1065   002430  C06A  F02D         	movff	_PressSensor+1,___flge@ff2+1
  1066   002434  C06B  F02E         	movff	_PressSensor+2,___flge@ff2+2
  1067   002438  C06C  F02F         	movff	_PressSensor+3,___flge@ff2+3
  1068   00243C  ECB1  F012         	call	___flge	;wreg free
  1069   002440  B0D8               	btfsc	status,0,c
  1070   002442  EF25  F012         	goto	u5531
  1071   002446  EF27  F012         	goto	u5530
  1072   00244A                     u5531:
  1073   00244A  EF2D  F012         	goto	l111
  1074   00244E                     u5530:
  1075   00244E                     
  1076                           ;Main_program.c: 158:     {;Main_program.c: 159:         PORTCbits.RC0 = 1;
  1077   00244E  8082               	bsf	130,0,c	;volatile
  1078                           
  1079                           ;Main_program.c: 160:         PORTCbits.RC1 = 1;
  1080   002450  8282               	bsf	130,1,c	;volatile
  1081                           
  1082                           ;Main_program.c: 161:         PORTCbits.RC2 = 1;
  1083   002452  8482               	bsf	130,2,c	;volatile
  1084                           
  1085                           ;Main_program.c: 162:         PORTCbits.RC3 = 1;
  1086   002454  8682               	bsf	130,3,c	;volatile
  1087   002456  EF2D  F012         	goto	l115
  1088   00245A                     l111:
  1089   00245A                     l115:
  1090   00245A  0012               	return		;funcret
  1091   00245C                     __end_of_logic_CONTROL:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _lcd_init *****************
  1095 ;; Defined at:
  1096 ;;		line 3 in file "LCD4b_EXSTO.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  i               1    5[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1110 ;;      Params:         0       0       0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0
  1112 ;;      Temps:          1       0       0       0       0       0       0
  1113 ;;      Totals:         2       0       0       0       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 2
  1117 ;; This function calls:
  1118 ;;		_lcd_cmd
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125   002BB6                     __ptext2:
  1126                           	callstack 0
  1127   002BB6                     _lcd_init:
  1128                           	callstack 28
  1129   002BB6                     
  1130                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
  1131   002BB6  0E00               	movlw	0
  1132   002BB8  6E95               	movwf	149,c	;volatile
  1133   002BBA                     
  1134                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
  1135   002BBA  9496               	bcf	150,2,c	;volatile
  1136   002BBC                     
  1137                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
  1138   002BBC  9296               	bcf	150,1,c	;volatile
  1139   002BBE                     
  1140                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1141   002BBE  9096               	bcf	150,0,c	;volatile
  1142                           
  1143                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1144   002BC0  0E00               	movlw	0
  1145   002BC2  6E83               	movwf	131,c	;volatile
  1146   002BC4                     
  1147                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1148   002BC4  9084               	bcf	132,0,c	;volatile
  1149   002BC6                     
  1150                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1151   002BC6  9284               	bcf	132,1,c	;volatile
  1152   002BC8                     
  1153                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1154   002BC8  9484               	bcf	132,2,c	;volatile
  1155   002BCA                     
  1156                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1157   002BCA  0E27               	movlw	39
  1158   002BCC  6E05               	movwf	??_lcd_init^0,c
  1159   002BCE  0EF5               	movlw	245
  1160   002BD0                     u5547:
  1161   002BD0  2EE8               	decfsz	wreg,f,c
  1162   002BD2  D7FE               	bra	u5547
  1163   002BD4  2E05               	decfsz	??_lcd_init^0,f,c
  1164   002BD6  D7FC               	bra	u5547
  1165   002BD8  0000               	nop	
  1166   002BDA                     
  1167                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1168   002BDA  0E00               	movlw	0
  1169   002BDC  6E06               	movwf	lcd_init@i^0,c
  1170   002BDE                     l3389:
  1171                           
  1172                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1173   002BDE  0E30               	movlw	48
  1174   002BE0  ECB2  F013         	call	_lcd_cmd
  1175   002BE4                     
  1176                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1177   002BE4  0E0D               	movlw	13
  1178   002BE6  6E05               	movwf	??_lcd_init^0,c
  1179   002BE8  0EFC               	movlw	252
  1180   002BEA                     u5557:
  1181   002BEA  2EE8               	decfsz	wreg,f,c
  1182   002BEC  D7FE               	bra	u5557
  1183   002BEE  2E05               	decfsz	??_lcd_init^0,f,c
  1184   002BF0  D7FC               	bra	u5557
  1185   002BF2                     
  1186                           ;LCD4b_EXSTO.c: 22:     }
  1187   002BF2  2A06               	incf	lcd_init@i^0,f,c
  1188   002BF4  0E02               	movlw	2
  1189   002BF6  6406               	cpfsgt	lcd_init@i^0,c
  1190   002BF8  EF00  F016         	goto	u3751
  1191   002BFC  EF02  F016         	goto	u3750
  1192   002C00                     u3751:
  1193   002C00  EFEF  F015         	goto	l3389
  1194   002C04                     u3750:
  1195   002C04                     
  1196                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1197   002C04  0E02               	movlw	2
  1198   002C06  ECB2  F013         	call	_lcd_cmd
  1199   002C0A                     
  1200                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1201   002C0A  0E1A               	movlw	26
  1202   002C0C                     u5567:
  1203   002C0C  2EE8               	decfsz	wreg,f,c
  1204   002C0E  D7FE               	bra	u5567
  1205   002C10  D000               	nop2	
  1206   002C12                     
  1207                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1208   002C12  0E28               	movlw	40
  1209   002C14  ECB2  F013         	call	_lcd_cmd
  1210                           
  1211                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1212   002C18  0E1A               	movlw	26
  1213   002C1A                     u5577:
  1214   002C1A  2EE8               	decfsz	wreg,f,c
  1215   002C1C  D7FE               	bra	u5577
  1216   002C1E  D000               	nop2	
  1217   002C20                     
  1218                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1219   002C20  0E01               	movlw	1
  1220   002C22  ECB2  F013         	call	_lcd_cmd
  1221   002C26                     
  1222                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1223   002C26  0E06               	movlw	6
  1224   002C28  6E05               	movwf	??_lcd_init^0,c
  1225   002C2A  0E30               	movlw	48
  1226   002C2C                     u5587:
  1227   002C2C  2EE8               	decfsz	wreg,f,c
  1228   002C2E  D7FE               	bra	u5587
  1229   002C30  2E05               	decfsz	??_lcd_init^0,f,c
  1230   002C32  D7FC               	bra	u5587
  1231   002C34  D000               	nop2	
  1232                           
  1233                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1234   002C36  0E0C               	movlw	12
  1235   002C38  ECB2  F013         	call	_lcd_cmd
  1236   002C3C                     
  1237                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1238   002C3C  0E1A               	movlw	26
  1239   002C3E                     u5597:
  1240   002C3E  2EE8               	decfsz	wreg,f,c
  1241   002C40  D7FE               	bra	u5597
  1242   002C42  D000               	nop2	
  1243   002C44                     
  1244                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1245   002C44  0E06               	movlw	6
  1246   002C46  ECB2  F013         	call	_lcd_cmd
  1247                           
  1248                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1249   002C4A  0E1A               	movlw	26
  1250   002C4C                     u5607:
  1251   002C4C  2EE8               	decfsz	wreg,f,c
  1252   002C4E  D7FE               	bra	u5607
  1253   002C50  D000               	nop2	
  1254   002C52  0012               	return		;funcret
  1255   002C54                     __end_of_lcd_init:
  1256                           	callstack 0
  1257                           
  1258 ;; *************** function _lcd_SENSOR *****************
  1259 ;; Defined at:
  1260 ;;		line 118 in file "Main_program.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; Hardware stack levels required when called: 8
  1281 ;; This function calls:
  1282 ;;		_lcd_write
  1283 ;;		_sprintf
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text3
  1290   002C54                     __ptext3:
  1291                           	callstack 0
  1292   002C54                     _lcd_SENSOR:
  1293                           	callstack 22
  1294   002C54                     
  1295                           ;Main_program.c: 120:    sprintf(BufferLCD_Press,
  1296   002C54  0ED2               	movlw	low _BufferLCD_Press
  1297   002C56  0100               	movlb	0	; () banked
  1298   002C58  6FAF               	movwf	sprintf@s& (0+255),b
  1299   002C5A  0E21               	movlw	low STR_1
  1300   002C5C  6FB0               	movwf	sprintf@fmt& (0+255),b
  1301   002C5E  C069  F0B1         	movff	_PressSensor,?_sprintf+2
  1302   002C62  C06A  F0B2         	movff	_PressSensor+1,?_sprintf+3
  1303   002C66  C06B  F0B3         	movff	_PressSensor+2,?_sprintf+4
  1304   002C6A  C06C  F0B4         	movff	_PressSensor+3,?_sprintf+5
  1305   002C6E  EC75  F017         	call	_sprintf	;wreg free
  1306                           
  1307                           ;Main_program.c: 124:    sprintf(BufferLCD_Voltage,
  1308   002C72  0EE2               	movlw	low _BufferLCD_Voltage
  1309   002C74  0100               	movlb	0	; () banked
  1310   002C76  6FAF               	movwf	sprintf@s& (0+255),b
  1311   002C78  0E30               	movlw	low STR_2
  1312   002C7A  6FB0               	movwf	sprintf@fmt& (0+255),b
  1313   002C7C  C0CE  F0B1         	movff	_VoltageSensor,?_sprintf+2
  1314   002C80  C0CF  F0B2         	movff	_VoltageSensor+1,?_sprintf+3
  1315   002C84  C0D0  F0B3         	movff	_VoltageSensor+2,?_sprintf+4
  1316   002C88  C0D1  F0B4         	movff	_VoltageSensor+3,?_sprintf+5
  1317   002C8C  EC75  F017         	call	_sprintf	;wreg free
  1318   002C90                     
  1319                           ;Main_program.c: 128:     lcd_write(1,1,"SENSOR:        ");
  1320   002C90  0E01               	movlw	1
  1321   002C92  6E07               	movwf	lcd_write@col^0,c
  1322   002C94  0E01               	movlw	low STR_3
  1323   002C96  6E08               	movwf	lcd_write@str^0,c
  1324   002C98  5008               	movf	lcd_write@str^0,w,c
  1325   002C9A  A4D8               	btfss	status,2,c
  1326   002C9C  0E06               	movlw	high __smallconst
  1327   002C9E  6E09               	movwf	(lcd_write@str+1)^0,c
  1328   002CA0  0E01               	movlw	1
  1329   002CA2  EC8B  F015         	call	_lcd_write
  1330   002CA6                     
  1331                           ;Main_program.c: 129:     lcd_write(1,9,BufferLCD_Voltage);
  1332   002CA6  0E09               	movlw	9
  1333   002CA8  6E07               	movwf	lcd_write@col^0,c
  1334   002CAA  0EE2               	movlw	low _BufferLCD_Voltage
  1335   002CAC  6E08               	movwf	lcd_write@str^0,c
  1336   002CAE  6A09               	clrf	(lcd_write@str+1)^0,c
  1337   002CB0  0E01               	movlw	1
  1338   002CB2  EC8B  F015         	call	_lcd_write
  1339   002CB6                     
  1340                           ;Main_program.c: 130:     lcd_write(2,1,"PRESSAO:       ");
  1341   002CB6  0E01               	movlw	1
  1342   002CB8  6E07               	movwf	lcd_write@col^0,c
  1343   002CBA  0E11               	movlw	low STR_4
  1344   002CBC  6E08               	movwf	lcd_write@str^0,c
  1345   002CBE  5008               	movf	lcd_write@str^0,w,c
  1346   002CC0  A4D8               	btfss	status,2,c
  1347   002CC2  0E06               	movlw	high __smallconst
  1348   002CC4  6E09               	movwf	(lcd_write@str+1)^0,c
  1349   002CC6  0E02               	movlw	2
  1350   002CC8  EC8B  F015         	call	_lcd_write
  1351   002CCC                     
  1352                           ;Main_program.c: 131:     lcd_write(2,10,BufferLCD_Press);
  1353   002CCC  0E0A               	movlw	10
  1354   002CCE  6E07               	movwf	lcd_write@col^0,c
  1355   002CD0  0ED2               	movlw	low _BufferLCD_Press
  1356   002CD2  6E08               	movwf	lcd_write@str^0,c
  1357   002CD4  6A09               	clrf	(lcd_write@str+1)^0,c
  1358   002CD6  0E02               	movlw	2
  1359   002CD8  EC8B  F015         	call	_lcd_write
  1360   002CDC  0012               	return		;funcret
  1361   002CDE                     __end_of_lcd_SENSOR:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _sprintf *****************
  1365 ;; Defined at:
  1366 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  s               1   47[BANK0 ] PTR unsigned char 
  1369 ;;		 -> BufferLCD_Voltage(16), BufferLCD_Press(16), 
  1370 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1371 ;;		 -> STR_2(12), STR_1(15), 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  f              12   54[BANK0 ] struct _IO_FILE
  1374 ;;  ret             2    0        int 
  1375 ;;  ap              1   53[BANK0 ] PTR void [1]
  1376 ;;		 -> ?_sprintf(2), 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2   47[BANK0 ] int 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         0       6       0       0       0       0       0
  1387 ;;      Locals:         0      13       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0
  1389 ;;      Totals:         0      19       0       0       0       0       0
  1390 ;;Total ram usage:       19 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 7
  1393 ;; This function calls:
  1394 ;;		_vfprintf
  1395 ;; This function is called by:
  1396 ;;		_lcd_SENSOR
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text4
  1401   002EEA                     __ptext4:
  1402                           	callstack 0
  1403   002EEA                     _sprintf:
  1404                           	callstack 22
  1405   002EEA  0EB1               	movlw	low (?_sprintf+2)
  1406   002EEC  0100               	movlb	0	; () banked
  1407   002EEE  6FB5               	movwf	sprintf@ap& (0+255),b
  1408   002EF0  C0AF  F0B6         	movff	sprintf@s,sprintf@f
  1409   002EF4                     
  1410                           ; BSR set to: 0
  1411   002EF4  0E00               	movlw	0
  1412   002EF6  6FBA               	movwf	(sprintf@f+4)& (0+255),b
  1413   002EF8  0E00               	movlw	0
  1414   002EFA  6FB9               	movwf	(sprintf@f+3)& (0+255),b
  1415   002EFC                     
  1416                           ; BSR set to: 0
  1417   002EFC  0E00               	movlw	0
  1418   002EFE  6FC1               	movwf	(sprintf@f+11)& (0+255),b
  1419   002F00  0E00               	movlw	0
  1420   002F02  6FC0               	movwf	(sprintf@f+10)& (0+255),b
  1421   002F04                     
  1422                           ; BSR set to: 0
  1423   002F04  0EB6               	movlw	low sprintf@f
  1424   002F06  6FAC               	movwf	vfprintf@fp& (0+255),b
  1425   002F08  C0B0  F0AD         	movff	sprintf@fmt,vfprintf@fmt
  1426   002F0C  0EB5               	movlw	low sprintf@ap
  1427   002F0E  6FAE               	movwf	vfprintf@ap& (0+255),b
  1428   002F10  EC18  F017         	call	_vfprintf	;wreg free
  1429   002F14  0100               	movlb	0	; () banked
  1430   002F16  51AF               	movf	sprintf@s& (0+255),w,b
  1431   002F18  25B9               	addwf	(sprintf@f+3)& (0+255),w,b
  1432   002F1A  6ED9               	movwf	fsr2l,c
  1433   002F1C  6ADA               	clrf	fsr2h,c
  1434   002F1E  6ADF               	clrf	indf2,c
  1435   002F20                     
  1436                           ; BSR set to: 0
  1437   002F20  0012               	return		;funcret
  1438   002F22                     __end_of_sprintf:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _vfprintf *****************
  1442 ;; Defined at:
  1443 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1446 ;;		 -> sprintf@f(12), 
  1447 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1448 ;;		 -> STR_2(12), STR_1(15), 
  1449 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1450 ;;		 -> sprintf@ap(1), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  cfmt            1  103[COMRAM] PTR unsigned char 
  1453 ;;		 -> STR_2(12), STR_1(15), 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   44[BANK0 ] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1463 ;;      Params:         0       3       0       0       0       0       0
  1464 ;;      Locals:         1       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0
  1466 ;;      Totals:         1       3       0       0       0       0       0
  1467 ;;Total ram usage:        4 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 6
  1470 ;; This function calls:
  1471 ;;		_vfpfcnvrt
  1472 ;; This function is called by:
  1473 ;;		_sprintf
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text5
  1478   002E30                     __ptext5:
  1479                           	callstack 0
  1480   002E30                     _vfprintf:
  1481                           	callstack 22
  1482   002E30                     
  1483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1484   002E30  C0AD  F068         	movff	vfprintf@fmt,vfprintf@cfmt
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1487   002E34  EF24  F017         	goto	l4477
  1488   002E38                     l4475:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1491   002E38  C0AC  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1492   002E3C  0E68               	movlw	low vfprintf@cfmt
  1493   002E3E  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  1494   002E40  C0AE  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1495   002E44  EC8F  F00E         	call	_vfpfcnvrt	;wreg free
  1496   002E48                     l4477:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1499   002E48  C068  FFF6         	movff	vfprintf@cfmt,tblptrl
  1500   002E4C                     	if	1	;There is more than 1 active tblptr byte
  1501   002E4C  0E06               	movlw	high __smallconst
  1502   002E4E  6EF7               	movwf	tblptrh,c
  1503   002E50                     	endif
  1504   002E50                     	if	0	;tblptru may be non-zero
  1505   002E50                     	endif
  1506   002E50                     	if	0	;tblptru may be non-zero
  1507   002E50                     	endif
  1508   002E50  0008               	tblrd		*
  1509   002E52  50F5               	movf	tablat,w,c
  1510   002E54  0900               	iorlw	0
  1511   002E56  A4D8               	btfss	status,2,c
  1512   002E58  EF30  F017         	goto	u5471
  1513   002E5C  EF32  F017         	goto	u5470
  1514   002E60                     u5471:
  1515   002E60  EF1C  F017         	goto	l4475
  1516   002E64                     u5470:
  1517   002E64                     
  1518                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1519   002E64  0E00               	movlw	0
  1520   002E66  0100               	movlb	0	; () banked
  1521   002E68  6FAD               	movwf	(?_vfprintf+1)& (0+255),b
  1522   002E6A  0E00               	movlw	0
  1523   002E6C  6FAC               	movwf	?_vfprintf& (0+255),b
  1524   002E6E                     
  1525                           ; BSR set to: 0
  1526   002E6E  0012               	return		;funcret
  1527   002E70                     __end_of_vfprintf:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _vfpfcnvrt *****************
  1531 ;; Defined at:
  1532 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  1535 ;;		 -> sprintf@f(12), 
  1536 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  1537 ;;		 -> vfprintf@cfmt(1), 
  1538 ;;  ap              1   94[COMRAM] PTR PTR void 
  1539 ;;		 -> sprintf@ap(1), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  convarg         4   96[COMRAM] struct .
  1542 ;;  cp              1  102[COMRAM] PTR unsigned char 
  1543 ;;		 -> STR_2(12), STR_1(15), 
  1544 ;;  c               1  101[COMRAM] unsigned char 
  1545 ;;  done            1  100[COMRAM] _Bool 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         3       0       0       0       0       0       0
  1556 ;;      Locals:         7       0       0       0       0       0       0
  1557 ;;      Temps:          1       0       0       0       0       0       0
  1558 ;;      Totals:        11       0       0       0       0       0       0
  1559 ;;Total ram usage:       11 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 5
  1562 ;; This function calls:
  1563 ;;		_efgtoa
  1564 ;;		_fputc
  1565 ;;		_read_prec_or_width
  1566 ;; This function is called by:
  1567 ;;		_vfprintf
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572   001D1E                     __ptext6:
  1573                           	callstack 0
  1574   001D1E                     _vfpfcnvrt:
  1575                           	callstack 22
  1576   001D1E                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1578   001D1E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1579   001D20  6ED9               	movwf	fsr2l,c
  1580   001D22  6ADA               	clrf	fsr2h,c
  1581   001D24  CFDF FFF6          	movff	indf2,tblptrl
  1582   001D28                     	if	1	;There is more than 1 active tblptr byte
  1583   001D28  0E06               	movlw	high __smallconst
  1584   001D2A  6EF7               	movwf	tblptrh,c
  1585   001D2C                     	endif
  1586   001D2C                     	if	0	;tblptru may be non-zero
  1587   001D2C                     	endif
  1588   001D2C                     	if	0	;tblptru may be non-zero
  1589   001D2C                     	endif
  1590   001D2C  0008               	tblrd		*
  1591   001D2E  50F5               	movf	tablat,w,c
  1592   001D30  0A25               	xorlw	37
  1593   001D32  A4D8               	btfss	status,2,c
  1594   001D34  EF9E  F00E         	goto	u5431
  1595   001D38  EFA0  F00E         	goto	u5430
  1596   001D3C                     u5431:
  1597   001D3C  EF8A  F00F         	goto	l4467
  1598   001D40                     u5430:
  1599   001D40                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1601   001D40  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1602   001D42  6ED9               	movwf	fsr2l,c
  1603   001D44  6ADA               	clrf	fsr2h,c
  1604   001D46  2ADF               	incf	indf2,f,c
  1605   001D48                     
  1606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1607   001D48  0E00               	movlw	0
  1608   001D4A  6E6E               	movwf	(_width+1)^0,c
  1609   001D4C  0E00               	movlw	0
  1610   001D4E  6E6D               	movwf	_width^0,c
  1611   001D50  C06D  F071         	movff	_width,_flags
  1612   001D54                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1614   001D54  686F               	setf	_prec^0,c
  1615   001D56  6870               	setf	(_prec+1)^0,c
  1616   001D58                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1618   001D58  0E00               	movlw	0
  1619   001D5A  6E65               	movwf	vfpfcnvrt@done^0,c
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1622   001D5C  EFCA  F00E         	goto	l4421
  1623   001D60                     l4411:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1626   001D60  8271               	bsf	_flags^0,1,c
  1627   001D62                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1629   001D62  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1630   001D64  6ED9               	movwf	fsr2l,c
  1631   001D66  6ADA               	clrf	fsr2h,c
  1632   001D68  2ADF               	incf	indf2,f,c
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1635   001D6A  EFCA  F00E         	goto	l4421
  1636   001D6E                     l4415:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1639   001D6E  0E01               	movlw	1
  1640   001D70  6E65               	movwf	vfpfcnvrt@done^0,c
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1643   001D72  EFCA  F00E         	goto	l4421
  1644   001D76                     l4419:
  1645   001D76  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1646   001D78  6ED9               	movwf	fsr2l,c
  1647   001D7A  6ADA               	clrf	fsr2h,c
  1648   001D7C  CFDF FFF6          	movff	indf2,tblptrl
  1649   001D80                     	if	1	;There is more than 1 active tblptr byte
  1650   001D80  0E06               	movlw	high __smallconst
  1651   001D82  6EF7               	movwf	tblptrh,c
  1652   001D84                     	endif
  1653   001D84                     	if	0	;tblptru may be non-zero
  1654   001D84                     	endif
  1655   001D84                     	if	0	;tblptru may be non-zero
  1656   001D84                     	endif
  1657   001D84  0008               	tblrd		*
  1658   001D86  50F5               	movf	tablat,w,c
  1659                           
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 1, Range of values is 48 to 48
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            4     3 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666   001D88  0A30               	xorlw	48	; case 48
  1667   001D8A  B4D8               	btfsc	status,2,c
  1668   001D8C  EFB0  F00E         	goto	l4411
  1669   001D90  EFB7  F00E         	goto	l4415
  1670   001D94                     l4421:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1673   001D94  5065               	movf	vfpfcnvrt@done^0,w,c
  1674   001D96  B4D8               	btfsc	status,2,c
  1675   001D98  EFD0  F00E         	goto	u5441
  1676   001D9C  EFD2  F00E         	goto	u5440
  1677   001DA0                     u5441:
  1678   001DA0  EFBB  F00E         	goto	l4419
  1679   001DA4                     u5440:
  1680   001DA4                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1682   001DA4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1683   001DA6  6ED9               	movwf	fsr2l,c
  1684   001DA8  6ADA               	clrf	fsr2h,c
  1685   001DAA  CFDF FFF6          	movff	indf2,tblptrl
  1686   001DAE                     	if	1	;There is more than 1 active tblptr byte
  1687   001DAE  0E06               	movlw	high __smallconst
  1688   001DB0  6EF7               	movwf	tblptrh,c
  1689   001DB2                     	endif
  1690   001DB2                     	if	0	;tblptru may be non-zero
  1691   001DB2                     	endif
  1692   001DB2                     	if	0	;tblptru may be non-zero
  1693   001DB2                     	endif
  1694   001DB2  0008               	tblrd		*
  1695   001DB4  50F5               	movf	tablat,w,c
  1696   001DB6  0A2E               	xorlw	46
  1697   001DB8  A4D8               	btfss	status,2,c
  1698   001DBA  EFE1  F00E         	goto	u5451
  1699   001DBE  EFE3  F00E         	goto	u5450
  1700   001DC2                     u5451:
  1701   001DC2  EFF1  F00E         	goto	l4429
  1702   001DC6                     u5450:
  1703   001DC6                     
  1704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1705   001DC6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1706   001DC8  6ED9               	movwf	fsr2l,c
  1707   001DCA  6ADA               	clrf	fsr2h,c
  1708   001DCC  2ADF               	incf	indf2,f,c
  1709   001DCE                     
  1710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1711   001DCE  C05E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1712   001DD2  C05F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1713   001DD6  EC38  F015         	call	_read_prec_or_width	;wreg free
  1714   001DDA  C007  F06F         	movff	?_read_prec_or_width,_prec
  1715   001DDE  C008  F070         	movff	?_read_prec_or_width+1,_prec+1
  1716   001DE2                     l4429:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1719   001DE2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1720   001DE4  6ED9               	movwf	fsr2l,c
  1721   001DE6  6ADA               	clrf	fsr2h,c
  1722   001DE8  50DF               	movf	indf2,w,c
  1723   001DEA  6E67               	movwf	vfpfcnvrt@cp^0,c
  1724   001DEC                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1726   001DEC  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1727   001DF0                     	if	1	;There is more than 1 active tblptr byte
  1728   001DF0  0E06               	movlw	high __smallconst
  1729   001DF2  6EF7               	movwf	tblptrh,c
  1730   001DF4                     	endif
  1731   001DF4                     	if	0	;tblptru may be non-zero
  1732   001DF4                     	endif
  1733   001DF4                     	if	0	;tblptru may be non-zero
  1734   001DF4                     	endif
  1735   001DF4  0008               	tblrd		*
  1736   001DF6  CFF5 F066          	movff	tablat,vfpfcnvrt@c
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1739   001DFA  EF0A  F00F         	goto	l4441
  1740   001DFE                     l4433:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1743   001DFE  2A67               	incf	vfpfcnvrt@cp^0,f,c
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  1746   001E00  EF19  F00F         	goto	l4443
  1747   001E04                     l4435:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1750   001E04  0E6C               	movlw	108
  1751   001E06  6E66               	movwf	vfpfcnvrt@c^0,c
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  1754   001E08  EF19  F00F         	goto	l4443
  1755   001E0C                     l4437:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1758   001E0C  0E00               	movlw	0
  1759   001E0E  6E66               	movwf	vfpfcnvrt@c^0,c
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  1762   001E10  EF19  F00F         	goto	l4443
  1763   001E14                     l4441:
  1764   001E14  5066               	movf	vfpfcnvrt@c^0,w,c
  1765                           
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 3, Range of values is 76 to 108
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte           10     6 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772   001E16  0A4C               	xorlw	76	; case 76
  1773   001E18  B4D8               	btfsc	status,2,c
  1774   001E1A  EFFF  F00E         	goto	l4433
  1775   001E1E  0A2A               	xorlw	42	; case 102
  1776   001E20  B4D8               	btfsc	status,2,c
  1777   001E22  EF02  F00F         	goto	l4435
  1778   001E26  0A0A               	xorlw	10	; case 108
  1779   001E28  B4D8               	btfsc	status,2,c
  1780   001E2A  EFFF  F00E         	goto	l4433
  1781   001E2E  EF06  F00F         	goto	l4437
  1782   001E32                     l4443:
  1783   001E32  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1784   001E36                     	if	1	;There is more than 1 active tblptr byte
  1785   001E36  0E06               	movlw	high __smallconst
  1786   001E38  6EF7               	movwf	tblptrh,c
  1787   001E3A                     	endif
  1788   001E3A                     	if	0	;tblptru may be non-zero
  1789   001E3A                     	endif
  1790   001E3A                     	if	0	;tblptru may be non-zero
  1791   001E3A                     	endif
  1792   001E3A  0008               	tblrd		*
  1793   001E3C  50F5               	movf	tablat,w,c
  1794   001E3E  0A66               	xorlw	102
  1795   001E40  A4D8               	btfss	status,2,c
  1796   001E42  EF25  F00F         	goto	u5461
  1797   001E46  EF27  F00F         	goto	u5460
  1798   001E4A                     u5461:
  1799   001E4A  EF84  F00F         	goto	l4463
  1800   001E4E                     u5460:
  1801   001E4E  EF51  F00F         	goto	l4451
  1802   001E52                     l4445:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1805   001E52  505F               	movf	vfpfcnvrt@ap^0,w,c
  1806   001E54  6ED9               	movwf	fsr2l,c
  1807   001E56  6ADA               	clrf	fsr2h,c
  1808   001E58  CFDF F060          	movff	indf2,??_vfpfcnvrt
  1809   001E5C  0E04               	movlw	4
  1810   001E5E  26DF               	addwf	indf2,f,c
  1811   001E60  5060               	movf	??_vfpfcnvrt^0,w,c
  1812   001E62  6ED9               	movwf	fsr2l,c
  1813   001E64  6ADA               	clrf	fsr2h,c
  1814   001E66  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  1815   001E6A  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  1816   001E6E  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  1817   001E72  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  1820   001E76  EF5C  F00F         	goto	l4453
  1821   001E7A                     l4447:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1824   001E7A  505F               	movf	vfpfcnvrt@ap^0,w,c
  1825   001E7C  6ED9               	movwf	fsr2l,c
  1826   001E7E  6ADA               	clrf	fsr2h,c
  1827   001E80  CFDF F060          	movff	indf2,??_vfpfcnvrt
  1828   001E84  0E04               	movlw	4
  1829   001E86  26DF               	addwf	indf2,f,c
  1830   001E88  5060               	movf	??_vfpfcnvrt^0,w,c
  1831   001E8A  6ED9               	movwf	fsr2l,c
  1832   001E8C  6ADA               	clrf	fsr2h,c
  1833   001E8E  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  1834   001E92  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  1835   001E96  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  1836   001E9A  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  1839   001E9E  EF5C  F00F         	goto	l4453
  1840   001EA2                     l4451:
  1841   001EA2  5066               	movf	vfpfcnvrt@c^0,w,c
  1842                           
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 2, Range of values is 76 to 108
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte            7     4 (average)
  1848                           ;	Chosen strategy is simple_byte
  1849   001EA4  0A4C               	xorlw	76	; case 76
  1850   001EA6  B4D8               	btfsc	status,2,c
  1851   001EA8  EF3D  F00F         	goto	l4447
  1852   001EAC  0A20               	xorlw	32	; case 108
  1853   001EAE  B4D8               	btfsc	status,2,c
  1854   001EB0  EF29  F00F         	goto	l4445
  1855   001EB4  EF5C  F00F         	goto	l4453
  1856   001EB8                     l4453:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1859   001EB8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1860   001EBA  6ED9               	movwf	fsr2l,c
  1861   001EBC  6ADA               	clrf	fsr2h,c
  1862   001EBE  2867               	incf	vfpfcnvrt@cp^0,w,c
  1863   001EC0  6EDF               	movwf	indf2,c
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1866   001EC2  EF78  F00F         	goto	l4461
  1867   001EC6                     l4455:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1870   001EC6  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1871   001ECA  C061  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  1872   001ECE  C062  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1873   001ED2  C063  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1874   001ED6  C064  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1875   001EDA  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1876   001EDE                     	if	1	;There is more than 1 active tblptr byte
  1877   001EDE  0E06               	movlw	high __smallconst
  1878   001EE0  6EF7               	movwf	tblptrh,c
  1879   001EE2                     	endif
  1880   001EE2                     	if	0	;tblptru may be non-zero
  1881   001EE2                     	endif
  1882   001EE2                     	if	0	;tblptru may be non-zero
  1883   001EE2                     	endif
  1884   001EE2  0008               	tblrd		*
  1885   001EE4  CFF5 F05A          	movff	tablat,efgtoa@c
  1886   001EE8  EC23  F003         	call	_efgtoa	;wreg free
  1887   001EEC  EF9B  F00F         	goto	l928
  1888   001EF0                     l4461:
  1889   001EF0  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1890   001EF4                     	if	1	;There is more than 1 active tblptr byte
  1891   001EF4  0E06               	movlw	high __smallconst
  1892   001EF6  6EF7               	movwf	tblptrh,c
  1893   001EF8                     	endif
  1894   001EF8                     	if	0	;tblptru may be non-zero
  1895   001EF8                     	endif
  1896   001EF8                     	if	0	;tblptru may be non-zero
  1897   001EF8                     	endif
  1898   001EF8  0008               	tblrd		*
  1899   001EFA  50F5               	movf	tablat,w,c
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 1, Range of values is 102 to 102
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            4     3 (average)
  1906                           ;	Chosen strategy is simple_byte
  1907   001EFC  0A66               	xorlw	102	; case 102
  1908   001EFE  B4D8               	btfsc	status,2,c
  1909   001F00  EF63  F00F         	goto	l4455
  1910   001F04  EF84  F00F         	goto	l4463
  1911   001F08                     l4463:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1914   001F08  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1915   001F0A  6ED9               	movwf	fsr2l,c
  1916   001F0C  6ADA               	clrf	fsr2h,c
  1917   001F0E  2ADF               	incf	indf2,f,c
  1918   001F10  EF9B  F00F         	goto	l928
  1919   001F14                     l4467:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1922   001F14  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1923   001F16  6ED9               	movwf	fsr2l,c
  1924   001F18  6ADA               	clrf	fsr2h,c
  1925   001F1A  CFDF FFF6          	movff	indf2,tblptrl
  1926   001F1E                     	if	1	;There is more than 1 active tblptr byte
  1927   001F1E  0E06               	movlw	high __smallconst
  1928   001F20  6EF7               	movwf	tblptrh,c
  1929   001F22                     	endif
  1930   001F22                     	if	0	;tblptru may be non-zero
  1931   001F22                     	endif
  1932   001F22                     	if	0	;tblptru may be non-zero
  1933   001F22                     	endif
  1934   001F22  0008               	tblrd		*
  1935   001F24  50F5               	movf	tablat,w,c
  1936   001F26  6E01               	movwf	fputc@c^0,c
  1937   001F28  6A02               	clrf	(fputc@c+1)^0,c
  1938   001F2A  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1939   001F2E  EC8E  F014         	call	_fputc	;wreg free
  1940   001F32  EF84  F00F         	goto	l4463
  1941   001F36                     l928:
  1942   001F36  0012               	return		;funcret
  1943   001F38                     __end_of_vfpfcnvrt:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _read_prec_or_width *****************
  1947 ;; Defined at:
  1948 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1951 ;;		 -> vfprintf@cfmt(1), 
  1952 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1953 ;;		 -> sprintf@ap(1), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  c               1    8[COMRAM] unsigned char 
  1956 ;;  n               2    9[COMRAM] int 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2    6[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1966 ;;      Params:         2       0       0       0       0       0       0
  1967 ;;      Locals:         3       0       0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0
  1969 ;;      Totals:         5       0       0       0       0       0       0
  1970 ;;Total ram usage:        5 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 1
  1973 ;; This function calls:
  1974 ;;		___wmul
  1975 ;; This function is called by:
  1976 ;;		_vfpfcnvrt
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text7
  1981   002A70                     __ptext7:
  1982                           	callstack 0
  1983   002A70                     _read_prec_or_width:
  1984                           	callstack 25
  1985   002A70                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1987   002A70  0E00               	movlw	0
  1988   002A72  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1989   002A74  0E00               	movlw	0
  1990   002A76  6E0A               	movwf	read_prec_or_width@n^0,c
  1991   002A78                     
  1992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1993   002A78  5007               	movf	read_prec_or_width@fmt^0,w,c
  1994   002A7A  6ED9               	movwf	fsr2l,c
  1995   002A7C  6ADA               	clrf	fsr2h,c
  1996   002A7E  CFDF FFF6          	movff	indf2,tblptrl
  1997   002A82                     	if	1	;There is more than 1 active tblptr byte
  1998   002A82  0E06               	movlw	high __smallconst
  1999   002A84  6EF7               	movwf	tblptrh,c
  2000   002A86                     	endif
  2001   002A86                     	if	0	;tblptru may be non-zero
  2002   002A86                     	endif
  2003   002A86                     	if	0	;tblptru may be non-zero
  2004   002A86                     	endif
  2005   002A86  0008               	tblrd		*
  2006   002A88  50F5               	movf	tablat,w,c
  2007   002A8A  0A2A               	xorlw	42
  2008   002A8C  A4D8               	btfss	status,2,c
  2009   002A8E  EF4B  F015         	goto	u5411
  2010   002A92  EF4D  F015         	goto	u5410
  2011   002A96                     u5411:
  2012   002A96  EF73  F015         	goto	l4399
  2013   002A9A                     u5410:
  2014   002A9A                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2016   002A9A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2017   002A9C  6ED9               	movwf	fsr2l,c
  2018   002A9E  6ADA               	clrf	fsr2h,c
  2019   002AA0  2ADF               	incf	indf2,f,c
  2020   002AA2                     
  2021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2022   002AA2  5008               	movf	read_prec_or_width@ap^0,w,c
  2023   002AA4  6ED9               	movwf	fsr2l,c
  2024   002AA6  6ADA               	clrf	fsr2h,c
  2025   002AA8  0E02               	movlw	2
  2026   002AAA  26DF               	addwf	indf2,f,c
  2027   002AAC  5CDF               	subwf	indf2,w,c
  2028   002AAE  6ED9               	movwf	fsr2l,c
  2029   002AB0  6ADA               	clrf	fsr2h,c
  2030   002AB2  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2031   002AB6  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2034   002ABA  EF86  F015         	goto	l897
  2035   002ABE                     l4395:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2038   002ABE  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2039   002AC2  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2040   002AC6  0E00               	movlw	0
  2041   002AC8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2042   002ACA  0E0A               	movlw	10
  2043   002ACC  6E03               	movwf	___wmul@multiplicand^0,c
  2044   002ACE  ECF1  F017         	call	___wmul	;wreg free
  2045   002AD2  5009               	movf	read_prec_or_width@c^0,w,c
  2046   002AD4  2401               	addwf	?___wmul^0,w,c
  2047   002AD6  6E0A               	movwf	read_prec_or_width@n^0,c
  2048   002AD8  0E00               	movlw	0
  2049   002ADA  2002               	addwfc	(?___wmul+1)^0,w,c
  2050   002ADC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2051   002ADE                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2053   002ADE  5007               	movf	read_prec_or_width@fmt^0,w,c
  2054   002AE0  6ED9               	movwf	fsr2l,c
  2055   002AE2  6ADA               	clrf	fsr2h,c
  2056   002AE4  2ADF               	incf	indf2,f,c
  2057   002AE6                     l4399:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2060   002AE6  5007               	movf	read_prec_or_width@fmt^0,w,c
  2061   002AE8  6ED9               	movwf	fsr2l,c
  2062   002AEA  6ADA               	clrf	fsr2h,c
  2063   002AEC  CFDF FFF6          	movff	indf2,tblptrl
  2064   002AF0                     	if	1	;There is more than 1 active tblptr byte
  2065   002AF0  0E06               	movlw	high __smallconst
  2066   002AF2  6EF7               	movwf	tblptrh,c
  2067   002AF4                     	endif
  2068   002AF4                     	if	0	;tblptru may be non-zero
  2069   002AF4                     	endif
  2070   002AF4                     	if	0	;tblptru may be non-zero
  2071   002AF4                     	endif
  2072   002AF4  0008               	tblrd		*
  2073   002AF6  50F5               	movf	tablat,w,c
  2074   002AF8  0FD0               	addlw	208
  2075   002AFA  6E09               	movwf	read_prec_or_width@c^0,c
  2076   002AFC  0E09               	movlw	9
  2077   002AFE  6409               	cpfsgt	read_prec_or_width@c^0,c
  2078   002B00  EF84  F015         	goto	u5421
  2079   002B04  EF86  F015         	goto	u5420
  2080   002B08                     u5421:
  2081   002B08  EF5F  F015         	goto	l4395
  2082   002B0C                     u5420:
  2083   002B0C                     l897:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2086   002B0C  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2087   002B10  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2088   002B14  0012               	return		;funcret
  2089   002B16                     __end_of_read_prec_or_width:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function ___wmul *****************
  2093 ;; Defined at:
  2094 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  multiplier      2    0[COMRAM] unsigned int 
  2097 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  product         2    4[COMRAM] unsigned int 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2    0[COMRAM] unsigned int 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, prodl, prodh
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2109 ;;      Params:         4       0       0       0       0       0       0
  2110 ;;      Locals:         2       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0
  2112 ;;      Totals:         6       0       0       0       0       0       0
  2113 ;;Total ram usage:        6 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_read_prec_or_width
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text8
  2123   002FE2                     __ptext8:
  2124                           	callstack 0
  2125   002FE2                     ___wmul:
  2126                           	callstack 25
  2127   002FE2  5001               	movf	___wmul@multiplier^0,w,c
  2128   002FE4  0203               	mulwf	___wmul@multiplicand^0,c
  2129   002FE6  CFF3 F005          	movff	prodl,___wmul@product
  2130   002FEA  CFF4 F006          	movff	prodh,___wmul@product+1
  2131   002FEE  5001               	movf	___wmul@multiplier^0,w,c
  2132   002FF0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2133   002FF2  50F3               	movf	243,w,c
  2134   002FF4  2606               	addwf	(___wmul@product+1)^0,f,c
  2135   002FF6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2136   002FF8  0203               	mulwf	___wmul@multiplicand^0,c
  2137   002FFA  50F3               	movf	243,w,c
  2138   002FFC  2606               	addwf	(___wmul@product+1)^0,f,c
  2139   002FFE  C005  F001         	movff	___wmul@product,?___wmul
  2140   003002  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2141   003006  0012               	return		;funcret
  2142   003008                     __end_of___wmul:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _efgtoa *****************
  2146 ;; Defined at:
  2147 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  2150 ;;		 -> sprintf@f(12), 
  2151 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  2152 ;;  c               1   89[COMRAM] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  u               4   40[BANK0 ] struct flui
  2155 ;;  g               4   34[BANK0 ] struct flui
  2156 ;;  l               4   27[BANK0 ] struct flui
  2157 ;;  h               4   23[BANK0 ] struct flui
  2158 ;;  ou              4   17[BANK0 ] struct flui
  2159 ;;  n               2   38[BANK0 ] int 
  2160 ;;  i               2   31[BANK0 ] int 
  2161 ;;  w               2   21[BANK0 ] int 
  2162 ;;  e               2   15[BANK0 ] int 
  2163 ;;  m               2   13[BANK0 ] int 
  2164 ;;  d               2   11[BANK0 ] int 
  2165 ;;  t               2    4[BANK0 ] int 
  2166 ;;  p               2    2[BANK0 ] int 
  2167 ;;  ne              2    0[BANK0 ] int 
  2168 ;;  sign            1   33[BANK0 ] unsigned char 
  2169 ;;  nmode           1   10[BANK0 ] unsigned char 
  2170 ;;  mode            1    9[BANK0 ] unsigned char 
  2171 ;;  pp              1    8[BANK0 ] unsigned char 
  2172 ;;  esign           1    0        unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2182 ;;      Params:         6       0       0       0       0       0       0
  2183 ;;      Locals:         0      44       0       0       0       0       0
  2184 ;;      Temps:          2       0       0       0       0       0       0
  2185 ;;      Totals:         8      44       0       0       0       0       0
  2186 ;;Total ram usage:       52 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 4
  2189 ;; This function calls:
  2190 ;;		___fladd
  2191 ;;		___fldiv
  2192 ;;		___fleq
  2193 ;;		___flge
  2194 ;;		___flmul
  2195 ;;		___flneg
  2196 ;;		___flsub
  2197 ;;		___fltol
  2198 ;;		___fpclassifyf
  2199 ;;		_floorf
  2200 ;;		_labs
  2201 ;;		_memcpy
  2202 ;;		_pad
  2203 ;;		_strcpy
  2204 ;; This function is called by:
  2205 ;;		_vfpfcnvrt
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text9
  2210   000646                     __ptext9:
  2211                           	callstack 0
  2212   000646                     _efgtoa:
  2213                           	callstack 22
  2214   000646                     
  2215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2216   000646  0E00               	movlw	0
  2217   000648  0100               	movlb	0	; () banked
  2218   00064A  6FA1               	movwf	efgtoa@sign& (0+255),b
  2219   00064C                     
  2220                           ; BSR set to: 0
  2221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2222   00064C  C056  F0A2         	movff	efgtoa@f,efgtoa@g
  2223   000650  C057  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  2224   000654  C058  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  2225   000658  C059  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  2226   00065C                     
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2229   00065C  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2230   00065E  EF35  F003         	goto	u5060
  2231   000662  EF33  F003         	goto	u5061
  2232   000666                     u5061:
  2233   000666  EF49  F003         	goto	l4163
  2234   00066A                     u5060:
  2235   00066A                     
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2238   00066A  0E01               	movlw	1
  2239   00066C  6FA1               	movwf	efgtoa@sign& (0+255),b
  2240   00066E                     
  2241                           ; BSR set to: 0
  2242                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2243   00066E  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  2244   000672  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2245   000676  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2246   00067A  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2247   00067E  EC91  F017         	call	___flneg	;wreg free
  2248   000682  C001  F0A2         	movff	?___flneg,efgtoa@g
  2249   000686  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  2250   00068A  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  2251   00068E  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  2252   000692                     l4163:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2255   000692  0E00               	movlw	0
  2256   000694  0100               	movlb	0	; () banked
  2257   000696  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  2258   000698  0E00               	movlw	0
  2259   00069A  6FA6               	movwf	efgtoa@n& (0+255),b
  2260   00069C                     
  2261                           ; BSR set to: 0
  2262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2263   00069C  C06D  F095         	movff	_width,efgtoa@w
  2264   0006A0  C06E  F096         	movff	_width+1,efgtoa@w+1
  2265   0006A4                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2268   0006A4  51A1               	movf	efgtoa@sign& (0+255),w,b
  2269   0006A6  B4D8               	btfsc	status,2,c
  2270   0006A8  EF58  F003         	goto	u5071
  2271   0006AC  EF5A  F003         	goto	u5070
  2272   0006B0                     u5071:
  2273   0006B0  EF6E  F003         	goto	l4177
  2274   0006B4                     u5070:
  2275   0006B4                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2278   0006B4  51A1               	movf	efgtoa@sign& (0+255),w,b
  2279   0006B6  A4D8               	btfss	status,2,c
  2280   0006B8  EF60  F003         	goto	u5081
  2281   0006BC  EF62  F003         	goto	u5080
  2282   0006C0                     u5081:
  2283   0006C0  EF68  F003         	goto	l4173
  2284   0006C4                     u5080:
  2285   0006C4                     
  2286                           ; BSR set to: 0
  2287   0006C4  0E00               	movlw	0
  2288   0006C6  6F87               	movwf	(_efgtoa$1030+1)& (0+255),b
  2289   0006C8  0E2B               	movlw	43
  2290   0006CA  6F86               	movwf	_efgtoa$1030& (0+255),b
  2291   0006CC  EF6C  F003         	goto	l4175
  2292   0006D0                     l4173:
  2293                           
  2294                           ; BSR set to: 0
  2295   0006D0  0E00               	movlw	0
  2296   0006D2  6F87               	movwf	(_efgtoa$1030+1)& (0+255),b
  2297   0006D4  0E2D               	movlw	45
  2298   0006D6  6F86               	movwf	_efgtoa$1030& (0+255),b
  2299   0006D8                     l4175:
  2300                           
  2301                           ; BSR set to: 0
  2302   0006D8  C086  F0A1         	movff	_efgtoa$1030,efgtoa@sign
  2303   0006DC                     l4177:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2307   0006DC  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2308   0006E0  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2309   0006E4  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2310   0006E8  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2311   0006EC  EC33  F013         	call	___fpclassifyf	;wreg free
  2312   0006F0  0401               	decf	?___fpclassifyf^0,w,c
  2313   0006F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2314   0006F4  A4D8               	btfss	status,2,c
  2315   0006F6  EF7F  F003         	goto	u5091
  2316   0006FA  EF81  F003         	goto	u5090
  2317   0006FE                     u5091:
  2318   0006FE  EFB0  F003         	goto	l4195
  2319   000702                     u5090:
  2320   000702                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2322   000702  0100               	movlb	0	; () banked
  2323   000704  51A1               	movf	efgtoa@sign& (0+255),w,b
  2324   000706  B4D8               	btfsc	status,2,c
  2325   000708  EF88  F003         	goto	u5101
  2326   00070C  EF8A  F003         	goto	u5100
  2327   000710                     u5101:
  2328   000710  EF93  F003         	goto	l4187
  2329   000714                     u5100:
  2330   000714                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2333   000714  C0A1  F100         	movff	efgtoa@sign,_dbuf
  2334   000718                     
  2335                           ; BSR set to: 0
  2336                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  2337   000718  0795               	decf	efgtoa@w& (0+255),f,b
  2338   00071A  A0D8               	btfss	status,0,c
  2339   00071C  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  2340   00071E                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2343   00071E  0E00               	movlw	0
  2344   000720  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  2345   000722  0E01               	movlw	1
  2346   000724  6FA6               	movwf	efgtoa@n& (0+255),b
  2347   000726                     l4187:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2351   000726  0E00               	movlw	low _dbuf
  2352   000728  25A6               	addwf	efgtoa@n& (0+255),w,b
  2353   00072A  6E01               	movwf	strcpy@dest^0,c
  2354   00072C  0E01               	movlw	high _dbuf
  2355   00072E  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2356   000730  6E02               	movwf	(strcpy@dest+1)^0,c
  2357   000732  0E3C               	movlw	low STR_5
  2358   000734  6E03               	movwf	strcpy@src^0,c
  2359   000736  EC58  F017         	call	_strcpy	;wreg free
  2360   00073A                     l4189:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2363   00073A  0100               	movlb	0	; () banked
  2364   00073C  0EFD               	movlw	253
  2365   00073E  2795               	addwf	efgtoa@w& (0+255),f,b
  2366   000740  0EFF               	movlw	255
  2367   000742  2396               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2368   000744                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2371   000744  C055  F00F         	movff	efgtoa@fp,pad@fp
  2372   000748  0E00               	movlw	low _dbuf
  2373   00074A  6E10               	movwf	pad@buf^0,c
  2374   00074C  0E01               	movlw	high _dbuf
  2375   00074E  6E11               	movwf	(pad@buf+1)^0,c
  2376   000750  C095  F012         	movff	efgtoa@w,pad@p
  2377   000754  C096  F013         	movff	efgtoa@w+1,pad@p+1
  2378   000758  EC6F  F016         	call	_pad	;wreg free
  2379   00075C  EF4C  F008         	goto	l846
  2380   000760                     l4195:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2383   000760  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2384   000764  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2385   000768  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2386   00076C  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2387   000770  EC33  F013         	call	___fpclassifyf	;wreg free
  2388   000774  5001               	movf	?___fpclassifyf^0,w,c
  2389   000776  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2390   000778  A4D8               	btfss	status,2,c
  2391   00077A  EFC1  F003         	goto	u5111
  2392   00077E  EFC3  F003         	goto	u5110
  2393   000782                     u5111:
  2394   000782  EFE1  F003         	goto	l4213
  2395   000786                     u5110:
  2396   000786                     
  2397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2398   000786  0100               	movlb	0	; () banked
  2399   000788  51A1               	movf	efgtoa@sign& (0+255),w,b
  2400   00078A  B4D8               	btfsc	status,2,c
  2401   00078C  EFCA  F003         	goto	u5121
  2402   000790  EFCC  F003         	goto	u5120
  2403   000794                     u5121:
  2404   000794  EFD5  F003         	goto	l4205
  2405   000798                     u5120:
  2406   000798                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2409   000798  C0A1  F100         	movff	efgtoa@sign,_dbuf
  2410   00079C                     
  2411                           ; BSR set to: 0
  2412                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  2413   00079C  0795               	decf	efgtoa@w& (0+255),f,b
  2414   00079E  A0D8               	btfss	status,0,c
  2415   0007A0  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  2416   0007A2                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2419   0007A2  0E00               	movlw	0
  2420   0007A4  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  2421   0007A6  0E01               	movlw	1
  2422   0007A8  6FA6               	movwf	efgtoa@n& (0+255),b
  2423   0007AA                     l4205:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2427   0007AA  0E00               	movlw	low _dbuf
  2428   0007AC  25A6               	addwf	efgtoa@n& (0+255),w,b
  2429   0007AE  6E01               	movwf	strcpy@dest^0,c
  2430   0007B0  0E01               	movlw	high _dbuf
  2431   0007B2  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2432   0007B4  6E02               	movwf	(strcpy@dest+1)^0,c
  2433   0007B6  0E40               	movlw	low STR_8
  2434   0007B8  6E03               	movwf	strcpy@src^0,c
  2435   0007BA  EC58  F017         	call	_strcpy	;wreg free
  2436   0007BE  EF9D  F003         	goto	l4189
  2437   0007C2                     l4213:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2440   0007C2  0E00               	movlw	0
  2441   0007C4  0100               	movlb	0	; () banked
  2442   0007C6  6FA8               	movwf	efgtoa@u& (0+255),b
  2443   0007C8  0E00               	movlw	0
  2444   0007CA  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  2445   0007CC  0E80               	movlw	128
  2446   0007CE  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  2447   0007D0  0E3F               	movlw	63
  2448   0007D2  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2451   0007D4  0E00               	movlw	0
  2452   0007D6  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2453   0007D8  0E00               	movlw	0
  2454   0007DA  6F8F               	movwf	efgtoa@e& (0+255),b
  2455   0007DC                     
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2458   0007DC  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  2459   0007E0  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2460   0007E4  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2461   0007E8  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2462   0007EC  0E00               	movlw	0
  2463   0007EE  6E05               	movwf	___fleq@ff2^0,c
  2464   0007F0  0E00               	movlw	0
  2465   0007F2  6E06               	movwf	(___fleq@ff2+1)^0,c
  2466   0007F4  0E00               	movlw	0
  2467   0007F6  6E07               	movwf	(___fleq@ff2+2)^0,c
  2468   0007F8  0E00               	movlw	0
  2469   0007FA  6E08               	movwf	(___fleq@ff2+3)^0,c
  2470   0007FC  ECE3  F014         	call	___fleq	;wreg free
  2471   000800  B0D8               	btfsc	status,0,c
  2472   000802  EF05  F004         	goto	u5131
  2473   000806  EF07  F004         	goto	u5130
  2474   00080A                     u5131:
  2475   00080A  EFE6  F004         	goto	l849
  2476   00080E                     u5130:
  2477   00080E  EF14  F004         	goto	l4221
  2478   000812                     l851:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2481   000812  C091  F0A8         	movff	efgtoa@ou,efgtoa@u
  2482   000816  C092  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  2483   00081A  C093  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  2484   00081E  C094  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  2485   000822                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2487   000822  0100               	movlb	0	; () banked
  2488   000824  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  2489   000826  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  2490   000828                     l4221:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2493   000828  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  2494   00082C  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  2495   000830  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  2496   000834  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  2497   000838  0E00               	movlw	0
  2498   00083A  6E13               	movwf	___flmul@a^0,c
  2499   00083C  0E00               	movlw	0
  2500   00083E  6E14               	movwf	(___flmul@a+1)^0,c
  2501   000840  0E20               	movlw	32
  2502   000842  6E15               	movwf	(___flmul@a+2)^0,c
  2503   000844  0E41               	movlw	65
  2504   000846  6E16               	movwf	(___flmul@a+3)^0,c
  2505   000848  ECAD  F00A         	call	___flmul	;wreg free
  2506   00084C  C00F  F091         	movff	?___flmul,efgtoa@ou
  2507   000850  C010  F092         	movff	?___flmul+1,efgtoa@ou+1
  2508   000854  C011  F093         	movff	?___flmul+2,efgtoa@ou+2
  2509   000858  C012  F094         	movff	?___flmul+3,efgtoa@ou+3
  2510   00085C  0100               	movlb	0	; () banked
  2511   00085E  5191               	movf	efgtoa@ou& (0+255),w,b
  2512   000860  5DA2               	subwf	efgtoa@g& (0+255),w,b
  2513   000862  6E01               	movwf	labs@a^0,c
  2514   000864  5192               	movf	(efgtoa@ou+1)& (0+255),w,b
  2515   000866  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2516   000868  6E02               	movwf	(labs@a+1)^0,c
  2517   00086A  5193               	movf	(efgtoa@ou+2)& (0+255),w,b
  2518   00086C  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2519   00086E  6E03               	movwf	(labs@a+2)^0,c
  2520   000870  5194               	movf	(efgtoa@ou+3)& (0+255),w,b
  2521   000872  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2522   000874  6E04               	movwf	(labs@a+3)^0,c
  2523   000876  ECA2  F016         	call	_labs	;wreg free
  2524   00087A  BE04               	btfsc	(?_labs+3)^0,7,c
  2525   00087C  EF4B  F004         	goto	u5141
  2526   000880  5004               	movf	(?_labs+3)^0,w,c
  2527   000882  1003               	iorwf	(?_labs+2)^0,w,c
  2528   000884  1002               	iorwf	(?_labs+1)^0,w,c
  2529   000886  E109               	bnz	u5140
  2530   000888  0E02               	movlw	2
  2531   00088A  5C01               	subwf	?_labs^0,w,c
  2532   00088C  A0D8               	btfss	status,0,c
  2533   00088E  EF4B  F004         	goto	u5141
  2534   000892  EF4D  F004         	goto	u5140
  2535   000896                     u5141:
  2536   000896  EF09  F004         	goto	l851
  2537   00089A                     u5140:
  2538   00089A  C091  F028         	movff	efgtoa@ou,___flge@ff1
  2539   00089E  C092  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2540   0008A2  C093  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2541   0008A6  C094  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2542   0008AA  C0A2  F02C         	movff	efgtoa@g,___flge@ff2
  2543   0008AE  C0A3  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2544   0008B2  C0A4  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2545   0008B6  C0A5  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2546   0008BA  ECB1  F012         	call	___flge	;wreg free
  2547   0008BE  A0D8               	btfss	status,0,c
  2548   0008C0  EF64  F004         	goto	u5151
  2549   0008C4  EF66  F004         	goto	u5150
  2550   0008C8                     u5151:
  2551   0008C8  EF09  F004         	goto	l851
  2552   0008CC                     u5150:
  2553   0008CC                     
  2554                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2555   0008CC  0100               	movlb	0	; () banked
  2556   0008CE  51A8               	movf	efgtoa@u& (0+255),w,b
  2557   0008D0  5DA2               	subwf	efgtoa@g& (0+255),w,b
  2558   0008D2  6E01               	movwf	labs@a^0,c
  2559   0008D4  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  2560   0008D6  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2561   0008D8  6E02               	movwf	(labs@a+1)^0,c
  2562   0008DA  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  2563   0008DC  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2564   0008DE  6E03               	movwf	(labs@a+2)^0,c
  2565   0008E0  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  2566   0008E2  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2567   0008E4  6E04               	movwf	(labs@a+3)^0,c
  2568   0008E6  ECA2  F016         	call	_labs	;wreg free
  2569   0008EA  BE04               	btfsc	(?_labs+3)^0,7,c
  2570   0008EC  EF85  F004         	goto	u5160
  2571   0008F0  5004               	movf	(?_labs+3)^0,w,c
  2572   0008F2  1003               	iorwf	(?_labs+2)^0,w,c
  2573   0008F4  1002               	iorwf	(?_labs+1)^0,w,c
  2574   0008F6  E107               	bnz	u5161
  2575   0008F8  0E02               	movlw	2
  2576   0008FA  5C01               	subwf	?_labs^0,w,c
  2577   0008FC  B0D8               	btfsc	status,0,c
  2578   0008FE  EF83  F004         	goto	u5161
  2579   000902  EF85  F004         	goto	u5160
  2580   000906                     u5161:
  2581   000906  EFCD  F004         	goto	l4239
  2582   00090A                     u5160:
  2583   00090A                     l4229:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2586   00090A  C0A8  F0A2         	movff	efgtoa@u,efgtoa@g
  2587   00090E  C0A9  F0A3         	movff	efgtoa@u+1,efgtoa@g+1
  2588   000912  C0AA  F0A4         	movff	efgtoa@u+2,efgtoa@g+2
  2589   000916  C0AB  F0A5         	movff	efgtoa@u+3,efgtoa@g+3
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  2592   00091A  EFE6  F004         	goto	l849
  2593   00091E                     l4231:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2596   00091E  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  2597   000922  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2598   000926  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2599   00092A  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2600   00092E  0E00               	movlw	0
  2601   000930  6E2C               	movwf	___fldiv@a^0,c
  2602   000932  0E00               	movlw	0
  2603   000934  6E2D               	movwf	(___fldiv@a+1)^0,c
  2604   000936  0E20               	movlw	32
  2605   000938  6E2E               	movwf	(___fldiv@a+2)^0,c
  2606   00093A  0E41               	movlw	65
  2607   00093C  6E2F               	movwf	(___fldiv@a+3)^0,c
  2608   00093E  ECC2  F00C         	call	___fldiv	;wreg free
  2609   000942  C028  F0A8         	movff	?___fldiv,efgtoa@u
  2610   000946  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  2611   00094A  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  2612   00094E  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  2613   000952                     
  2614                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  2615   000952  0100               	movlb	0	; () banked
  2616   000954  078F               	decf	efgtoa@e& (0+255),f,b
  2617   000956  A0D8               	btfss	status,0,c
  2618   000958  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  2619   00095A                     
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2622   00095A  51A8               	movf	efgtoa@u& (0+255),w,b
  2623   00095C  5DA2               	subwf	efgtoa@g& (0+255),w,b
  2624   00095E  6E01               	movwf	labs@a^0,c
  2625   000960  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  2626   000962  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2627   000964  6E02               	movwf	(labs@a+1)^0,c
  2628   000966  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  2629   000968  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2630   00096A  6E03               	movwf	(labs@a+2)^0,c
  2631   00096C  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  2632   00096E  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2633   000970  6E04               	movwf	(labs@a+3)^0,c
  2634   000972  ECA2  F016         	call	_labs	;wreg free
  2635   000976  BE04               	btfsc	(?_labs+3)^0,7,c
  2636   000978  EFCB  F004         	goto	u5170
  2637   00097C  5004               	movf	(?_labs+3)^0,w,c
  2638   00097E  1003               	iorwf	(?_labs+2)^0,w,c
  2639   000980  1002               	iorwf	(?_labs+1)^0,w,c
  2640   000982  E107               	bnz	u5171
  2641   000984  0E02               	movlw	2
  2642   000986  5C01               	subwf	?_labs^0,w,c
  2643   000988  B0D8               	btfsc	status,0,c
  2644   00098A  EFC9  F004         	goto	u5171
  2645   00098E  EFCB  F004         	goto	u5170
  2646   000992                     u5171:
  2647   000992  EFCD  F004         	goto	l4239
  2648   000996                     u5170:
  2649   000996  EF85  F004         	goto	l4229
  2650   00099A                     l4239:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2653   00099A  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  2654   00099E  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2655   0009A2  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2656   0009A6  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2657   0009AA  C0A8  F02C         	movff	efgtoa@u,___flge@ff2
  2658   0009AE  C0A9  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2659   0009B2  C0AA  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2660   0009B6  C0AB  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2661   0009BA  ECB1  F012         	call	___flge	;wreg free
  2662   0009BE  A0D8               	btfss	status,0,c
  2663   0009C0  EFE4  F004         	goto	u5181
  2664   0009C4  EFE6  F004         	goto	u5180
  2665   0009C8                     u5181:
  2666   0009C8  EF8F  F004         	goto	l4231
  2667   0009CC                     u5180:
  2668   0009CC                     l849:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2671   0009CC  C05A  F089         	movff	efgtoa@c,efgtoa@mode
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2674   0009D0  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  2675   0009D4                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2677   0009D4  BE70               	btfsc	(_prec+1)^0,7,c
  2678   0009D6  EFEF  F004         	goto	u5191
  2679   0009DA  EFF1  F004         	goto	u5190
  2680   0009DE                     u5191:
  2681   0009DE  EFF7  F004         	goto	l4245
  2682   0009E2                     u5190:
  2683   0009E2  C06F  F082         	movff	_prec,efgtoa@p
  2684   0009E6  C070  F083         	movff	_prec+1,efgtoa@p+1
  2685   0009EA  EFFC  F004         	goto	l4247
  2686   0009EE                     l4245:
  2687   0009EE  0E00               	movlw	0
  2688   0009F0  0100               	movlb	0	; () banked
  2689   0009F2  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  2690   0009F4  0E06               	movlw	6
  2691   0009F6  6F82               	movwf	efgtoa@p& (0+255),b
  2692   0009F8                     l4247:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2695   0009F8  C082  F08D         	movff	efgtoa@p,efgtoa@m
  2696   0009FC  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  2697   000A00                     
  2698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2699   000A00  0100               	movlb	0	; () banked
  2700   000A02  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  2701   000A04  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  2702   000A06                     
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2705   000A06  0E66               	movlw	102
  2706   000A08  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  2707   000A0A  A4D8               	btfss	status,2,c
  2708   000A0C  EF0A  F005         	goto	u5201
  2709   000A10  EF0C  F005         	goto	u5200
  2710   000A14                     u5201:
  2711   000A14  EF2C  F005         	goto	l4261
  2712   000A18                     u5200:
  2713   000A18                     
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2716   000A18  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2717   000A1A  EF13  F005         	goto	u5210
  2718   000A1E  EF11  F005         	goto	u5211
  2719   000A22                     u5211:
  2720   000A22  EF1F  F005         	goto	l4257
  2721   000A26                     u5210:
  2722   000A26                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2725   000A26  0E00               	movlw	0
  2726   000A28  6FA8               	movwf	efgtoa@u& (0+255),b
  2727   000A2A  0E00               	movlw	0
  2728   000A2C  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  2729   000A2E  0E80               	movlw	128
  2730   000A30  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  2731   000A32  0E3F               	movlw	63
  2732   000A34  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2735   000A36  0E00               	movlw	0
  2736   000A38  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2737   000A3A  0E00               	movlw	0
  2738   000A3C  6F8F               	movwf	efgtoa@e& (0+255),b
  2739   000A3E                     l4257:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2743   000A3E  0E67               	movlw	103
  2744   000A40  1989               	xorwf	efgtoa@mode& (0+255),w,b
  2745   000A42  B4D8               	btfsc	status,2,c
  2746   000A44  EF26  F005         	goto	u5221
  2747   000A48  EF28  F005         	goto	u5220
  2748   000A4C                     u5221:
  2749   000A4C  EF2C  F005         	goto	l4261
  2750   000A50                     u5220:
  2751   000A50                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2754   000A50  518F               	movf	efgtoa@e& (0+255),w,b
  2755   000A52  278D               	addwf	efgtoa@m& (0+255),f,b
  2756   000A54  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  2757   000A56  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2758   000A58                     l4261:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  2762   000A58  0E00               	movlw	0
  2763   000A5A  6FA0               	movwf	(efgtoa@i+1)& (0+255),b
  2764   000A5C  0E00               	movlw	0
  2765   000A5E  6F9F               	movwf	efgtoa@i& (0+255),b
  2766   000A60                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  2769   000A60  C0A2  F097         	movff	efgtoa@g,efgtoa@h
  2770   000A64  C0A3  F098         	movff	efgtoa@g+1,efgtoa@h+1
  2771   000A68  C0A4  F099         	movff	efgtoa@g+2,efgtoa@h+2
  2772   000A6C  C0A5  F09A         	movff	efgtoa@g+3,efgtoa@h+3
  2773   000A70                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  2776   000A70  C0A8  F091         	movff	efgtoa@u,efgtoa@ou
  2777   000A74  C0A9  F092         	movff	efgtoa@u+1,efgtoa@ou+1
  2778   000A78  C0AA  F093         	movff	efgtoa@u+2,efgtoa@ou+2
  2779   000A7C  C0AB  F094         	movff	efgtoa@u+3,efgtoa@ou+3
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  2782   000A80  EFBD  F005         	goto	l4275
  2783   000A84                     l4267:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  2787   000A84  C097  F028         	movff	efgtoa@h,___fldiv@b
  2788   000A88  C098  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2789   000A8C  C099  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2790   000A90  C09A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2791   000A94  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  2792   000A98  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2793   000A9C  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2794   000AA0  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2795   000AA4  ECC2  F00C         	call	___fldiv	;wreg free
  2796   000AA8  C028  F041         	movff	?___fldiv,floorf@x
  2797   000AAC  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2798   000AB0  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2799   000AB4  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2800   000AB8  EC9C  F00F         	call	_floorf	;wreg free
  2801   000ABC  C041  F09B         	movff	?_floorf,efgtoa@l
  2802   000AC0  C042  F09C         	movff	?_floorf+1,efgtoa@l+1
  2803   000AC4  C043  F09D         	movff	?_floorf+2,efgtoa@l+2
  2804   000AC8  C044  F09E         	movff	?_floorf+3,efgtoa@l+3
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  2807   000ACC  C09B  F001         	movff	efgtoa@l,___fltol@f1
  2808   000AD0  C09C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2809   000AD4  C09D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2810   000AD8  C09E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2811   000ADC  EC2E  F012         	call	___fltol	;wreg free
  2812   000AE0  C001  F08B         	movff	?___fltol,efgtoa@d
  2813   000AE4  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  2814   000AE8                     
  2815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  2816   000AE8  C097  F028         	movff	efgtoa@h,___flsub@b
  2817   000AEC  C098  F029         	movff	efgtoa@h+1,___flsub@b+1
  2818   000AF0  C099  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2819   000AF4  C09A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2820   000AF8  C09B  F013         	movff	efgtoa@l,___flmul@a
  2821   000AFC  C09C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2822   000B00  C09D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2823   000B04  C09E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2824   000B08  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  2825   000B0C  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  2826   000B10  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  2827   000B14  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  2828   000B18  ECAD  F00A         	call	___flmul	;wreg free
  2829   000B1C  C00F  F02C         	movff	?___flmul,___flsub@a
  2830   000B20  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2831   000B24  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2832   000B28  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2833   000B2C  ECF5  F016         	call	___flsub	;wreg free
  2834   000B30  C028  F097         	movff	?___flsub,efgtoa@h
  2835   000B34  C029  F098         	movff	?___flsub+1,efgtoa@h+1
  2836   000B38  C02A  F099         	movff	?___flsub+2,efgtoa@h+2
  2837   000B3C  C02B  F09A         	movff	?___flsub+3,efgtoa@h+3
  2838   000B40                     
  2839                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  2840   000B40  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  2841   000B44  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2842   000B48  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2843   000B4C  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2844   000B50  0E00               	movlw	0
  2845   000B52  6E2C               	movwf	___fldiv@a^0,c
  2846   000B54  0E00               	movlw	0
  2847   000B56  6E2D               	movwf	(___fldiv@a+1)^0,c
  2848   000B58  0E20               	movlw	32
  2849   000B5A  6E2E               	movwf	(___fldiv@a+2)^0,c
  2850   000B5C  0E41               	movlw	65
  2851   000B5E  6E2F               	movwf	(___fldiv@a+3)^0,c
  2852   000B60  ECC2  F00C         	call	___fldiv	;wreg free
  2853   000B64  C028  F0A8         	movff	?___fldiv,efgtoa@u
  2854   000B68  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  2855   000B6C  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  2856   000B70  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  2857   000B74                     
  2858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  2859   000B74  0100               	movlb	0	; () banked
  2860   000B76  4B9F               	infsnz	efgtoa@i& (0+255),f,b
  2861   000B78  2BA0               	incf	(efgtoa@i+1)& (0+255),f,b
  2862   000B7A                     l4275:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  2866   000B7A  518D               	movf	efgtoa@m& (0+255),w,b
  2867   000B7C  5D9F               	subwf	efgtoa@i& (0+255),w,b
  2868   000B7E  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  2869   000B80  0A80               	xorlw	128
  2870   000B82  6E5B               	movwf	??_efgtoa^0,c
  2871   000B84  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  2872   000B86  0A80               	xorlw	128
  2873   000B88  585B               	subwfb	??_efgtoa^0,w,c
  2874   000B8A  A0D8               	btfss	status,0,c
  2875   000B8C  EFCA  F005         	goto	u5231
  2876   000B90  EFCC  F005         	goto	u5230
  2877   000B94                     u5231:
  2878   000B94  EF42  F005         	goto	l4267
  2879   000B98                     u5230:
  2880   000B98                     
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  2883   000B98  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  2884   000B9C  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  2885   000BA0  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  2886   000BA4  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  2887   000BA8  0E00               	movlw	0
  2888   000BAA  6E13               	movwf	___flmul@a^0,c
  2889   000BAC  0E00               	movlw	0
  2890   000BAE  6E14               	movwf	(___flmul@a+1)^0,c
  2891   000BB0  0EA0               	movlw	160
  2892   000BB2  6E15               	movwf	(___flmul@a+2)^0,c
  2893   000BB4  0E40               	movlw	64
  2894   000BB6  6E16               	movwf	(___flmul@a+3)^0,c
  2895   000BB8  ECAD  F00A         	call	___flmul	;wreg free
  2896   000BBC  C00F  F09B         	movff	?___flmul,efgtoa@l
  2897   000BC0  C010  F09C         	movff	?___flmul+1,efgtoa@l+1
  2898   000BC4  C011  F09D         	movff	?___flmul+2,efgtoa@l+2
  2899   000BC8  C012  F09E         	movff	?___flmul+3,efgtoa@l+3
  2900   000BCC                     
  2901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  2902   000BCC  C097  F028         	movff	efgtoa@h,___flge@ff1
  2903   000BD0  C098  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2904   000BD4  C099  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2905   000BD8  C09A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2906   000BDC  C09B  F02C         	movff	efgtoa@l,___flge@ff2
  2907   000BE0  C09C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2908   000BE4  C09D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2909   000BE8  C09E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2910   000BEC  ECB1  F012         	call	___flge	;wreg free
  2911   000BF0  B0D8               	btfsc	status,0,c
  2912   000BF2  EFFD  F005         	goto	u5241
  2913   000BF6  EFFF  F005         	goto	u5240
  2914   000BFA                     u5241:
  2915   000BFA  EF0A  F006         	goto	l4283
  2916   000BFE                     u5240:
  2917   000BFE                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  2919   000BFE  0E00               	movlw	0
  2920   000C00  0100               	movlb	0	; () banked
  2921   000C02  6F9B               	movwf	efgtoa@l& (0+255),b
  2922   000C04  0E00               	movlw	0
  2923   000C06  6F9C               	movwf	(efgtoa@l+1)& (0+255),b
  2924   000C08  0E00               	movlw	0
  2925   000C0A  6F9D               	movwf	(efgtoa@l+2)& (0+255),b
  2926   000C0C  0E00               	movlw	0
  2927   000C0E  6F9E               	movwf	(efgtoa@l+3)& (0+255),b
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  2930   000C10  EF33  F006         	goto	l4289
  2931   000C14                     l4283:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  2934   000C14  C097  F001         	movff	efgtoa@h,___fleq@ff1
  2935   000C18  C098  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2936   000C1C  C099  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2937   000C20  C09A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2938   000C24  C09B  F005         	movff	efgtoa@l,___fleq@ff2
  2939   000C28  C09C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2940   000C2C  C09D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2941   000C30  C09E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2942   000C34  ECE3  F014         	call	___fleq	;wreg free
  2943   000C38  A0D8               	btfss	status,0,c
  2944   000C3A  EF21  F006         	goto	u5251
  2945   000C3E  EF23  F006         	goto	u5250
  2946   000C42                     u5251:
  2947   000C42  EF33  F006         	goto	l4289
  2948   000C46                     u5250:
  2949   000C46  0100               	movlb	0	; () banked
  2950   000C48  B18B               	btfsc	efgtoa@d& (0+255),0,b
  2951   000C4A  EF29  F006         	goto	u5261
  2952   000C4E  EF2B  F006         	goto	u5260
  2953   000C52                     u5261:
  2954   000C52  EF33  F006         	goto	l4289
  2955   000C56                     u5260:
  2956   000C56                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  2959   000C56  0E00               	movlw	0
  2960   000C58  6F9B               	movwf	efgtoa@l& (0+255),b
  2961   000C5A  0E00               	movlw	0
  2962   000C5C  6F9C               	movwf	(efgtoa@l+1)& (0+255),b
  2963   000C5E  0E00               	movlw	0
  2964   000C60  6F9D               	movwf	(efgtoa@l+2)& (0+255),b
  2965   000C62  0E00               	movlw	0
  2966   000C64  6F9E               	movwf	(efgtoa@l+3)& (0+255),b
  2967   000C66                     l4289:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  2970   000C66  C0A2  F001         	movff	efgtoa@g,___fladd@b
  2971   000C6A  C0A3  F002         	movff	efgtoa@g+1,___fladd@b+1
  2972   000C6E  C0A4  F003         	movff	efgtoa@g+2,___fladd@b+2
  2973   000C72  C0A5  F004         	movff	efgtoa@g+3,___fladd@b+3
  2974   000C76  C09B  F005         	movff	efgtoa@l,___fladd@a
  2975   000C7A  C09C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2976   000C7E  C09D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2977   000C82  C09E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2978   000C86  EC4D  F008         	call	___fladd	;wreg free
  2979   000C8A  C001  F097         	movff	?___fladd,efgtoa@h
  2980   000C8E  C002  F098         	movff	?___fladd+1,efgtoa@h+1
  2981   000C92  C003  F099         	movff	?___fladd+2,efgtoa@h+2
  2982   000C96  C004  F09A         	movff	?___fladd+3,efgtoa@h+3
  2983   000C9A                     
  2984                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  2985   000C9A  C097  F028         	movff	efgtoa@h,___flge@ff1
  2986   000C9E  C098  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2987   000CA2  C099  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2988   000CA6  C09A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2989   000CAA  0E00               	movlw	0
  2990   000CAC  6E13               	movwf	___flmul@a^0,c
  2991   000CAE  0E00               	movlw	0
  2992   000CB0  6E14               	movwf	(___flmul@a+1)^0,c
  2993   000CB2  0E20               	movlw	32
  2994   000CB4  6E15               	movwf	(___flmul@a+2)^0,c
  2995   000CB6  0E41               	movlw	65
  2996   000CB8  6E16               	movwf	(___flmul@a+3)^0,c
  2997   000CBA  C091  F00F         	movff	efgtoa@ou,___flmul@b
  2998   000CBE  C092  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2999   000CC2  C093  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3000   000CC6  C094  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3001   000CCA  ECAD  F00A         	call	___flmul	;wreg free
  3002   000CCE  C00F  F02C         	movff	?___flmul,___flge@ff2
  3003   000CD2  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3004   000CD6  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3005   000CDA  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3006   000CDE  ECB1  F012         	call	___flge	;wreg free
  3007   000CE2  A0D8               	btfss	status,0,c
  3008   000CE4  EF76  F006         	goto	u5271
  3009   000CE8  EF78  F006         	goto	u5270
  3010   000CEC                     u5271:
  3011   000CEC  EFA1  F006         	goto	l4301
  3012   000CF0                     u5270:
  3013   000CF0                     
  3014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  3015   000CF0  0100               	movlb	0	; () banked
  3016   000CF2  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  3017   000CF4  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3018   000CF6                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3021   000CF6  C091  F00F         	movff	efgtoa@ou,___flmul@b
  3022   000CFA  C092  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3023   000CFE  C093  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3024   000D02  C094  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3025   000D06  0E00               	movlw	0
  3026   000D08  6E13               	movwf	___flmul@a^0,c
  3027   000D0A  0E00               	movlw	0
  3028   000D0C  6E14               	movwf	(___flmul@a+1)^0,c
  3029   000D0E  0E20               	movlw	32
  3030   000D10  6E15               	movwf	(___flmul@a+2)^0,c
  3031   000D12  0E41               	movlw	65
  3032   000D14  6E16               	movwf	(___flmul@a+3)^0,c
  3033   000D16  ECAD  F00A         	call	___flmul	;wreg free
  3034   000D1A  C00F  F091         	movff	?___flmul,efgtoa@ou
  3035   000D1E  C010  F092         	movff	?___flmul+1,efgtoa@ou+1
  3036   000D22  C011  F093         	movff	?___flmul+2,efgtoa@ou+2
  3037   000D26  C012  F094         	movff	?___flmul+3,efgtoa@ou+3
  3038   000D2A                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3040   000D2A  0E66               	movlw	102
  3041   000D2C  0100               	movlb	0	; () banked
  3042   000D2E  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3043   000D30  A4D8               	btfss	status,2,c
  3044   000D32  EF9D  F006         	goto	u5281
  3045   000D36  EF9F  F006         	goto	u5280
  3046   000D3A                     u5281:
  3047   000D3A  EFA1  F006         	goto	l4301
  3048   000D3E                     u5280:
  3049   000D3E                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  3052   000D3E  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  3053   000D40  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  3054   000D42                     l4301:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3057   000D42  C091  F0A8         	movff	efgtoa@ou,efgtoa@u
  3058   000D46  C092  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  3059   000D4A  C093  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  3060   000D4E  C094  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  3061   000D52                     
  3062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3063   000D52  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  3064   000D56  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  3065   000D5A                     
  3066                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3067   000D5A  0E00               	movlw	0
  3068   000D5C  0100               	movlb	0	; () banked
  3069   000D5E  6F88               	movwf	efgtoa@pp& (0+255),b
  3070   000D60                     
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3073   000D60  0E00               	movlw	0
  3074   000D62  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  3075   000D64  0E00               	movlw	0
  3076   000D66  6F84               	movwf	efgtoa@t& (0+255),b
  3077   000D68                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3080   000D68  0E00               	movlw	0
  3081   000D6A  6FA0               	movwf	(efgtoa@i+1)& (0+255),b
  3082   000D6C  0E00               	movlw	0
  3083   000D6E  6F9F               	movwf	efgtoa@i& (0+255),b
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3086   000D70  EF9F  F007         	goto	l4351
  3087   000D74                     l4311:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3091   000D74  C097  F028         	movff	efgtoa@h,___fldiv@b
  3092   000D78  C098  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3093   000D7C  C099  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3094   000D80  C09A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3095   000D84  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  3096   000D88  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3097   000D8C  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3098   000D90  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3099   000D94  ECC2  F00C         	call	___fldiv	;wreg free
  3100   000D98  C028  F041         	movff	?___fldiv,floorf@x
  3101   000D9C  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3102   000DA0  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3103   000DA4  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3104   000DA8  EC9C  F00F         	call	_floorf	;wreg free
  3105   000DAC  C041  F09B         	movff	?_floorf,efgtoa@l
  3106   000DB0  C042  F09C         	movff	?_floorf+1,efgtoa@l+1
  3107   000DB4  C043  F09D         	movff	?_floorf+2,efgtoa@l+2
  3108   000DB8  C044  F09E         	movff	?_floorf+3,efgtoa@l+3
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3111   000DBC  C09B  F001         	movff	efgtoa@l,___fltol@f1
  3112   000DC0  C09C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3113   000DC4  C09D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3114   000DC8  C09E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3115   000DCC  EC2E  F012         	call	___fltol	;wreg free
  3116   000DD0  BE02               	btfsc	(?___fltol+1)^0,7,c
  3117   000DD2  EFF6  F006         	goto	u5290
  3118   000DD6  5002               	movf	(?___fltol+1)^0,w,c
  3119   000DD8  E107               	bnz	u5291
  3120   000DDA  0E0A               	movlw	10
  3121   000DDC  5C01               	subwf	?___fltol^0,w,c
  3122   000DDE  B0D8               	btfsc	status,0,c
  3123   000DE0  EFF4  F006         	goto	u5291
  3124   000DE4  EFF6  F006         	goto	u5290
  3125   000DE8                     u5291:
  3126   000DE8  EF06  F007         	goto	l4315
  3127   000DEC                     u5290:
  3128   000DEC  C09B  F001         	movff	efgtoa@l,___fltol@f1
  3129   000DF0  C09C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3130   000DF4  C09D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3131   000DF8  C09E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3132   000DFC  EC2E  F012         	call	___fltol	;wreg free
  3133   000E00  C001  F08B         	movff	?___fltol,efgtoa@d
  3134   000E04  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  3135   000E08  EF0B  F007         	goto	l879
  3136   000E0C                     l4315:
  3137   000E0C  0E00               	movlw	0
  3138   000E0E  0100               	movlb	0	; () banked
  3139   000E10  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  3140   000E12  0E09               	movlw	9
  3141   000E14  6F8B               	movwf	efgtoa@d& (0+255),b
  3142   000E16                     l879:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3145   000E16  0100               	movlb	0	; () banked
  3146   000E18  5188               	movf	efgtoa@pp& (0+255),w,b
  3147   000E1A  A4D8               	btfss	status,2,c
  3148   000E1C  EF12  F007         	goto	u5301
  3149   000E20  EF14  F007         	goto	u5300
  3150   000E24                     u5301:
  3151   000E24  EF3C  F007         	goto	l4335
  3152   000E28                     u5300:
  3153   000E28                     
  3154                           ; BSR set to: 0
  3155   000E28  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3156   000E2A  EF1B  F007         	goto	u5310
  3157   000E2E  EF19  F007         	goto	u5311
  3158   000E32                     u5311:
  3159   000E32  EF3C  F007         	goto	l4335
  3160   000E36                     u5310:
  3161   000E36                     
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3164   000E36  0E00               	movlw	low _dbuf
  3165   000E38  25A6               	addwf	efgtoa@n& (0+255),w,b
  3166   000E3A  6ED9               	movwf	fsr2l,c
  3167   000E3C  0E01               	movlw	high _dbuf
  3168   000E3E  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3169   000E40  6EDA               	movwf	fsr2h,c
  3170   000E42  0E2E               	movlw	46
  3171   000E44  6EDF               	movwf	indf2,c
  3172   000E46                     
  3173                           ; BSR set to: 0
  3174   000E46  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  3175   000E48  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  3176   000E4A                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3179   000E4A  0795               	decf	efgtoa@w& (0+255),f,b
  3180   000E4C  A0D8               	btfss	status,0,c
  3181   000E4E  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3182   000E50                     
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3185   000E50  0E01               	movlw	1
  3186   000E52  6F88               	movwf	efgtoa@pp& (0+255),b
  3187   000E54  EF3C  F007         	goto	l4335
  3188   000E58                     l4327:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3192   000E58  0E00               	movlw	low _dbuf
  3193   000E5A  25A6               	addwf	efgtoa@n& (0+255),w,b
  3194   000E5C  6ED9               	movwf	fsr2l,c
  3195   000E5E  0E01               	movlw	high _dbuf
  3196   000E60  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3197   000E62  6EDA               	movwf	fsr2h,c
  3198   000E64  0E30               	movlw	48
  3199   000E66  6EDF               	movwf	indf2,c
  3200   000E68                     
  3201                           ; BSR set to: 0
  3202   000E68  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  3203   000E6A  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  3204   000E6C                     
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3207   000E6C  0795               	decf	efgtoa@w& (0+255),f,b
  3208   000E6E  A0D8               	btfss	status,0,c
  3209   000E70  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3210   000E72                     
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3213   000E72  0784               	decf	efgtoa@t& (0+255),f,b
  3214   000E74  A0D8               	btfss	status,0,c
  3215   000E76  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  3216   000E78                     l4335:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3220   000E78  5184               	movf	efgtoa@t& (0+255),w,b
  3221   000E7A  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3222   000E7C  A4D8               	btfss	status,2,c
  3223   000E7E  EF43  F007         	goto	u5321
  3224   000E82  EF45  F007         	goto	u5320
  3225   000E86                     u5321:
  3226   000E86  EF2C  F007         	goto	l4327
  3227   000E8A                     u5320:
  3228   000E8A                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3231   000E8A  0E00               	movlw	low _dbuf
  3232   000E8C  25A6               	addwf	efgtoa@n& (0+255),w,b
  3233   000E8E  6ED9               	movwf	fsr2l,c
  3234   000E90  0E01               	movlw	high _dbuf
  3235   000E92  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3236   000E94  6EDA               	movwf	fsr2h,c
  3237   000E96  518B               	movf	efgtoa@d& (0+255),w,b
  3238   000E98  0F30               	addlw	48
  3239   000E9A  6EDF               	movwf	indf2,c
  3240   000E9C                     
  3241                           ; BSR set to: 0
  3242   000E9C  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  3243   000E9E  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  3244   000EA0                     
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3247   000EA0  0795               	decf	efgtoa@w& (0+255),f,b
  3248   000EA2  A0D8               	btfss	status,0,c
  3249   000EA4  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3250   000EA6                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3253   000EA6  C097  F028         	movff	efgtoa@h,___flsub@b
  3254   000EAA  C098  F029         	movff	efgtoa@h+1,___flsub@b+1
  3255   000EAE  C099  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3256   000EB2  C09A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3257   000EB6  C09B  F013         	movff	efgtoa@l,___flmul@a
  3258   000EBA  C09C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3259   000EBE  C09D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3260   000EC2  C09E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3261   000EC6  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3262   000ECA  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3263   000ECE  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3264   000ED2  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3265   000ED6  ECAD  F00A         	call	___flmul	;wreg free
  3266   000EDA  C00F  F02C         	movff	?___flmul,___flsub@a
  3267   000EDE  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3268   000EE2  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3269   000EE6  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3270   000EEA  ECF5  F016         	call	___flsub	;wreg free
  3271   000EEE  C028  F097         	movff	?___flsub,efgtoa@h
  3272   000EF2  C029  F098         	movff	?___flsub+1,efgtoa@h+1
  3273   000EF6  C02A  F099         	movff	?___flsub+2,efgtoa@h+2
  3274   000EFA  C02B  F09A         	movff	?___flsub+3,efgtoa@h+3
  3275   000EFE                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3277   000EFE  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  3278   000F02  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3279   000F06  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3280   000F0A  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3281   000F0E  0E00               	movlw	0
  3282   000F10  6E2C               	movwf	___fldiv@a^0,c
  3283   000F12  0E00               	movlw	0
  3284   000F14  6E2D               	movwf	(___fldiv@a+1)^0,c
  3285   000F16  0E20               	movlw	32
  3286   000F18  6E2E               	movwf	(___fldiv@a+2)^0,c
  3287   000F1A  0E41               	movlw	65
  3288   000F1C  6E2F               	movwf	(___fldiv@a+3)^0,c
  3289   000F1E  ECC2  F00C         	call	___fldiv	;wreg free
  3290   000F22  C028  F0A8         	movff	?___fldiv,efgtoa@u
  3291   000F26  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  3292   000F2A  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  3293   000F2E  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  3294   000F32                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3296   000F32  0100               	movlb	0	; () banked
  3297   000F34  0780               	decf	efgtoa@ne& (0+255),f,b
  3298   000F36  A0D8               	btfss	status,0,c
  3299   000F38  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  3300   000F3A                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3303   000F3A  4B9F               	infsnz	efgtoa@i& (0+255),f,b
  3304   000F3C  2BA0               	incf	(efgtoa@i+1)& (0+255),f,b
  3305   000F3E                     l4351:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3309   000F3E  518D               	movf	efgtoa@m& (0+255),w,b
  3310   000F40  5D9F               	subwf	efgtoa@i& (0+255),w,b
  3311   000F42  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  3312   000F44  0A80               	xorlw	128
  3313   000F46  6E5B               	movwf	??_efgtoa^0,c
  3314   000F48  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  3315   000F4A  0A80               	xorlw	128
  3316   000F4C  585B               	subwfb	??_efgtoa^0,w,c
  3317   000F4E  B0D8               	btfsc	status,0,c
  3318   000F50  EFAC  F007         	goto	u5331
  3319   000F54  EFAE  F007         	goto	u5330
  3320   000F58                     u5331:
  3321   000F58  EFBC  F007         	goto	l4355
  3322   000F5C                     u5330:
  3323   000F5C                     
  3324                           ; BSR set to: 0
  3325   000F5C  BFA7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3326   000F5E  EFBA  F007         	goto	u5341
  3327   000F62  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  3328   000F64  E109               	bnz	u5340
  3329   000F66  0E4B               	movlw	75
  3330   000F68  5DA6               	subwf	efgtoa@n& (0+255),w,b
  3331   000F6A  A0D8               	btfss	status,0,c
  3332   000F6C  EFBA  F007         	goto	u5341
  3333   000F70  EFBC  F007         	goto	u5340
  3334   000F74                     u5341:
  3335   000F74  EFBA  F006         	goto	l4311
  3336   000F78                     u5340:
  3337   000F78                     l4355:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3341   000F78  0E00               	movlw	0
  3342   000F7A  6FA0               	movwf	(efgtoa@i+1)& (0+255),b
  3343   000F7C  0E4F               	movlw	79
  3344   000F7E  6F9F               	movwf	efgtoa@i& (0+255),b
  3345   000F80                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3348   000F80  0E00               	movlw	low _dbuf
  3349   000F82  259F               	addwf	efgtoa@i& (0+255),w,b
  3350   000F84  6ED9               	movwf	fsr2l,c
  3351   000F86  0E01               	movlw	high _dbuf
  3352   000F88  21A0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3353   000F8A  6EDA               	movwf	fsr2h,c
  3354   000F8C  6ADF               	clrf	indf2,c
  3355   000F8E                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3358   000F8E  0E00               	movlw	low _dbuf
  3359   000F90  6E5B               	movwf	??_efgtoa^0,c
  3360   000F92  0E01               	movlw	high _dbuf
  3361   000F94  6E5C               	movwf	(??_efgtoa+1)^0,c
  3362   000F96  51A6               	movf	efgtoa@n& (0+255),w,b
  3363   000F98  5E5B               	subwf	??_efgtoa^0,f,c
  3364   000F9A  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  3365   000F9C  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  3366   000F9E  519F               	movf	efgtoa@i& (0+255),w,b
  3367   000FA0  245B               	addwf	??_efgtoa^0,w,c
  3368   000FA2  6E01               	movwf	memcpy@d1^0,c
  3369   000FA4  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  3370   000FA6  205C               	addwfc	(??_efgtoa+1)^0,w,c
  3371   000FA8  6E02               	movwf	(memcpy@d1+1)^0,c
  3372   000FAA  0E00               	movlw	low _dbuf
  3373   000FAC  6E03               	movwf	memcpy@s1^0,c
  3374   000FAE  0E01               	movlw	high _dbuf
  3375   000FB0  6E04               	movwf	(memcpy@s1+1)^0,c
  3376   000FB2  C0A6  F005         	movff	efgtoa@n,memcpy@n
  3377   000FB6  C0A7  F006         	movff	efgtoa@n+1,memcpy@n+1
  3378   000FBA  ECCD  F016         	call	_memcpy	;wreg free
  3379   000FBE                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3381   000FBE  0100               	movlb	0	; () banked
  3382   000FC0  51A6               	movf	efgtoa@n& (0+255),w,b
  3383   000FC2  5D9F               	subwf	efgtoa@i& (0+255),w,b
  3384   000FC4  6FA6               	movwf	efgtoa@n& (0+255),b
  3385   000FC6  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  3386   000FC8  59A0               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3387   000FCA  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  3388   000FCC                     
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3391   000FCC  51A1               	movf	efgtoa@sign& (0+255),w,b
  3392   000FCE  A4D8               	btfss	status,2,c
  3393   000FD0  EFEC  F007         	goto	u5351
  3394   000FD4  EFEF  F007         	goto	u5350
  3395   000FD8                     u5351:
  3396   000FD8  0E01               	movlw	1
  3397   000FDA  EFF0  F007         	goto	u5360
  3398   000FDE                     u5350:
  3399   000FDE  0E00               	movlw	0
  3400   000FE0                     u5360:
  3401   000FE0  6F9F               	movwf	efgtoa@i& (0+255),b
  3402   000FE2  6BA0               	clrf	(efgtoa@i+1)& (0+255),b
  3403   000FE4                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  3406   000FE4  A271               	btfss	_flags^0,1,c
  3407   000FE6  EFF7  F007         	goto	u5371
  3408   000FEA  EFF9  F007         	goto	u5370
  3409   000FEE                     u5371:
  3410   000FEE  EF27  F008         	goto	l4377
  3411   000FF2                     u5370:
  3412   000FF2  EF09  F008         	goto	l4373
  3413   000FF6                     l4369:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  3417   000FF6  07A6               	decf	efgtoa@n& (0+255),f,b
  3418   000FF8  A0D8               	btfss	status,0,c
  3419   000FFA  07A7               	decf	(efgtoa@n+1)& (0+255),f,b
  3420   000FFC  0E00               	movlw	low _dbuf
  3421   000FFE  25A6               	addwf	efgtoa@n& (0+255),w,b
  3422   001000  6ED9               	movwf	fsr2l,c
  3423   001002  0E01               	movlw	high _dbuf
  3424   001004  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3425   001006  6EDA               	movwf	fsr2h,c
  3426   001008  0E30               	movlw	48
  3427   00100A  6EDF               	movwf	indf2,c
  3428   00100C                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  3431   00100C  0795               	decf	efgtoa@w& (0+255),f,b
  3432   00100E  A0D8               	btfss	status,0,c
  3433   001010  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3434   001012                     l4373:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  3438   001012  5195               	movf	efgtoa@w& (0+255),w,b
  3439   001014  5D9F               	subwf	efgtoa@i& (0+255),w,b
  3440   001016  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  3441   001018  0A80               	xorlw	128
  3442   00101A  6E5B               	movwf	??_efgtoa^0,c
  3443   00101C  5196               	movf	(efgtoa@w+1)& (0+255),w,b
  3444   00101E  0A80               	xorlw	128
  3445   001020  585B               	subwfb	??_efgtoa^0,w,c
  3446   001022  B0D8               	btfsc	status,0,c
  3447   001024  EF16  F008         	goto	u5381
  3448   001028  EF18  F008         	goto	u5380
  3449   00102C                     u5381:
  3450   00102C  EF27  F008         	goto	l4377
  3451   001030                     u5380:
  3452   001030                     
  3453                           ; BSR set to: 0
  3454   001030  51A6               	movf	efgtoa@n& (0+255),w,b
  3455   001032  5D9F               	subwf	efgtoa@i& (0+255),w,b
  3456   001034  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  3457   001036  0A80               	xorlw	128
  3458   001038  6E5B               	movwf	??_efgtoa^0,c
  3459   00103A  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  3460   00103C  0A80               	xorlw	128
  3461   00103E  585B               	subwfb	??_efgtoa^0,w,c
  3462   001040  A0D8               	btfss	status,0,c
  3463   001042  EF25  F008         	goto	u5391
  3464   001046  EF27  F008         	goto	u5390
  3465   00104A                     u5391:
  3466   00104A  EFFB  F007         	goto	l4369
  3467   00104E                     u5390:
  3468   00104E                     l4377:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3472   00104E  51A1               	movf	efgtoa@sign& (0+255),w,b
  3473   001050  B4D8               	btfsc	status,2,c
  3474   001052  EF2D  F008         	goto	u5401
  3475   001056  EF2F  F008         	goto	u5400
  3476   00105A                     u5401:
  3477   00105A  EF3A  F008         	goto	l4381
  3478   00105E                     u5400:
  3479   00105E                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3482   00105E  07A6               	decf	efgtoa@n& (0+255),f,b
  3483   001060  A0D8               	btfss	status,0,c
  3484   001062  07A7               	decf	(efgtoa@n+1)& (0+255),f,b
  3485   001064  0E00               	movlw	low _dbuf
  3486   001066  25A6               	addwf	efgtoa@n& (0+255),w,b
  3487   001068  6ED9               	movwf	fsr2l,c
  3488   00106A  0E01               	movlw	high _dbuf
  3489   00106C  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3490   00106E  6EDA               	movwf	fsr2h,c
  3491   001070  C0A1  FFDF         	movff	efgtoa@sign,indf2
  3492   001074                     l4381:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3496   001074  519F               	movf	efgtoa@i& (0+255),w,b
  3497   001076  5F95               	subwf	efgtoa@w& (0+255),f,b
  3498   001078  51A0               	movf	(efgtoa@i+1)& (0+255),w,b
  3499   00107A  5B96               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3500   00107C                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3503   00107C  C055  F00F         	movff	efgtoa@fp,pad@fp
  3504   001080  0E00               	movlw	low _dbuf
  3505   001082  25A6               	addwf	efgtoa@n& (0+255),w,b
  3506   001084  6E10               	movwf	pad@buf^0,c
  3507   001086  0E01               	movlw	high _dbuf
  3508   001088  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3509   00108A  6E11               	movwf	(pad@buf+1)^0,c
  3510   00108C  C095  F012         	movff	efgtoa@w,pad@p
  3511   001090  C096  F013         	movff	efgtoa@w+1,pad@p+1
  3512   001094  EC6F  F016         	call	_pad	;wreg free
  3513   001098                     l846:
  3514   001098  0012               	return		;funcret
  3515   00109A                     __end_of_efgtoa:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _strcpy *****************
  3519 ;; Defined at:
  3520 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3523 ;;		 -> dbuf(80), 
  3524 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3525 ;;		 -> STR_8(4), STR_5(4), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  d               2    4[COMRAM] PTR unsigned char 
  3528 ;;		 -> dbuf(80), 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2    0[COMRAM] PTR unsigned char 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:         3       0       0       0       0       0       0
  3539 ;;      Locals:         2       0       0       0       0       0       0
  3540 ;;      Temps:          1       0       0       0       0       0       0
  3541 ;;      Totals:         6       0       0       0       0       0       0
  3542 ;;Total ram usage:        6 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_efgtoa
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text10
  3552   002EB0                     __ptext10:
  3553                           	callstack 0
  3554   002EB0                     _strcpy:
  3555                           	callstack 25
  3556   002EB0  C001  F005         	movff	strcpy@dest,strcpy@d
  3557   002EB4  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3558   002EB8                     l4103:
  3559   002EB8  2A03               	incf	strcpy@src^0,f,c
  3560   002EBA  0403               	decf	strcpy@src^0,w,c
  3561   002EBC  6E04               	movwf	??_strcpy^0,c
  3562   002EBE  C004  FFF6         	movff	??_strcpy,tblptrl
  3563   002EC2                     	if	1	;There is more than 1 active tblptr byte
  3564   002EC2  0E06               	movlw	high __smallconst
  3565   002EC4  6EF7               	movwf	tblptrh,c
  3566   002EC6                     	endif
  3567   002EC6                     	if	0	;tblptru may be non-zero
  3568   002EC6                     	endif
  3569   002EC6                     	if	0	;tblptru may be non-zero
  3570   002EC6                     	endif
  3571   002EC6  C005  FFD9         	movff	strcpy@d,fsr2l
  3572   002ECA  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3573   002ECE  4A05               	infsnz	strcpy@d^0,f,c
  3574   002ED0  2A06               	incf	(strcpy@d+1)^0,f,c
  3575   002ED2  0008               	tblrd		*
  3576   002ED4  CFF5 FFDF          	movff	tablat,indf2
  3577   002ED8  50DF               	movf	indf2,w,c
  3578   002EDA  A4D8               	btfss	status,2,c
  3579   002EDC  EF72  F017         	goto	u4931
  3580   002EE0  EF74  F017         	goto	u4930
  3581   002EE4                     u4931:
  3582   002EE4  EF5C  F017         	goto	l4103
  3583   002EE8                     u4930:
  3584   002EE8  0012               	return		;funcret
  3585   002EEA                     __end_of_strcpy:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _pad *****************
  3589 ;; Defined at:
  3590 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3593 ;;		 -> sprintf@f(12), 
  3594 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3595 ;;		 -> dbuf(80), 
  3596 ;;  p               2   17[COMRAM] int 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  i               2   20[COMRAM] int 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3608 ;;      Params:         5       0       0       0       0       0       0
  3609 ;;      Locals:         2       0       0       0       0       0       0
  3610 ;;      Temps:          1       0       0       0       0       0       0
  3611 ;;      Totals:         8       0       0       0       0       0       0
  3612 ;;Total ram usage:        8 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 3
  3615 ;; This function calls:
  3616 ;;		_fputc
  3617 ;;		_fputs
  3618 ;; This function is called by:
  3619 ;;		_efgtoa
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text11
  3624   002CDE                     __ptext11:
  3625                           	callstack 0
  3626   002CDE                     _pad:
  3627                           	callstack 22
  3628   002CDE                     
  3629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3630   002CDE  BE13               	btfsc	(pad@p+1)^0,7,c
  3631   002CE0  EF76  F016         	goto	u4840
  3632   002CE4  EF74  F016         	goto	u4841
  3633   002CE8                     u4841:
  3634   002CE8  EF7A  F016         	goto	l831
  3635   002CEC                     u4840:
  3636   002CEC                     
  3637                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3638   002CEC  0E00               	movlw	0
  3639   002CEE  6E13               	movwf	(pad@p+1)^0,c
  3640   002CF0  0E00               	movlw	0
  3641   002CF2  6E12               	movwf	pad@p^0,c
  3642   002CF4                     l831:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3645   002CF4  0E00               	movlw	0
  3646   002CF6  6E16               	movwf	(pad@i+1)^0,c
  3647   002CF8  0E00               	movlw	0
  3648   002CFA  6E15               	movwf	pad@i^0,c
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3651   002CFC  EF8A  F016         	goto	l4075
  3652   002D00                     l4071:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3655   002D00  0E00               	movlw	0
  3656   002D02  6E02               	movwf	(fputc@c+1)^0,c
  3657   002D04  0E20               	movlw	32
  3658   002D06  6E01               	movwf	fputc@c^0,c
  3659   002D08  C00F  F003         	movff	pad@fp,fputc@fp
  3660   002D0C  EC8E  F014         	call	_fputc	;wreg free
  3661   002D10                     
  3662                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3663   002D10  4A15               	infsnz	pad@i^0,f,c
  3664   002D12  2A16               	incf	(pad@i+1)^0,f,c
  3665   002D14                     l4075:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3668   002D14  5012               	movf	pad@p^0,w,c
  3669   002D16  5C15               	subwf	pad@i^0,w,c
  3670   002D18  5016               	movf	(pad@i+1)^0,w,c
  3671   002D1A  0A80               	xorlw	128
  3672   002D1C  6E14               	movwf	??_pad^0,c
  3673   002D1E  5013               	movf	(pad@p+1)^0,w,c
  3674   002D20  0A80               	xorlw	128
  3675   002D22  5814               	subwfb	??_pad^0,w,c
  3676   002D24  A0D8               	btfss	status,0,c
  3677   002D26  EF97  F016         	goto	u4851
  3678   002D2A  EF99  F016         	goto	u4850
  3679   002D2E                     u4851:
  3680   002D2E  EF80  F016         	goto	l4071
  3681   002D32                     u4850:
  3682   002D32                     
  3683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3684   002D32  C010  F009         	movff	pad@buf,fputs@s
  3685   002D36  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3686   002D3A  C00F  F00B         	movff	pad@fp,fputs@fp
  3687   002D3E  EC38  F017         	call	_fputs	;wreg free
  3688   002D42  0012               	return		;funcret
  3689   002D44                     __end_of_pad:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _fputs *****************
  3693 ;; Defined at:
  3694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3697 ;;		 -> dbuf(80), 
  3698 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3699 ;;		 -> sprintf@f(12), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  i               2   12[COMRAM] int 
  3702 ;;  c               1   11[COMRAM] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2    8[COMRAM] int 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3712 ;;      Params:         3       0       0       0       0       0       0
  3713 ;;      Locals:         3       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0
  3715 ;;      Totals:         6       0       0       0       0       0       0
  3716 ;;Total ram usage:        6 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 2
  3719 ;; This function calls:
  3720 ;;		_fputc
  3721 ;; This function is called by:
  3722 ;;		_pad
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text12
  3727   002E70                     __ptext12:
  3728                           	callstack 0
  3729   002E70                     _fputs:
  3730                           	callstack 22
  3731   002E70  0E00               	movlw	0
  3732   002E72  6E0E               	movwf	(fputs@i+1)^0,c
  3733   002E74  0E00               	movlw	0
  3734   002E76  6E0D               	movwf	fputs@i^0,c
  3735   002E78  EF47  F017         	goto	l3695
  3736   002E7C                     l3691:
  3737   002E7C  C00C  F001         	movff	fputs@c,fputc@c
  3738   002E80  6A02               	clrf	(fputc@c+1)^0,c
  3739   002E82  C00B  F003         	movff	fputs@fp,fputc@fp
  3740   002E86  EC8E  F014         	call	_fputc	;wreg free
  3741   002E8A  4A0D               	infsnz	fputs@i^0,f,c
  3742   002E8C  2A0E               	incf	(fputs@i+1)^0,f,c
  3743   002E8E                     l3695:
  3744   002E8E  500D               	movf	fputs@i^0,w,c
  3745   002E90  2409               	addwf	fputs@s^0,w,c
  3746   002E92  6ED9               	movwf	fsr2l,c
  3747   002E94  500E               	movf	(fputs@i+1)^0,w,c
  3748   002E96  200A               	addwfc	(fputs@s+1)^0,w,c
  3749   002E98  6EDA               	movwf	fsr2h,c
  3750   002E9A  50DF               	movf	indf2,w,c
  3751   002E9C  6E0C               	movwf	fputs@c^0,c
  3752   002E9E  500C               	movf	fputs@c^0,w,c
  3753   002EA0  A4D8               	btfss	status,2,c
  3754   002EA2  EF55  F017         	goto	u4251
  3755   002EA6  EF57  F017         	goto	u4250
  3756   002EAA                     u4251:
  3757   002EAA  EF3E  F017         	goto	l3691
  3758   002EAE                     u4250:
  3759   002EAE  0012               	return		;funcret
  3760   002EB0                     __end_of_fputs:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _fputc *****************
  3764 ;; Defined at:
  3765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  c               2    0[COMRAM] int 
  3768 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3769 ;;		 -> sprintf@f(12), 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  2    0[COMRAM] int 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3781 ;;      Params:         3       0       0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0
  3783 ;;      Temps:          5       0       0       0       0       0       0
  3784 ;;      Totals:         8       0       0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		_putch
  3790 ;; This function is called by:
  3791 ;;		_pad
  3792 ;;		_vfpfcnvrt
  3793 ;;		_fputs
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text13
  3798   00291C                     __ptext13:
  3799                           	callstack 0
  3800   00291C                     _fputc:
  3801                           	callstack 25
  3802   00291C  5003               	movf	fputc@fp^0,w,c
  3803   00291E  B4D8               	btfsc	status,2,c
  3804   002920  EF94  F014         	goto	u3821
  3805   002924  EF96  F014         	goto	u3820
  3806   002928                     u3821:
  3807   002928  EF9E  F014         	goto	l3477
  3808   00292C                     u3820:
  3809   00292C  5003               	movf	fputc@fp^0,w,c
  3810   00292E  A4D8               	btfss	status,2,c
  3811   002930  EF9C  F014         	goto	u3831
  3812   002934  EF9E  F014         	goto	u3830
  3813   002938                     u3831:
  3814   002938  EFA3  F014         	goto	l3479
  3815   00293C                     u3830:
  3816   00293C                     l3477:
  3817   00293C  5001               	movf	fputc@c^0,w,c
  3818   00293E  EC34  F018         	call	_putch
  3819   002942  EFE2  F014         	goto	l984
  3820   002946                     l3479:
  3821   002946  5003               	movf	fputc@fp^0,w,c
  3822   002948  6ED9               	movwf	fsr2l,c
  3823   00294A  6ADA               	clrf	fsr2h,c
  3824   00294C  0E0A               	movlw	10
  3825   00294E  26D9               	addwf	fsr2l,f,c
  3826   002950  50DE               	movf	postinc2,w,c
  3827   002952  10DE               	iorwf	postinc2,w,c
  3828   002954  B4D8               	btfsc	status,2,c
  3829   002956  EFAF  F014         	goto	u3841
  3830   00295A  EFB1  F014         	goto	u3840
  3831   00295E                     u3841:
  3832   00295E  EFCA  F014         	goto	l3483
  3833   002962                     u3840:
  3834   002962  5003               	movf	fputc@fp^0,w,c
  3835   002964  6ED9               	movwf	fsr2l,c
  3836   002966  6ADA               	clrf	fsr2h,c
  3837   002968  0E0A               	movlw	10
  3838   00296A  26D9               	addwf	fsr2l,f,c
  3839   00296C  5003               	movf	fputc@fp^0,w,c
  3840   00296E  6EE1               	movwf	fsr1l,c
  3841   002970  6AE2               	clrf	fsr1h,c
  3842   002972  0E03               	movlw	3
  3843   002974  26E1               	addwf	fsr1l,f,c
  3844   002976  50DE               	movf	postinc2,w,c
  3845   002978  5CE6               	subwf	postinc1,w,c
  3846   00297A  50E6               	movf	postinc1,w,c
  3847   00297C  0A80               	xorlw	128
  3848   00297E  6E08               	movwf	(??_fputc+4)^0,c
  3849   002980  50DE               	movf	postinc2,w,c
  3850   002982  0A80               	xorlw	128
  3851   002984  5808               	subwfb	(??_fputc+4)^0,w,c
  3852   002986  B0D8               	btfsc	status,0,c
  3853   002988  EFC8  F014         	goto	u3851
  3854   00298C  EFCA  F014         	goto	u3850
  3855   002990                     u3851:
  3856   002990  EFE2  F014         	goto	l984
  3857   002994                     u3850:
  3858   002994                     l3483:
  3859   002994  5003               	movf	fputc@fp^0,w,c
  3860   002996  6ED9               	movwf	fsr2l,c
  3861   002998  6ADA               	clrf	fsr2h,c
  3862   00299A  0E03               	movlw	3
  3863   00299C  26D9               	addwf	fsr2l,f,c
  3864   00299E  50DF               	movf	indf2,w,c
  3865   0029A0  6E04               	movwf	??_fputc^0,c
  3866   0029A2  5003               	movf	fputc@fp^0,w,c
  3867   0029A4  6ED9               	movwf	fsr2l,c
  3868   0029A6  6ADA               	clrf	fsr2h,c
  3869   0029A8  50DF               	movf	indf2,w,c
  3870   0029AA  2404               	addwf	??_fputc^0,w,c
  3871   0029AC  6ED9               	movwf	fsr2l,c
  3872   0029AE  6ADA               	clrf	fsr2h,c
  3873   0029B0  C001  FFDF         	movff	fputc@c,indf2
  3874   0029B4  5003               	movf	fputc@fp^0,w,c
  3875   0029B6  6ED9               	movwf	fsr2l,c
  3876   0029B8  6ADA               	clrf	fsr2h,c
  3877   0029BA  0E03               	movlw	3
  3878   0029BC  26D9               	addwf	fsr2l,f,c
  3879   0029BE  2ADE               	incf	postinc2,f,c
  3880   0029C0  0E00               	movlw	0
  3881   0029C2  22DD               	addwfc	postdec2,f,c
  3882   0029C4                     l984:
  3883   0029C4  0012               	return		;funcret
  3884   0029C6                     __end_of_fputc:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _putch *****************
  3888 ;; Defined at:
  3889 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  c               1    wreg     unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  c               1    0[COMRAM] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         0       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_fputc
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text14
  3917   003068                     __ptext14:
  3918                           	callstack 0
  3919   003068                     _putch:
  3920                           	callstack 25
  3921   003068  0012               	return		;funcret
  3922   00306A                     __end_of_putch:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _memcpy *****************
  3926 ;; Defined at:
  3927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  d1              2    0[COMRAM] PTR void 
  3930 ;;		 -> dbuf(80), 
  3931 ;;  s1              2    2[COMRAM] PTR const void 
  3932 ;;		 -> dbuf(80), 
  3933 ;;  n               2    4[COMRAM] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3936 ;;		 -> dbuf(80), 
  3937 ;;  d               2    7[COMRAM] PTR unsigned char 
  3938 ;;		 -> dbuf(80), 
  3939 ;;  tmp             1    6[COMRAM] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    0[COMRAM] PTR void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3949 ;;      Params:         6       0       0       0       0       0       0
  3950 ;;      Locals:         5       0       0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0
  3952 ;;      Totals:        11       0       0       0       0       0       0
  3953 ;;Total ram usage:       11 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_efgtoa
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text15
  3963   002D9A                     __ptext15:
  3964                           	callstack 0
  3965   002D9A                     _memcpy:
  3966                           	callstack 25
  3967   002D9A  C003  F00A         	movff	memcpy@s1,memcpy@s
  3968   002D9E  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  3969   002DA2  C001  F008         	movff	memcpy@d1,memcpy@d
  3970   002DA6  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  3971   002DAA  EFE7  F016         	goto	l4151
  3972   002DAE                     l4143:
  3973   002DAE  C00A  FFD9         	movff	memcpy@s,fsr2l
  3974   002DB2  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  3975   002DB6  50DF               	movf	indf2,w,c
  3976   002DB8  6E07               	movwf	memcpy@tmp^0,c
  3977   002DBA  4A0A               	infsnz	memcpy@s^0,f,c
  3978   002DBC  2A0B               	incf	(memcpy@s+1)^0,f,c
  3979   002DBE  C008  FFD9         	movff	memcpy@d,fsr2l
  3980   002DC2  C009  FFDA         	movff	memcpy@d+1,fsr2h
  3981   002DC6  C007  FFDF         	movff	memcpy@tmp,indf2
  3982   002DCA  4A08               	infsnz	memcpy@d^0,f,c
  3983   002DCC  2A09               	incf	(memcpy@d+1)^0,f,c
  3984   002DCE                     l4151:
  3985   002DCE  0605               	decf	memcpy@n^0,f,c
  3986   002DD0  A0D8               	btfss	status,0,c
  3987   002DD2  0606               	decf	(memcpy@n+1)^0,f,c
  3988   002DD4  2805               	incf	memcpy@n^0,w,c
  3989   002DD6  E106               	bnz	u5051
  3990   002DD8  2806               	incf	(memcpy@n+1)^0,w,c
  3991   002DDA  A4D8               	btfss	status,2,c
  3992   002DDC  EFF2  F016         	goto	u5051
  3993   002DE0  EFF4  F016         	goto	u5050
  3994   002DE4                     u5051:
  3995   002DE4  EFD7  F016         	goto	l4143
  3996   002DE8                     u5050:
  3997   002DE8  0012               	return		;funcret
  3998   002DEA                     __end_of_memcpy:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _labs *****************
  4002 ;; Defined at:
  4003 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  a               4    0[COMRAM] long 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  4    0[COMRAM] long 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4017 ;;      Params:         4       0       0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0
  4019 ;;      Temps:          4       0       0       0       0       0       0
  4020 ;;      Totals:         8       0       0       0       0       0       0
  4021 ;;Total ram usage:        8 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_efgtoa
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text16
  4031   002D44                     __ptext16:
  4032                           	callstack 0
  4033   002D44                     _labs:
  4034                           	callstack 25
  4035   002D44  BE04               	btfsc	(labs@a+3)^0,7,c
  4036   002D46  EFA7  F016         	goto	u4941
  4037   002D4A  EFA9  F016         	goto	u4940
  4038   002D4E                     u4941:
  4039   002D4E  EFB3  F016         	goto	l4109
  4040   002D52                     u4940:
  4041   002D52  C001  F001         	movff	labs@a,?_labs
  4042   002D56  C002  F002         	movff	labs@a+1,?_labs+1
  4043   002D5A  C003  F003         	movff	labs@a+2,?_labs+2
  4044   002D5E  C004  F004         	movff	labs@a+3,?_labs+3
  4045   002D62  EFCC  F016         	goto	l966
  4046   002D66                     l4109:
  4047   002D66  C001  F005         	movff	labs@a,??_labs
  4048   002D6A  C002  F006         	movff	labs@a+1,??_labs+1
  4049   002D6E  C003  F007         	movff	labs@a+2,??_labs+2
  4050   002D72  C004  F008         	movff	labs@a+3,??_labs+3
  4051   002D76  1E05               	comf	??_labs^0,f,c
  4052   002D78  1E06               	comf	(??_labs+1)^0,f,c
  4053   002D7A  1E07               	comf	(??_labs+2)^0,f,c
  4054   002D7C  1E08               	comf	(??_labs+3)^0,f,c
  4055   002D7E  2A05               	incf	??_labs^0,f,c
  4056   002D80  0E00               	movlw	0
  4057   002D82  2206               	addwfc	(??_labs+1)^0,f,c
  4058   002D84  2207               	addwfc	(??_labs+2)^0,f,c
  4059   002D86  2208               	addwfc	(??_labs+3)^0,f,c
  4060   002D88  C005  F001         	movff	??_labs,?_labs
  4061   002D8C  C006  F002         	movff	??_labs+1,?_labs+1
  4062   002D90  C007  F003         	movff	??_labs+2,?_labs+2
  4063   002D94  C008  F004         	movff	??_labs+3,?_labs+3
  4064   002D98                     l966:
  4065   002D98  0012               	return		;funcret
  4066   002D9A                     __end_of_labs:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _floorf *****************
  4070 ;; Defined at:
  4071 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  x               4   64[COMRAM] float 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  u               4   80[COMRAM] struct .
  4076 ;;  m               4   74[COMRAM] unsigned long 
  4077 ;;  e               2   78[COMRAM] int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  4   64[COMRAM] float 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         4       0       0       0       0       0       0
  4088 ;;      Locals:        10       0       0       0       0       0       0
  4089 ;;      Temps:          6       0       0       0       0       0       0
  4090 ;;      Totals:        20       0       0       0       0       0       0
  4091 ;;Total ram usage:       20 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_efgtoa
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text17
  4101   001F38                     __ptext17:
  4102                           	callstack 0
  4103   001F38                     _floorf:
  4104                           	callstack 25
  4105   001F38  C0C2  F051         	movff	floorf@F521,floorf@u
  4106   001F3C  C0C3  F052         	movff	floorf@F521+1,floorf@u+1
  4107   001F40  C0C4  F053         	movff	floorf@F521+2,floorf@u+2
  4108   001F44  C0C5  F054         	movff	floorf@F521+3,floorf@u+3
  4109   001F48  C041  F051         	movff	floorf@x,floorf@u
  4110   001F4C  C042  F052         	movff	floorf@x+1,floorf@u+1
  4111   001F50  C043  F053         	movff	floorf@x+2,floorf@u+2
  4112   001F54  C044  F054         	movff	floorf@x+3,floorf@u+3
  4113   001F58  0E81               	movlw	129
  4114   001F5A  6E45               	movwf	??_floorf^0,c
  4115   001F5C  0EFF               	movlw	255
  4116   001F5E  6E46               	movwf	(??_floorf+1)^0,c
  4117   001F60  C051  F047         	movff	floorf@u,??_floorf+2
  4118   001F64  C052  F048         	movff	floorf@u+1,??_floorf+3
  4119   001F68  C053  F049         	movff	floorf@u+2,??_floorf+4
  4120   001F6C  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4121   001F70  0E18               	movlw	24
  4122   001F72  EFC0  F00F         	goto	u4950
  4123   001F76                     u4955:
  4124   001F76  90D8               	bcf	status,0,c
  4125   001F78  324A               	rrcf	(??_floorf+5)^0,f,c
  4126   001F7A  3249               	rrcf	(??_floorf+4)^0,f,c
  4127   001F7C  3248               	rrcf	(??_floorf+3)^0,f,c
  4128   001F7E  3247               	rrcf	(??_floorf+2)^0,f,c
  4129   001F80                     u4950:
  4130   001F80  2EE8               	decfsz	wreg,f,c
  4131   001F82  EFBB  F00F         	goto	u4955
  4132   001F86  5047               	movf	(??_floorf+2)^0,w,c
  4133   001F88  2445               	addwf	??_floorf^0,w,c
  4134   001F8A  6E4F               	movwf	floorf@e^0,c
  4135   001F8C  0E00               	movlw	0
  4136   001F8E  2046               	addwfc	(??_floorf+1)^0,w,c
  4137   001F90  6E50               	movwf	(floorf@e+1)^0,c
  4138   001F92  BE50               	btfsc	(floorf@e+1)^0,7,c
  4139   001F94  EFD5  F00F         	goto	u4961
  4140   001F98  5050               	movf	(floorf@e+1)^0,w,c
  4141   001F9A  E109               	bnz	u4960
  4142   001F9C  0E17               	movlw	23
  4143   001F9E  5C4F               	subwf	floorf@e^0,w,c
  4144   001FA0  A0D8               	btfss	status,0,c
  4145   001FA2  EFD5  F00F         	goto	u4961
  4146   001FA6  EFD7  F00F         	goto	u4960
  4147   001FAA                     u4961:
  4148   001FAA  EFE1  F00F         	goto	l4119
  4149   001FAE                     u4960:
  4150   001FAE                     l4117:
  4151   001FAE  C041  F041         	movff	floorf@x,?_floorf
  4152   001FB2  C042  F042         	movff	floorf@x+1,?_floorf+1
  4153   001FB6  C043  F043         	movff	floorf@x+2,?_floorf+2
  4154   001FBA  C044  F044         	movff	floorf@x+3,?_floorf+3
  4155   001FBE  EFA4  F010         	goto	l952
  4156   001FC2                     l4119:
  4157   001FC2  BE50               	btfsc	(floorf@e+1)^0,7,c
  4158   001FC4  EFE6  F00F         	goto	u4971
  4159   001FC8  EFE8  F00F         	goto	u4970
  4160   001FCC                     u4971:
  4161   001FCC  EF58  F010         	goto	l4129
  4162   001FD0                     u4970:
  4163   001FD0  C04F  F045         	movff	floorf@e,??_floorf
  4164   001FD4  0EFF               	movlw	255
  4165   001FD6  6E46               	movwf	(??_floorf+1)^0,c
  4166   001FD8  0EFF               	movlw	255
  4167   001FDA  6E47               	movwf	(??_floorf+2)^0,c
  4168   001FDC  0E7F               	movlw	127
  4169   001FDE  6E48               	movwf	(??_floorf+3)^0,c
  4170   001FE0  0E00               	movlw	0
  4171   001FE2  6E49               	movwf	(??_floorf+4)^0,c
  4172   001FE4                     u4985:
  4173   001FE4  6645               	tstfsz	??_floorf^0,c
  4174   001FE6  EFF7  F00F         	goto	u4986
  4175   001FEA  EFFF  F00F         	goto	u4987
  4176   001FEE                     u4986:
  4177   001FEE  3449               	rlcf	(??_floorf+4)^0,w,c
  4178   001FF0  3249               	rrcf	(??_floorf+4)^0,f,c
  4179   001FF2  3248               	rrcf	(??_floorf+3)^0,f,c
  4180   001FF4  3247               	rrcf	(??_floorf+2)^0,f,c
  4181   001FF6  3246               	rrcf	(??_floorf+1)^0,f,c
  4182   001FF8  2E45               	decfsz	??_floorf^0,f,c
  4183   001FFA  EFF2  F00F         	goto	u4985
  4184   001FFE                     u4987:
  4185   001FFE  C046  F04B         	movff	??_floorf+1,floorf@m
  4186   002002  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4187   002006  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4188   00200A  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4189   00200E  504B               	movf	floorf@m^0,w,c
  4190   002010  1451               	andwf	floorf@u^0,w,c
  4191   002012  6E45               	movwf	??_floorf^0,c
  4192   002014  504C               	movf	(floorf@m+1)^0,w,c
  4193   002016  1452               	andwf	(floorf@u+1)^0,w,c
  4194   002018  6E46               	movwf	(??_floorf+1)^0,c
  4195   00201A  504D               	movf	(floorf@m+2)^0,w,c
  4196   00201C  1453               	andwf	(floorf@u+2)^0,w,c
  4197   00201E  6E47               	movwf	(??_floorf+2)^0,c
  4198   002020  504E               	movf	(floorf@m+3)^0,w,c
  4199   002022  1454               	andwf	(floorf@u+3)^0,w,c
  4200   002024  6E48               	movwf	(??_floorf+3)^0,c
  4201   002026  5045               	movf	??_floorf^0,w,c
  4202   002028  1046               	iorwf	(??_floorf+1)^0,w,c
  4203   00202A  1047               	iorwf	(??_floorf+2)^0,w,c
  4204   00202C  1048               	iorwf	(??_floorf+3)^0,w,c
  4205   00202E  A4D8               	btfss	status,2,c
  4206   002030  EF1C  F010         	goto	u4991
  4207   002034  EF1E  F010         	goto	u4990
  4208   002038                     u4991:
  4209   002038  EF20  F010         	goto	l4125
  4210   00203C                     u4990:
  4211   00203C  EFD7  F00F         	goto	l4117
  4212   002040                     l4125:
  4213   002040  C051  F045         	movff	floorf@u,??_floorf
  4214   002044  C052  F046         	movff	floorf@u+1,??_floorf+1
  4215   002048  C053  F047         	movff	floorf@u+2,??_floorf+2
  4216   00204C  C054  F048         	movff	floorf@u+3,??_floorf+3
  4217   002050  0E20               	movlw	32
  4218   002052  EF30  F010         	goto	u5000
  4219   002056                     u5005:
  4220   002056  90D8               	bcf	status,0,c
  4221   002058  3248               	rrcf	(??_floorf+3)^0,f,c
  4222   00205A  3247               	rrcf	(??_floorf+2)^0,f,c
  4223   00205C  3246               	rrcf	(??_floorf+1)^0,f,c
  4224   00205E  3245               	rrcf	??_floorf^0,f,c
  4225   002060                     u5000:
  4226   002060  2EE8               	decfsz	wreg,f,c
  4227   002062  EF2B  F010         	goto	u5005
  4228   002066  5045               	movf	??_floorf^0,w,c
  4229   002068  1046               	iorwf	(??_floorf+1)^0,w,c
  4230   00206A  1047               	iorwf	(??_floorf+2)^0,w,c
  4231   00206C  1048               	iorwf	(??_floorf+3)^0,w,c
  4232   00206E  B4D8               	btfsc	status,2,c
  4233   002070  EF3C  F010         	goto	u5011
  4234   002074  EF3E  F010         	goto	u5010
  4235   002078                     u5011:
  4236   002078  EF46  F010         	goto	l955
  4237   00207C                     u5010:
  4238   00207C  504B               	movf	floorf@m^0,w,c
  4239   00207E  2651               	addwf	floorf@u^0,f,c
  4240   002080  504C               	movf	(floorf@m+1)^0,w,c
  4241   002082  2252               	addwfc	(floorf@u+1)^0,f,c
  4242   002084  504D               	movf	(floorf@m+2)^0,w,c
  4243   002086  2253               	addwfc	(floorf@u+2)^0,f,c
  4244   002088  504E               	movf	(floorf@m+3)^0,w,c
  4245   00208A  2254               	addwfc	(floorf@u+3)^0,f,c
  4246   00208C                     l955:
  4247   00208C  1C4B               	comf	floorf@m^0,w,c
  4248   00208E  6E45               	movwf	??_floorf^0,c
  4249   002090  1C4C               	comf	(floorf@m+1)^0,w,c
  4250   002092  6E46               	movwf	(??_floorf+1)^0,c
  4251   002094  1C4D               	comf	(floorf@m+2)^0,w,c
  4252   002096  6E47               	movwf	(??_floorf+2)^0,c
  4253   002098  1C4E               	comf	(floorf@m+3)^0,w,c
  4254   00209A  6E48               	movwf	(??_floorf+3)^0,c
  4255   00209C  5045               	movf	??_floorf^0,w,c
  4256   00209E  1651               	andwf	floorf@u^0,f,c
  4257   0020A0  5046               	movf	(??_floorf+1)^0,w,c
  4258   0020A2  1652               	andwf	(floorf@u+1)^0,f,c
  4259   0020A4  5047               	movf	(??_floorf+2)^0,w,c
  4260   0020A6  1653               	andwf	(floorf@u+2)^0,f,c
  4261   0020A8  5048               	movf	(??_floorf+3)^0,w,c
  4262   0020AA  1654               	andwf	(floorf@u+3)^0,f,c
  4263   0020AC  EF9C  F010         	goto	l4137
  4264   0020B0                     l4129:
  4265   0020B0  C051  F045         	movff	floorf@u,??_floorf
  4266   0020B4  C052  F046         	movff	floorf@u+1,??_floorf+1
  4267   0020B8  C053  F047         	movff	floorf@u+2,??_floorf+2
  4268   0020BC  C054  F048         	movff	floorf@u+3,??_floorf+3
  4269   0020C0  0E20               	movlw	32
  4270   0020C2  EF68  F010         	goto	u5020
  4271   0020C6                     u5025:
  4272   0020C6  90D8               	bcf	status,0,c
  4273   0020C8  3248               	rrcf	(??_floorf+3)^0,f,c
  4274   0020CA  3247               	rrcf	(??_floorf+2)^0,f,c
  4275   0020CC  3246               	rrcf	(??_floorf+1)^0,f,c
  4276   0020CE  3245               	rrcf	??_floorf^0,f,c
  4277   0020D0                     u5020:
  4278   0020D0  2EE8               	decfsz	wreg,f,c
  4279   0020D2  EF63  F010         	goto	u5025
  4280   0020D6  5045               	movf	??_floorf^0,w,c
  4281   0020D8  1046               	iorwf	(??_floorf+1)^0,w,c
  4282   0020DA  1047               	iorwf	(??_floorf+2)^0,w,c
  4283   0020DC  1048               	iorwf	(??_floorf+3)^0,w,c
  4284   0020DE  A4D8               	btfss	status,2,c
  4285   0020E0  EF74  F010         	goto	u5031
  4286   0020E4  EF76  F010         	goto	u5030
  4287   0020E8                     u5031:
  4288   0020E8  EF80  F010         	goto	l4133
  4289   0020EC                     u5030:
  4290   0020EC  0E00               	movlw	0
  4291   0020EE  6E51               	movwf	floorf@u^0,c
  4292   0020F0  0E00               	movlw	0
  4293   0020F2  6E52               	movwf	(floorf@u+1)^0,c
  4294   0020F4  0E00               	movlw	0
  4295   0020F6  6E53               	movwf	(floorf@u+2)^0,c
  4296   0020F8  0E00               	movlw	0
  4297   0020FA  6E54               	movwf	(floorf@u+3)^0,c
  4298   0020FC  EF9C  F010         	goto	l4137
  4299   002100                     l4133:
  4300   002100  90D8               	bcf	status,0,c
  4301   002102  3451               	rlcf	floorf@u^0,w,c
  4302   002104  6E45               	movwf	??_floorf^0,c
  4303   002106  3452               	rlcf	(floorf@u+1)^0,w,c
  4304   002108  6E46               	movwf	(??_floorf+1)^0,c
  4305   00210A  3453               	rlcf	(floorf@u+2)^0,w,c
  4306   00210C  6E47               	movwf	(??_floorf+2)^0,c
  4307   00210E  3454               	rlcf	(floorf@u+3)^0,w,c
  4308   002110  6E48               	movwf	(??_floorf+3)^0,c
  4309   002112  5045               	movf	??_floorf^0,w,c
  4310   002114  1046               	iorwf	(??_floorf+1)^0,w,c
  4311   002116  1047               	iorwf	(??_floorf+2)^0,w,c
  4312   002118  1048               	iorwf	(??_floorf+3)^0,w,c
  4313   00211A  B4D8               	btfsc	status,2,c
  4314   00211C  EF92  F010         	goto	u5041
  4315   002120  EF94  F010         	goto	u5040
  4316   002124                     u5041:
  4317   002124  EF9C  F010         	goto	l4137
  4318   002128                     u5040:
  4319   002128  0E00               	movlw	0
  4320   00212A  6E51               	movwf	floorf@u^0,c
  4321   00212C  0E00               	movlw	0
  4322   00212E  6E52               	movwf	(floorf@u+1)^0,c
  4323   002130  0E80               	movlw	128
  4324   002132  6E53               	movwf	(floorf@u+2)^0,c
  4325   002134  0EBF               	movlw	191
  4326   002136  6E54               	movwf	(floorf@u+3)^0,c
  4327   002138                     l4137:
  4328   002138  C051  F041         	movff	floorf@u,?_floorf
  4329   00213C  C052  F042         	movff	floorf@u+1,?_floorf+1
  4330   002140  C053  F043         	movff	floorf@u+2,?_floorf+2
  4331   002144  C054  F044         	movff	floorf@u+3,?_floorf+3
  4332   002148                     l952:
  4333   002148  0012               	return		;funcret
  4334   00214A                     __end_of_floorf:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function ___fpclassifyf *****************
  4338 ;; Defined at:
  4339 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  x               4    0[COMRAM] float 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  u               4   10[COMRAM] struct .
  4344 ;;  e               2    8[COMRAM] int 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    0[COMRAM] int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4354 ;;      Params:         4       0       0       0       0       0       0
  4355 ;;      Locals:         6       0       0       0       0       0       0
  4356 ;;      Temps:          4       0       0       0       0       0       0
  4357 ;;      Totals:        14       0       0       0       0       0       0
  4358 ;;Total ram usage:       14 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_efgtoa
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text18
  4368   002666                     __ptext18:
  4369                           	callstack 0
  4370   002666                     ___fpclassifyf:
  4371                           	callstack 25
  4372   002666  C0C6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4373   00266A  C0C7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4374   00266E  C0C8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4375   002672  C0C9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4376   002676  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4377   00267A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4378   00267E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4379   002682  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4380   002686  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4381   00268A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4382   00268E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4383   002692  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4384   002696  0E18               	movlw	24
  4385   002698  EF53  F013         	goto	u4860
  4386   00269C                     u4865:
  4387   00269C  90D8               	bcf	status,0,c
  4388   00269E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4389   0026A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4390   0026A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4391   0026A4  3205               	rrcf	??___fpclassifyf^0,f,c
  4392   0026A6                     u4860:
  4393   0026A6  2EE8               	decfsz	wreg,f,c
  4394   0026A8  EF4E  F013         	goto	u4865
  4395   0026AC  5005               	movf	??___fpclassifyf^0,w,c
  4396   0026AE  6E09               	movwf	___fpclassifyf@e^0,c
  4397   0026B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4398   0026B2  5009               	movf	___fpclassifyf@e^0,w,c
  4399   0026B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4400   0026B6  A4D8               	btfss	status,2,c
  4401   0026B8  EF60  F013         	goto	u4871
  4402   0026BC  EF62  F013         	goto	u4870
  4403   0026C0                     u4871:
  4404   0026C0  EF82  F013         	goto	l4091
  4405   0026C4                     u4870:
  4406   0026C4  90D8               	bcf	status,0,c
  4407   0026C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4408   0026C8  6E05               	movwf	??___fpclassifyf^0,c
  4409   0026CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4410   0026CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4411   0026CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4412   0026D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4413   0026D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4414   0026D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4415   0026D6  5005               	movf	??___fpclassifyf^0,w,c
  4416   0026D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4417   0026DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4418   0026DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4419   0026DE  A4D8               	btfss	status,2,c
  4420   0026E0  EF74  F013         	goto	u4881
  4421   0026E4  EF76  F013         	goto	u4880
  4422   0026E8                     u4881:
  4423   0026E8  EF7C  F013         	goto	l4087
  4424   0026EC                     u4880:
  4425   0026EC  0E00               	movlw	0
  4426   0026EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4427   0026F0  0E02               	movlw	2
  4428   0026F2  6E01               	movwf	?___fpclassifyf^0,c
  4429   0026F4  EFB1  F013         	goto	l945
  4430   0026F8                     l4087:
  4431   0026F8  0E00               	movlw	0
  4432   0026FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4433   0026FC  0E03               	movlw	3
  4434   0026FE  6E01               	movwf	?___fpclassifyf^0,c
  4435   002700  EFB1  F013         	goto	l945
  4436   002704                     l4091:
  4437   002704  2809               	incf	___fpclassifyf@e^0,w,c
  4438   002706  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4439   002708  A4D8               	btfss	status,2,c
  4440   00270A  EF89  F013         	goto	u4891
  4441   00270E  EF8B  F013         	goto	u4890
  4442   002712                     u4891:
  4443   002712  EFAD  F013         	goto	l4097
  4444   002716                     u4890:
  4445   002716  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4446   00271A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4447   00271E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4448   002722  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4449   002726  0E09               	movlw	9
  4450   002728                     u4905:
  4451   002728  90D8               	bcf	status,0,c
  4452   00272A  3605               	rlcf	??___fpclassifyf^0,f,c
  4453   00272C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4454   00272E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4455   002730  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4456   002732  2EE8               	decfsz	wreg,f,c
  4457   002734  EF94  F013         	goto	u4905
  4458   002738  5005               	movf	??___fpclassifyf^0,w,c
  4459   00273A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4460   00273C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4461   00273E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4462   002740  B4D8               	btfsc	status,2,c
  4463   002742  EFA5  F013         	goto	u4911
  4464   002746  EFA8  F013         	goto	u4910
  4465   00274A                     u4911:
  4466   00274A  0E01               	movlw	1
  4467   00274C  EFA9  F013         	goto	u4920
  4468   002750                     u4910:
  4469   002750  0E00               	movlw	0
  4470   002752                     u4920:
  4471   002752  6E01               	movwf	?___fpclassifyf^0,c
  4472   002754  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4473   002756  EFB1  F013         	goto	l945
  4474   00275A                     l4097:
  4475   00275A  0E00               	movlw	0
  4476   00275C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4477   00275E  0E04               	movlw	4
  4478   002760  6E01               	movwf	?___fpclassifyf^0,c
  4479   002762                     l945:
  4480   002762  0012               	return		;funcret
  4481   002764                     __end_of___fpclassifyf:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function ___fltol *****************
  4485 ;; Defined at:
  4486 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  f1              4    0[COMRAM] int 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  exp1            1    9[COMRAM] unsigned char 
  4491 ;;  sign1           1    8[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4    0[COMRAM] long 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4501 ;;      Params:         4       0       0       0       0       0       0
  4502 ;;      Locals:         2       0       0       0       0       0       0
  4503 ;;      Temps:          4       0       0       0       0       0       0
  4504 ;;      Totals:        10       0       0       0       0       0       0
  4505 ;;Total ram usage:       10 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_efgtoa
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text19
  4515   00245C                     __ptext19:
  4516                           	callstack 0
  4517   00245C                     ___fltol:
  4518                           	callstack 25
  4519   00245C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4520   00245E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4521   002460  6E0A               	movwf	___fltol@exp1^0,c
  4522   002462  500A               	movf	___fltol@exp1^0,w,c
  4523   002464  A4D8               	btfss	status,2,c
  4524   002466  EF37  F012         	goto	u4771
  4525   00246A  EF39  F012         	goto	u4770
  4526   00246E                     u4771:
  4527   00246E  EF43  F012         	goto	l4029
  4528   002472                     u4770:
  4529   002472                     l4025:
  4530   002472  0E00               	movlw	0
  4531   002474  6E01               	movwf	?___fltol^0,c
  4532   002476  0E00               	movlw	0
  4533   002478  6E02               	movwf	(?___fltol+1)^0,c
  4534   00247A  0E00               	movlw	0
  4535   00247C  6E03               	movwf	(?___fltol+2)^0,c
  4536   00247E  0E00               	movlw	0
  4537   002480  6E04               	movwf	(?___fltol+3)^0,c
  4538   002482  EFB0  F012         	goto	l423
  4539   002486                     l4029:
  4540   002486  C001  F005         	movff	___fltol@f1,??___fltol
  4541   00248A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4542   00248E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4543   002492  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4544   002496  0E20               	movlw	32
  4545   002498  EF53  F012         	goto	u4780
  4546   00249C                     u4785:
  4547   00249C  90D8               	bcf	status,0,c
  4548   00249E  3208               	rrcf	(??___fltol+3)^0,f,c
  4549   0024A0  3207               	rrcf	(??___fltol+2)^0,f,c
  4550   0024A2  3206               	rrcf	(??___fltol+1)^0,f,c
  4551   0024A4  3205               	rrcf	??___fltol^0,f,c
  4552   0024A6                     u4780:
  4553   0024A6  2EE8               	decfsz	wreg,f,c
  4554   0024A8  EF4E  F012         	goto	u4785
  4555   0024AC  5005               	movf	??___fltol^0,w,c
  4556   0024AE  6E09               	movwf	___fltol@sign1^0,c
  4557   0024B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4558   0024B2  0EFF               	movlw	255
  4559   0024B4  1601               	andwf	___fltol@f1^0,f,c
  4560   0024B6  0EFF               	movlw	255
  4561   0024B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4562   0024BA  0EFF               	movlw	255
  4563   0024BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4564   0024BE  0E00               	movlw	0
  4565   0024C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4566   0024C2  0E96               	movlw	150
  4567   0024C4  5E0A               	subwf	___fltol@exp1^0,f,c
  4568   0024C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4569   0024C8  EF6A  F012         	goto	u4790
  4570   0024CC  EF68  F012         	goto	u4791
  4571   0024D0                     u4791:
  4572   0024D0  EF80  F012         	goto	l4049
  4573   0024D4                     u4790:
  4574   0024D4  500A               	movf	___fltol@exp1^0,w,c
  4575   0024D6  0A80               	xorlw	128
  4576   0024D8  0F97               	addlw	151
  4577   0024DA  B0D8               	btfsc	status,0,c
  4578   0024DC  EF72  F012         	goto	u4801
  4579   0024E0  EF74  F012         	goto	u4800
  4580   0024E4                     u4801:
  4581   0024E4  EF76  F012         	goto	l4045
  4582   0024E8                     u4800:
  4583   0024E8  EF39  F012         	goto	l4025
  4584   0024EC                     l4045:
  4585   0024EC  90D8               	bcf	status,0,c
  4586   0024EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4587   0024F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4588   0024F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4589   0024F4  3201               	rrcf	___fltol@f1^0,f,c
  4590   0024F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4591   0024F8  EF76  F012         	goto	l4045
  4592   0024FC  EF98  F012         	goto	l4059
  4593   002500                     l4049:
  4594   002500  0E1F               	movlw	31
  4595   002502  640A               	cpfsgt	___fltol@exp1^0,c
  4596   002504  EF86  F012         	goto	u4811
  4597   002508  EF88  F012         	goto	u4810
  4598   00250C                     u4811:
  4599   00250C  EF90  F012         	goto	l4057
  4600   002510                     u4810:
  4601   002510  EF39  F012         	goto	l4025
  4602   002514                     l4055:
  4603   002514  90D8               	bcf	status,0,c
  4604   002516  3601               	rlcf	___fltol@f1^0,f,c
  4605   002518  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4606   00251A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4607   00251C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4608   00251E  060A               	decf	___fltol@exp1^0,f,c
  4609   002520                     l4057:
  4610   002520  500A               	movf	___fltol@exp1^0,w,c
  4611   002522  A4D8               	btfss	status,2,c
  4612   002524  EF96  F012         	goto	u4821
  4613   002528  EF98  F012         	goto	u4820
  4614   00252C                     u4821:
  4615   00252C  EF8A  F012         	goto	l4055
  4616   002530                     u4820:
  4617   002530                     l4059:
  4618   002530  5009               	movf	___fltol@sign1^0,w,c
  4619   002532  B4D8               	btfsc	status,2,c
  4620   002534  EF9E  F012         	goto	u4831
  4621   002538  EFA0  F012         	goto	u4830
  4622   00253C                     u4831:
  4623   00253C  EFA8  F012         	goto	l4063
  4624   002540                     u4830:
  4625   002540  1E04               	comf	(___fltol@f1+3)^0,f,c
  4626   002542  1E03               	comf	(___fltol@f1+2)^0,f,c
  4627   002544  1E02               	comf	(___fltol@f1+1)^0,f,c
  4628   002546  6C01               	negf	___fltol@f1^0,c
  4629   002548  0E00               	movlw	0
  4630   00254A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4631   00254C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4632   00254E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4633   002550                     l4063:
  4634   002550  C001  F001         	movff	___fltol@f1,?___fltol
  4635   002554  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4636   002558  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4637   00255C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4638   002560                     l423:
  4639   002560  0012               	return		;funcret
  4640   002562                     __end_of___fltol:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function ___flsub *****************
  4644 ;; Defined at:
  4645 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  b               4   39[COMRAM] long 
  4648 ;;  a               4   43[COMRAM] long 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  4   39[COMRAM] long 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4660 ;;      Params:         8       0       0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0
  4663 ;;      Totals:         8       0       0       0       0       0       0
  4664 ;;Total ram usage:        8 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 1
  4667 ;; This function calls:
  4668 ;;		___fladd
  4669 ;; This function is called by:
  4670 ;;		_efgtoa
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text20
  4675   002DEA                     __ptext20:
  4676                           	callstack 0
  4677   002DEA                     ___flsub:
  4678                           	callstack 24
  4679   002DEA  0E00               	movlw	0
  4680   002DEC  1A2C               	xorwf	___flsub@a^0,f,c
  4681   002DEE  0E00               	movlw	0
  4682   002DF0  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4683   002DF2  0E00               	movlw	0
  4684   002DF4  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4685   002DF6  0E80               	movlw	128
  4686   002DF8  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4687   002DFA  C028  F001         	movff	___flsub@b,___fladd@b
  4688   002DFE  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4689   002E02  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4690   002E06  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4691   002E0A  C02C  F005         	movff	___flsub@a,___fladd@a
  4692   002E0E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4693   002E12  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4694   002E16  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4695   002E1A  EC4D  F008         	call	___fladd	;wreg free
  4696   002E1E  C001  F028         	movff	?___fladd,?___flsub
  4697   002E22  C002  F029         	movff	?___fladd+1,?___flsub+1
  4698   002E26  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4699   002E2A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4700   002E2E  0012               	return		;funcret
  4701   002E30                     __end_of___flsub:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function ___fladd *****************
  4705 ;; Defined at:
  4706 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  b               4    0[COMRAM] long 
  4709 ;;  a               4    4[COMRAM] long 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  grs             1   15[COMRAM] unsigned char 
  4712 ;;  bexp            1   14[COMRAM] unsigned char 
  4713 ;;  aexp            1   13[COMRAM] unsigned char 
  4714 ;;  signs           1   12[COMRAM] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  4    0[COMRAM] unsigned char 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4724 ;;      Params:         8       0       0       0       0       0       0
  4725 ;;      Locals:         4       0       0       0       0       0       0
  4726 ;;      Temps:          4       0       0       0       0       0       0
  4727 ;;      Totals:        16       0       0       0       0       0       0
  4728 ;;Total ram usage:       16 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		___flsub
  4734 ;;		_efgtoa
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text21
  4739   00109A                     __ptext21:
  4740                           	callstack 0
  4741   00109A                     ___fladd:
  4742                           	callstack 24
  4743   00109A  5004               	movf	(___fladd@b+3)^0,w,c
  4744   00109C  0B80               	andlw	128
  4745   00109E  6E0D               	movwf	___fladd@signs^0,c
  4746   0010A0  5004               	movf	(___fladd@b+3)^0,w,c
  4747   0010A2  2404               	addwf	(___fladd@b+3)^0,w,c
  4748   0010A4  6E0F               	movwf	___fladd@bexp^0,c
  4749   0010A6  AE03               	btfss	(___fladd@b+2)^0,7,c
  4750   0010A8  EF58  F008         	goto	u3861
  4751   0010AC  EF5A  F008         	goto	u3860
  4752   0010B0                     u3861:
  4753   0010B0  EF5B  F008         	goto	l3493
  4754   0010B4                     u3860:
  4755   0010B4  800F               	bsf	___fladd@bexp^0,0,c
  4756   0010B6                     l3493:
  4757   0010B6  500F               	movf	___fladd@bexp^0,w,c
  4758   0010B8  B4D8               	btfsc	status,2,c
  4759   0010BA  EF61  F008         	goto	u3871
  4760   0010BE  EF63  F008         	goto	u3870
  4761   0010C2                     u3871:
  4762   0010C2  EF78  F008         	goto	l3503
  4763   0010C6                     u3870:
  4764   0010C6  280F               	incf	___fladd@bexp^0,w,c
  4765   0010C8  A4D8               	btfss	status,2,c
  4766   0010CA  EF69  F008         	goto	u3881
  4767   0010CE  EF6B  F008         	goto	u3880
  4768   0010D2                     u3881:
  4769   0010D2  EF73  F008         	goto	l3499
  4770   0010D6                     u3880:
  4771   0010D6  0E00               	movlw	0
  4772   0010D8  6E01               	movwf	___fladd@b^0,c
  4773   0010DA  0E00               	movlw	0
  4774   0010DC  6E02               	movwf	(___fladd@b+1)^0,c
  4775   0010DE  0E00               	movlw	0
  4776   0010E0  6E03               	movwf	(___fladd@b+2)^0,c
  4777   0010E2  0E00               	movlw	0
  4778   0010E4  6E04               	movwf	(___fladd@b+3)^0,c
  4779   0010E6                     l3499:
  4780   0010E6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4781   0010E8  0E00               	movlw	0
  4782   0010EA  6E04               	movwf	(___fladd@b+3)^0,c
  4783   0010EC  EF80  F008         	goto	l3505
  4784   0010F0                     l3503:
  4785   0010F0  0E00               	movlw	0
  4786   0010F2  6E01               	movwf	___fladd@b^0,c
  4787   0010F4  0E00               	movlw	0
  4788   0010F6  6E02               	movwf	(___fladd@b+1)^0,c
  4789   0010F8  0E00               	movlw	0
  4790   0010FA  6E03               	movwf	(___fladd@b+2)^0,c
  4791   0010FC  0E00               	movlw	0
  4792   0010FE  6E04               	movwf	(___fladd@b+3)^0,c
  4793   001100                     l3505:
  4794   001100  5008               	movf	(___fladd@a+3)^0,w,c
  4795   001102  0B80               	andlw	128
  4796   001104  6E0E               	movwf	___fladd@aexp^0,c
  4797   001106  500D               	movf	___fladd@signs^0,w,c
  4798   001108  180E               	xorwf	___fladd@aexp^0,w,c
  4799   00110A  B4D8               	btfsc	status,2,c
  4800   00110C  EF8A  F008         	goto	u3891
  4801   001110  EF8C  F008         	goto	u3890
  4802   001114                     u3891:
  4803   001114  EF8D  F008         	goto	l3511
  4804   001118                     u3890:
  4805   001118  8C0D               	bsf	___fladd@signs^0,6,c
  4806   00111A                     l3511:
  4807   00111A  5008               	movf	(___fladd@a+3)^0,w,c
  4808   00111C  2408               	addwf	(___fladd@a+3)^0,w,c
  4809   00111E  6E0E               	movwf	___fladd@aexp^0,c
  4810   001120  AE07               	btfss	(___fladd@a+2)^0,7,c
  4811   001122  EF95  F008         	goto	u3901
  4812   001126  EF97  F008         	goto	u3900
  4813   00112A                     u3901:
  4814   00112A  EF98  F008         	goto	l3517
  4815   00112E                     u3900:
  4816   00112E  800E               	bsf	___fladd@aexp^0,0,c
  4817   001130                     l3517:
  4818   001130  500E               	movf	___fladd@aexp^0,w,c
  4819   001132  B4D8               	btfsc	status,2,c
  4820   001134  EF9E  F008         	goto	u3911
  4821   001138  EFA0  F008         	goto	u3910
  4822   00113C                     u3911:
  4823   00113C  EFB5  F008         	goto	l3527
  4824   001140                     u3910:
  4825   001140  280E               	incf	___fladd@aexp^0,w,c
  4826   001142  A4D8               	btfss	status,2,c
  4827   001144  EFA6  F008         	goto	u3921
  4828   001148  EFA8  F008         	goto	u3920
  4829   00114C                     u3921:
  4830   00114C  EFB0  F008         	goto	l3523
  4831   001150                     u3920:
  4832   001150  0E00               	movlw	0
  4833   001152  6E05               	movwf	___fladd@a^0,c
  4834   001154  0E00               	movlw	0
  4835   001156  6E06               	movwf	(___fladd@a+1)^0,c
  4836   001158  0E00               	movlw	0
  4837   00115A  6E07               	movwf	(___fladd@a+2)^0,c
  4838   00115C  0E00               	movlw	0
  4839   00115E  6E08               	movwf	(___fladd@a+3)^0,c
  4840   001160                     l3523:
  4841   001160  8E07               	bsf	(___fladd@a+2)^0,7,c
  4842   001162  0E00               	movlw	0
  4843   001164  6E08               	movwf	(___fladd@a+3)^0,c
  4844   001166  EFBD  F008         	goto	l3529
  4845   00116A                     l3527:
  4846   00116A  0E00               	movlw	0
  4847   00116C  6E05               	movwf	___fladd@a^0,c
  4848   00116E  0E00               	movlw	0
  4849   001170  6E06               	movwf	(___fladd@a+1)^0,c
  4850   001172  0E00               	movlw	0
  4851   001174  6E07               	movwf	(___fladd@a+2)^0,c
  4852   001176  0E00               	movlw	0
  4853   001178  6E08               	movwf	(___fladd@a+3)^0,c
  4854   00117A                     l3529:
  4855   00117A  500F               	movf	___fladd@bexp^0,w,c
  4856   00117C  5C0E               	subwf	___fladd@aexp^0,w,c
  4857   00117E  B0D8               	btfsc	status,0,c
  4858   001180  EFC4  F008         	goto	u3931
  4859   001184  EFC6  F008         	goto	u3930
  4860   001188                     u3931:
  4861   001188  EFED  F008         	goto	l3565
  4862   00118C                     u3930:
  4863   00118C  AC0D               	btfss	___fladd@signs^0,6,c
  4864   00118E  EFCB  F008         	goto	u3941
  4865   001192  EFCD  F008         	goto	u3940
  4866   001196                     u3941:
  4867   001196  EFCF  F008         	goto	l3535
  4868   00119A                     u3940:
  4869   00119A  0E80               	movlw	128
  4870   00119C  1A0D               	xorwf	___fladd@signs^0,f,c
  4871   00119E                     l3535:
  4872   00119E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4873   0011A2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4874   0011A6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4875   0011AA  C001  F010         	movff	___fladd@b,___fladd@grs
  4876   0011AE  C005  F001         	movff	___fladd@a,___fladd@b
  4877   0011B2  C010  F005         	movff	___fladd@grs,___fladd@a
  4878   0011B6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4879   0011BA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4880   0011BE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4881   0011C2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4882   0011C6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4883   0011CA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4884   0011CE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4885   0011D2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4886   0011D6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4887   0011DA                     l3565:
  4888   0011DA  0E00               	movlw	0
  4889   0011DC  6E10               	movwf	___fladd@grs^0,c
  4890   0011DE  500F               	movf	___fladd@bexp^0,w,c
  4891   0011E0  C00E  F009         	movff	___fladd@aexp,??___fladd
  4892   0011E4  6A0A               	clrf	(??___fladd+1)^0,c
  4893   0011E6  5E09               	subwf	??___fladd^0,f,c
  4894   0011E8  0E00               	movlw	0
  4895   0011EA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4896   0011EC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4897   0011EE  EF02  F009         	goto	u3951
  4898   0011F2  500A               	movf	(??___fladd+1)^0,w,c
  4899   0011F4  E109               	bnz	u3950
  4900   0011F6  0E1A               	movlw	26
  4901   0011F8  5C09               	subwf	??___fladd^0,w,c
  4902   0011FA  A0D8               	btfss	status,0,c
  4903   0011FC  EF02  F009         	goto	u3951
  4904   001200  EF04  F009         	goto	u3950
  4905   001204                     u3951:
  4906   001204  EF3B  F009         	goto	l655
  4907   001208                     u3950:
  4908   001208  5001               	movf	___fladd@b^0,w,c
  4909   00120A  1002               	iorwf	(___fladd@b+1)^0,w,c
  4910   00120C  1003               	iorwf	(___fladd@b+2)^0,w,c
  4911   00120E  1004               	iorwf	(___fladd@b+3)^0,w,c
  4912   001210  A4D8               	btfss	status,2,c
  4913   001212  EF0D  F009         	goto	u3961
  4914   001216  EF10  F009         	goto	u3960
  4915   00121A                     u3961:
  4916   00121A  0E01               	movlw	1
  4917   00121C  EF11  F009         	goto	u3970
  4918   001220                     u3960:
  4919   001220  0E00               	movlw	0
  4920   001222                     u3970:
  4921   001222  6E10               	movwf	___fladd@grs^0,c
  4922   001224  0E00               	movlw	0
  4923   001226  6E01               	movwf	___fladd@b^0,c
  4924   001228  0E00               	movlw	0
  4925   00122A  6E02               	movwf	(___fladd@b+1)^0,c
  4926   00122C  0E00               	movlw	0
  4927   00122E  6E03               	movwf	(___fladd@b+2)^0,c
  4928   001230  0E00               	movlw	0
  4929   001232  6E04               	movwf	(___fladd@b+3)^0,c
  4930   001234  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4931   001238  EF44  F009         	goto	l654
  4932   00123C                     l656:
  4933   00123C  A010               	btfss	___fladd@grs^0,0,c
  4934   00123E  EF23  F009         	goto	u3981
  4935   001242  EF25  F009         	goto	u3980
  4936   001246                     u3981:
  4937   001246  EF2B  F009         	goto	l3577
  4938   00124A                     u3980:
  4939   00124A  90D8               	bcf	status,0,c
  4940   00124C  3010               	rrcf	___fladd@grs^0,w,c
  4941   00124E  0901               	iorlw	1
  4942   001250  6E10               	movwf	___fladd@grs^0,c
  4943   001252  EF2D  F009         	goto	l3579
  4944   001256                     l3577:
  4945   001256  90D8               	bcf	status,0,c
  4946   001258  3210               	rrcf	___fladd@grs^0,f,c
  4947   00125A                     l3579:
  4948   00125A  A001               	btfss	___fladd@b^0,0,c
  4949   00125C  EF32  F009         	goto	u3991
  4950   001260  EF34  F009         	goto	u3990
  4951   001264                     u3991:
  4952   001264  EF35  F009         	goto	l3583
  4953   001268                     u3990:
  4954   001268  8E10               	bsf	___fladd@grs^0,7,c
  4955   00126A                     l3583:
  4956   00126A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4957   00126C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4958   00126E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4959   001270  3202               	rrcf	(___fladd@b+1)^0,f,c
  4960   001272  3201               	rrcf	___fladd@b^0,f,c
  4961   001274  2A0F               	incf	___fladd@bexp^0,f,c
  4962   001276                     l655:
  4963   001276  500E               	movf	___fladd@aexp^0,w,c
  4964   001278  5C0F               	subwf	___fladd@bexp^0,w,c
  4965   00127A  A0D8               	btfss	status,0,c
  4966   00127C  EF42  F009         	goto	u4001
  4967   001280  EF44  F009         	goto	u4000
  4968   001284                     u4001:
  4969   001284  EF1E  F009         	goto	l656
  4970   001288                     u4000:
  4971   001288                     l654:
  4972   001288  BC0D               	btfsc	___fladd@signs^0,6,c
  4973   00128A  EF49  F009         	goto	u4011
  4974   00128E  EF4B  F009         	goto	u4010
  4975   001292                     u4011:
  4976   001292  EF8B  F009         	goto	l3611
  4977   001296                     u4010:
  4978   001296  500F               	movf	___fladd@bexp^0,w,c
  4979   001298  A4D8               	btfss	status,2,c
  4980   00129A  EF51  F009         	goto	u4021
  4981   00129E  EF53  F009         	goto	u4020
  4982   0012A2                     u4021:
  4983   0012A2  EF5D  F009         	goto	l3593
  4984   0012A6                     u4020:
  4985   0012A6  0E00               	movlw	0
  4986   0012A8  6E01               	movwf	?___fladd^0,c
  4987   0012AA  0E00               	movlw	0
  4988   0012AC  6E02               	movwf	(?___fladd+1)^0,c
  4989   0012AE  0E00               	movlw	0
  4990   0012B0  6E03               	movwf	(?___fladd+2)^0,c
  4991   0012B2  0E00               	movlw	0
  4992   0012B4  6E04               	movwf	(?___fladd+3)^0,c
  4993   0012B6  EFAC  F00A         	goto	l663
  4994   0012BA                     l3593:
  4995   0012BA  5005               	movf	___fladd@a^0,w,c
  4996   0012BC  2601               	addwf	___fladd@b^0,f,c
  4997   0012BE  5006               	movf	(___fladd@a+1)^0,w,c
  4998   0012C0  2202               	addwfc	(___fladd@b+1)^0,f,c
  4999   0012C2  5007               	movf	(___fladd@a+2)^0,w,c
  5000   0012C4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5001   0012C6  5008               	movf	(___fladd@a+3)^0,w,c
  5002   0012C8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5003   0012CA  A004               	btfss	(___fladd@b+3)^0,0,c
  5004   0012CC  EF6A  F009         	goto	u4031
  5005   0012D0  EF6C  F009         	goto	u4030
  5006   0012D4                     u4031:
  5007   0012D4  EF18  F00A         	goto	l3647
  5008   0012D8                     u4030:
  5009   0012D8  A010               	btfss	___fladd@grs^0,0,c
  5010   0012DA  EF71  F009         	goto	u4041
  5011   0012DE  EF73  F009         	goto	u4040
  5012   0012E2                     u4041:
  5013   0012E2  EF79  F009         	goto	l3601
  5014   0012E6                     u4040:
  5015   0012E6  90D8               	bcf	status,0,c
  5016   0012E8  3010               	rrcf	___fladd@grs^0,w,c
  5017   0012EA  0901               	iorlw	1
  5018   0012EC  6E10               	movwf	___fladd@grs^0,c
  5019   0012EE  EF7B  F009         	goto	l3603
  5020   0012F2                     l3601:
  5021   0012F2  90D8               	bcf	status,0,c
  5022   0012F4  3210               	rrcf	___fladd@grs^0,f,c
  5023   0012F6                     l3603:
  5024   0012F6  A001               	btfss	___fladd@b^0,0,c
  5025   0012F8  EF80  F009         	goto	u4051
  5026   0012FC  EF82  F009         	goto	u4050
  5027   001300                     u4051:
  5028   001300  EF83  F009         	goto	l3607
  5029   001304                     u4050:
  5030   001304  8E10               	bsf	___fladd@grs^0,7,c
  5031   001306                     l3607:
  5032   001306  3404               	rlcf	(___fladd@b+3)^0,w,c
  5033   001308  3204               	rrcf	(___fladd@b+3)^0,f,c
  5034   00130A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5035   00130C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5036   00130E  3201               	rrcf	___fladd@b^0,f,c
  5037   001310  2A0F               	incf	___fladd@bexp^0,f,c
  5038   001312  EF18  F00A         	goto	l3647
  5039   001316                     l3611:
  5040   001316  5005               	movf	___fladd@a^0,w,c
  5041   001318  5C01               	subwf	___fladd@b^0,w,c
  5042   00131A  5006               	movf	(___fladd@a+1)^0,w,c
  5043   00131C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5044   00131E  5007               	movf	(___fladd@a+2)^0,w,c
  5045   001320  5803               	subwfb	(___fladd@b+2)^0,w,c
  5046   001322  5004               	movf	(___fladd@b+3)^0,w,c
  5047   001324  0A80               	xorlw	128
  5048   001326  6E09               	movwf	??___fladd^0,c
  5049   001328  5008               	movf	(___fladd@a+3)^0,w,c
  5050   00132A  0A80               	xorlw	128
  5051   00132C  5809               	subwfb	??___fladd^0,w,c
  5052   00132E  B0D8               	btfsc	status,0,c
  5053   001330  EF9C  F009         	goto	u4061
  5054   001334  EF9E  F009         	goto	u4060
  5055   001338                     u4061:
  5056   001338  EFC9  F009         	goto	l3621
  5057   00133C                     u4060:
  5058   00133C  5001               	movf	___fladd@b^0,w,c
  5059   00133E  5C05               	subwf	___fladd@a^0,w,c
  5060   001340  6E09               	movwf	??___fladd^0,c
  5061   001342  5002               	movf	(___fladd@b+1)^0,w,c
  5062   001344  5806               	subwfb	(___fladd@a+1)^0,w,c
  5063   001346  6E0A               	movwf	(??___fladd+1)^0,c
  5064   001348  5003               	movf	(___fladd@b+2)^0,w,c
  5065   00134A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5066   00134C  6E0B               	movwf	(??___fladd+2)^0,c
  5067   00134E  5004               	movf	(___fladd@b+3)^0,w,c
  5068   001350  5808               	subwfb	(___fladd@a+3)^0,w,c
  5069   001352  6E0C               	movwf	(??___fladd+3)^0,c
  5070   001354  0EFF               	movlw	255
  5071   001356  2409               	addwf	??___fladd^0,w,c
  5072   001358  6E01               	movwf	___fladd@b^0,c
  5073   00135A  0EFF               	movlw	255
  5074   00135C  200A               	addwfc	(??___fladd+1)^0,w,c
  5075   00135E  6E02               	movwf	(___fladd@b+1)^0,c
  5076   001360  0EFF               	movlw	255
  5077   001362  200B               	addwfc	(??___fladd+2)^0,w,c
  5078   001364  6E03               	movwf	(___fladd@b+2)^0,c
  5079   001366  0EFF               	movlw	255
  5080   001368  200C               	addwfc	(??___fladd+3)^0,w,c
  5081   00136A  6E04               	movwf	(___fladd@b+3)^0,c
  5082   00136C  0E80               	movlw	128
  5083   00136E  1A0D               	xorwf	___fladd@signs^0,f,c
  5084   001370  6C10               	negf	___fladd@grs^0,c
  5085   001372  5010               	movf	___fladd@grs^0,w,c
  5086   001374  A4D8               	btfss	status,2,c
  5087   001376  EFBF  F009         	goto	u4071
  5088   00137A  EFC1  F009         	goto	u4070
  5089   00137E                     u4071:
  5090   00137E  EFD1  F009         	goto	l671
  5091   001382                     u4070:
  5092   001382  0E01               	movlw	1
  5093   001384  2601               	addwf	___fladd@b^0,f,c
  5094   001386  0E00               	movlw	0
  5095   001388  2202               	addwfc	(___fladd@b+1)^0,f,c
  5096   00138A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5097   00138C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5098   00138E  EFD1  F009         	goto	l671
  5099   001392                     l3621:
  5100   001392  5005               	movf	___fladd@a^0,w,c
  5101   001394  5E01               	subwf	___fladd@b^0,f,c
  5102   001396  5006               	movf	(___fladd@a+1)^0,w,c
  5103   001398  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5104   00139A  5007               	movf	(___fladd@a+2)^0,w,c
  5105   00139C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5106   00139E  5008               	movf	(___fladd@a+3)^0,w,c
  5107   0013A0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5108   0013A2                     l671:
  5109   0013A2  5001               	movf	___fladd@b^0,w,c
  5110   0013A4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5111   0013A6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5112   0013A8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5113   0013AA  A4D8               	btfss	status,2,c
  5114   0013AC  EFDA  F009         	goto	u4081
  5115   0013B0  EFDC  F009         	goto	u4080
  5116   0013B4                     u4081:
  5117   0013B4  EF11  F00A         	goto	l3645
  5118   0013B8                     u4080:
  5119   0013B8  5010               	movf	___fladd@grs^0,w,c
  5120   0013BA  A4D8               	btfss	status,2,c
  5121   0013BC  EFE2  F009         	goto	u4091
  5122   0013C0  EFE4  F009         	goto	u4090
  5123   0013C4                     u4091:
  5124   0013C4  EF11  F00A         	goto	l3645
  5125   0013C8                     u4090:
  5126   0013C8  0E00               	movlw	0
  5127   0013CA  6E01               	movwf	?___fladd^0,c
  5128   0013CC  0E00               	movlw	0
  5129   0013CE  6E02               	movwf	(?___fladd+1)^0,c
  5130   0013D0  0E00               	movlw	0
  5131   0013D2  6E03               	movwf	(?___fladd+2)^0,c
  5132   0013D4  0E00               	movlw	0
  5133   0013D6  6E04               	movwf	(?___fladd+3)^0,c
  5134   0013D8  EFAC  F00A         	goto	l663
  5135   0013DC                     l3629:
  5136   0013DC  90D8               	bcf	status,0,c
  5137   0013DE  3601               	rlcf	___fladd@b^0,f,c
  5138   0013E0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5139   0013E2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5140   0013E4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5141   0013E6  AE10               	btfss	___fladd@grs^0,7,c
  5142   0013E8  EFF8  F009         	goto	u4101
  5143   0013EC  EFFA  F009         	goto	u4100
  5144   0013F0                     u4101:
  5145   0013F0  EFFB  F009         	goto	l3635
  5146   0013F4                     u4100:
  5147   0013F4  8001               	bsf	___fladd@b^0,0,c
  5148   0013F6                     l3635:
  5149   0013F6  A010               	btfss	___fladd@grs^0,0,c
  5150   0013F8  EF00  F00A         	goto	u4111
  5151   0013FC  EF02  F00A         	goto	u4110
  5152   001400                     u4111:
  5153   001400  EF06  F00A         	goto	l3639
  5154   001404                     u4110:
  5155   001404  80D8               	bsf	status,0,c
  5156   001406  3610               	rlcf	___fladd@grs^0,f,c
  5157   001408  EF08  F00A         	goto	l3641
  5158   00140C                     l3639:
  5159   00140C  90D8               	bcf	status,0,c
  5160   00140E  3610               	rlcf	___fladd@grs^0,f,c
  5161   001410                     l3641:
  5162   001410  500F               	movf	___fladd@bexp^0,w,c
  5163   001412  B4D8               	btfsc	status,2,c
  5164   001414  EF0E  F00A         	goto	u4121
  5165   001418  EF10  F00A         	goto	u4120
  5166   00141C                     u4121:
  5167   00141C  EF11  F00A         	goto	l3645
  5168   001420                     u4120:
  5169   001420  060F               	decf	___fladd@bexp^0,f,c
  5170   001422                     l3645:
  5171   001422  AE03               	btfss	(___fladd@b+2)^0,7,c
  5172   001424  EF16  F00A         	goto	u4131
  5173   001428  EF18  F00A         	goto	u4130
  5174   00142C                     u4131:
  5175   00142C  EFEE  F009         	goto	l3629
  5176   001430                     u4130:
  5177   001430                     l3647:
  5178   001430  0E00               	movlw	0
  5179   001432  6E0E               	movwf	___fladd@aexp^0,c
  5180   001434  AE10               	btfss	___fladd@grs^0,7,c
  5181   001436  EF1F  F00A         	goto	u4141
  5182   00143A  EF21  F00A         	goto	u4140
  5183   00143E                     u4141:
  5184   00143E  EF39  F00A         	goto	l680
  5185   001442                     u4140:
  5186   001442  C010  F009         	movff	___fladd@grs,??___fladd
  5187   001446  0E7F               	movlw	127
  5188   001448  1609               	andwf	??___fladd^0,f,c
  5189   00144A  B4D8               	btfsc	status,2,c
  5190   00144C  EF2A  F00A         	goto	u4151
  5191   001450  EF2C  F00A         	goto	u4150
  5192   001454                     u4151:
  5193   001454  EF30  F00A         	goto	l681
  5194   001458                     u4150:
  5195   001458                     l3653:
  5196   001458  0E01               	movlw	1
  5197   00145A  6E0E               	movwf	___fladd@aexp^0,c
  5198   00145C  EF39  F00A         	goto	l680
  5199   001460                     l681:
  5200   001460  A001               	btfss	___fladd@b^0,0,c
  5201   001462  EF35  F00A         	goto	u4161
  5202   001466  EF37  F00A         	goto	u4160
  5203   00146A                     u4161:
  5204   00146A  EF39  F00A         	goto	l680
  5205   00146E                     u4160:
  5206   00146E  EF2C  F00A         	goto	l3653
  5207   001472                     l680:
  5208   001472  500E               	movf	___fladd@aexp^0,w,c
  5209   001474  B4D8               	btfsc	status,2,c
  5210   001476  EF3F  F00A         	goto	u4171
  5211   00147A  EF41  F00A         	goto	u4170
  5212   00147E                     u4171:
  5213   00147E  EF6C  F00A         	goto	l3665
  5214   001482                     u4170:
  5215   001482  0E01               	movlw	1
  5216   001484  2601               	addwf	___fladd@b^0,f,c
  5217   001486  0E00               	movlw	0
  5218   001488  2202               	addwfc	(___fladd@b+1)^0,f,c
  5219   00148A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5220   00148C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5221   00148E  A004               	btfss	(___fladd@b+3)^0,0,c
  5222   001490  EF4C  F00A         	goto	u4181
  5223   001494  EF4E  F00A         	goto	u4180
  5224   001498                     u4181:
  5225   001498  EF6C  F00A         	goto	l3665
  5226   00149C                     u4180:
  5227   00149C  C001  F009         	movff	___fladd@b,??___fladd
  5228   0014A0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5229   0014A4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5230   0014A8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5231   0014AC  340C               	rlcf	(??___fladd+3)^0,w,c
  5232   0014AE  320C               	rrcf	(??___fladd+3)^0,f,c
  5233   0014B0  320B               	rrcf	(??___fladd+2)^0,f,c
  5234   0014B2  320A               	rrcf	(??___fladd+1)^0,f,c
  5235   0014B4  3209               	rrcf	??___fladd^0,f,c
  5236   0014B6  C009  F001         	movff	??___fladd,___fladd@b
  5237   0014BA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5238   0014BE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5239   0014C2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5240   0014C6  280F               	incf	___fladd@bexp^0,w,c
  5241   0014C8  B4D8               	btfsc	status,2,c
  5242   0014CA  EF69  F00A         	goto	u4191
  5243   0014CE  EF6B  F00A         	goto	u4190
  5244   0014D2                     u4191:
  5245   0014D2  EF6C  F00A         	goto	l3665
  5246   0014D6                     u4190:
  5247   0014D6  2A0F               	incf	___fladd@bexp^0,f,c
  5248   0014D8                     l3665:
  5249   0014D8  280F               	incf	___fladd@bexp^0,w,c
  5250   0014DA  B4D8               	btfsc	status,2,c
  5251   0014DC  EF72  F00A         	goto	u4201
  5252   0014E0  EF74  F00A         	goto	u4200
  5253   0014E4                     u4201:
  5254   0014E4  EF7C  F00A         	goto	l3669
  5255   0014E8                     u4200:
  5256   0014E8  500F               	movf	___fladd@bexp^0,w,c
  5257   0014EA  A4D8               	btfss	status,2,c
  5258   0014EC  EF7A  F00A         	goto	u4211
  5259   0014F0  EF7C  F00A         	goto	u4210
  5260   0014F4                     u4211:
  5261   0014F4  EF8E  F00A         	goto	l3673
  5262   0014F8                     u4210:
  5263   0014F8                     l3669:
  5264   0014F8  0E00               	movlw	0
  5265   0014FA  6E01               	movwf	___fladd@b^0,c
  5266   0014FC  0E00               	movlw	0
  5267   0014FE  6E02               	movwf	(___fladd@b+1)^0,c
  5268   001500  0E00               	movlw	0
  5269   001502  6E03               	movwf	(___fladd@b+2)^0,c
  5270   001504  0E00               	movlw	0
  5271   001506  6E04               	movwf	(___fladd@b+3)^0,c
  5272   001508  500F               	movf	___fladd@bexp^0,w,c
  5273   00150A  A4D8               	btfss	status,2,c
  5274   00150C  EF8A  F00A         	goto	u4221
  5275   001510  EF8C  F00A         	goto	u4220
  5276   001514                     u4221:
  5277   001514  EF8E  F00A         	goto	l3673
  5278   001518                     u4220:
  5279   001518  0E00               	movlw	0
  5280   00151A  6E0D               	movwf	___fladd@signs^0,c
  5281   00151C                     l3673:
  5282   00151C  A00F               	btfss	___fladd@bexp^0,0,c
  5283   00151E  EF93  F00A         	goto	u4231
  5284   001522  EF95  F00A         	goto	u4230
  5285   001526                     u4231:
  5286   001526  EF98  F00A         	goto	l3677
  5287   00152A                     u4230:
  5288   00152A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5289   00152C  EF99  F00A         	goto	l3679
  5290   001530                     l3677:
  5291   001530  9E03               	bcf	(___fladd@b+2)^0,7,c
  5292   001532                     l3679:
  5293   001532  90D8               	bcf	status,0,c
  5294   001534  300F               	rrcf	___fladd@bexp^0,w,c
  5295   001536  6E04               	movwf	(___fladd@b+3)^0,c
  5296   001538  AE0D               	btfss	___fladd@signs^0,7,c
  5297   00153A  EFA1  F00A         	goto	u4241
  5298   00153E  EFA3  F00A         	goto	u4240
  5299   001542                     u4241:
  5300   001542  EFA4  F00A         	goto	l3685
  5301   001546                     u4240:
  5302   001546  8E04               	bsf	(___fladd@b+3)^0,7,c
  5303   001548                     l3685:
  5304   001548  C001  F001         	movff	___fladd@b,?___fladd
  5305   00154C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5306   001550  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5307   001554  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5308   001558                     l663:
  5309   001558  0012               	return		;funcret
  5310   00155A                     __end_of___fladd:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function ___flneg *****************
  5314 ;; Defined at:
  5315 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  f1              4    0[COMRAM] unsigned char 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  4    0[COMRAM] unsigned char 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5329 ;;      Params:         4       0       0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0
  5332 ;;      Totals:         4       0       0       0       0       0       0
  5333 ;;Total ram usage:        4 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_efgtoa
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text22
  5343   002F22                     __ptext22:
  5344                           	callstack 0
  5345   002F22                     ___flneg:
  5346                           	callstack 25
  5347   002F22  5001               	movf	___flneg@f1^0,w,c
  5348   002F24  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5349   002F26  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5350   002F28  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5351   002F2A  B4D8               	btfsc	status,2,c
  5352   002F2C  EF9A  F017         	goto	u4761
  5353   002F30  EF9C  F017         	goto	u4760
  5354   002F34                     u4761:
  5355   002F34  EFA4  F017         	goto	l4019
  5356   002F38                     u4760:
  5357   002F38  0E00               	movlw	0
  5358   002F3A  1A01               	xorwf	___flneg@f1^0,f,c
  5359   002F3C  0E00               	movlw	0
  5360   002F3E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5361   002F40  0E00               	movlw	0
  5362   002F42  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5363   002F44  0E80               	movlw	128
  5364   002F46  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5365   002F48                     l4019:
  5366   002F48  C001  F001         	movff	___flneg@f1,?___flneg
  5367   002F4C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5368   002F50  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5369   002F54  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5370   002F58  0012               	return		;funcret
  5371   002F5A                     __end_of___flneg:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function ___flge *****************
  5375 ;; Defined at:
  5376 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  ff1             4   39[COMRAM] unsigned char 
  5379 ;;  ff2             4   43[COMRAM] unsigned char 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;		None               void
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5391 ;;      Params:         8       0       0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0
  5393 ;;      Temps:          4       0       0       0       0       0       0
  5394 ;;      Totals:        12       0       0       0       0       0       0
  5395 ;;Total ram usage:       12 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_logic_CONTROL
  5401 ;;		_efgtoa
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text23
  5406   002562                     __ptext23:
  5407                           	callstack 0
  5408   002562                     ___flge:
  5409                           	callstack 29
  5410   002562  0E00               	movlw	0
  5411   002564  1428               	andwf	___flge@ff1^0,w,c
  5412   002566  6E30               	movwf	??___flge^0,c
  5413   002568  0E00               	movlw	0
  5414   00256A  1429               	andwf	(___flge@ff1+1)^0,w,c
  5415   00256C  6E31               	movwf	(??___flge+1)^0,c
  5416   00256E  0E80               	movlw	128
  5417   002570  142A               	andwf	(___flge@ff1+2)^0,w,c
  5418   002572  6E32               	movwf	(??___flge+2)^0,c
  5419   002574  0E7F               	movlw	127
  5420   002576  142B               	andwf	(___flge@ff1+3)^0,w,c
  5421   002578  6E33               	movwf	(??___flge+3)^0,c
  5422   00257A  5030               	movf	??___flge^0,w,c
  5423   00257C  1031               	iorwf	(??___flge+1)^0,w,c
  5424   00257E  1032               	iorwf	(??___flge+2)^0,w,c
  5425   002580  1033               	iorwf	(??___flge+3)^0,w,c
  5426   002582  A4D8               	btfss	status,2,c
  5427   002584  EFC6  F012         	goto	u4711
  5428   002588  EFC8  F012         	goto	u4710
  5429   00258C                     u4711:
  5430   00258C  EFD0  F012         	goto	l3997
  5431   002590                     u4710:
  5432   002590  0E00               	movlw	0
  5433   002592  6E28               	movwf	___flge@ff1^0,c
  5434   002594  0E00               	movlw	0
  5435   002596  6E29               	movwf	(___flge@ff1+1)^0,c
  5436   002598  0E00               	movlw	0
  5437   00259A  6E2A               	movwf	(___flge@ff1+2)^0,c
  5438   00259C  0E00               	movlw	0
  5439   00259E  6E2B               	movwf	(___flge@ff1+3)^0,c
  5440   0025A0                     l3997:
  5441   0025A0  0E00               	movlw	0
  5442   0025A2  142C               	andwf	___flge@ff2^0,w,c
  5443   0025A4  6E30               	movwf	??___flge^0,c
  5444   0025A6  0E00               	movlw	0
  5445   0025A8  142D               	andwf	(___flge@ff2+1)^0,w,c
  5446   0025AA  6E31               	movwf	(??___flge+1)^0,c
  5447   0025AC  0E80               	movlw	128
  5448   0025AE  142E               	andwf	(___flge@ff2+2)^0,w,c
  5449   0025B0  6E32               	movwf	(??___flge+2)^0,c
  5450   0025B2  0E7F               	movlw	127
  5451   0025B4  142F               	andwf	(___flge@ff2+3)^0,w,c
  5452   0025B6  6E33               	movwf	(??___flge+3)^0,c
  5453   0025B8  5030               	movf	??___flge^0,w,c
  5454   0025BA  1031               	iorwf	(??___flge+1)^0,w,c
  5455   0025BC  1032               	iorwf	(??___flge+2)^0,w,c
  5456   0025BE  1033               	iorwf	(??___flge+3)^0,w,c
  5457   0025C0  A4D8               	btfss	status,2,c
  5458   0025C2  EFE5  F012         	goto	u4721
  5459   0025C6  EFE7  F012         	goto	u4720
  5460   0025CA                     u4721:
  5461   0025CA  EFEF  F012         	goto	l4001
  5462   0025CE                     u4720:
  5463   0025CE  0E00               	movlw	0
  5464   0025D0  6E2C               	movwf	___flge@ff2^0,c
  5465   0025D2  0E00               	movlw	0
  5466   0025D4  6E2D               	movwf	(___flge@ff2+1)^0,c
  5467   0025D6  0E00               	movlw	0
  5468   0025D8  6E2E               	movwf	(___flge@ff2+2)^0,c
  5469   0025DA  0E00               	movlw	0
  5470   0025DC  6E2F               	movwf	(___flge@ff2+3)^0,c
  5471   0025DE                     l4001:
  5472   0025DE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5473   0025E0  EFF4  F012         	goto	u4731
  5474   0025E4  EFF6  F012         	goto	u4730
  5475   0025E8                     u4731:
  5476   0025E8  EFFF  F012         	goto	l4005
  5477   0025EC                     u4730:
  5478   0025EC  6C28               	negf	___flge@ff1^0,c
  5479   0025EE  1E29               	comf	(___flge@ff1+1)^0,f,c
  5480   0025F0  B0D8               	btfsc	status,0,c
  5481   0025F2  2A29               	incf	(___flge@ff1+1)^0,f,c
  5482   0025F4  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5483   0025F6  B0D8               	btfsc	status,0,c
  5484   0025F8  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5485   0025FA  0E80               	movlw	128
  5486   0025FC  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5487   0025FE                     l4005:
  5488   0025FE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5489   002600  EF04  F013         	goto	u4741
  5490   002604  EF06  F013         	goto	u4740
  5491   002608                     u4741:
  5492   002608  EF0F  F013         	goto	l391
  5493   00260C                     u4740:
  5494   00260C  6C2C               	negf	___flge@ff2^0,c
  5495   00260E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5496   002610  B0D8               	btfsc	status,0,c
  5497   002612  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5498   002614  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5499   002616  B0D8               	btfsc	status,0,c
  5500   002618  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5501   00261A  0E80               	movlw	128
  5502   00261C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5503   00261E                     l391:
  5504   00261E  0E00               	movlw	0
  5505   002620  1A28               	xorwf	___flge@ff1^0,f,c
  5506   002622  0E00               	movlw	0
  5507   002624  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5508   002626  0E00               	movlw	0
  5509   002628  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5510   00262A  0E80               	movlw	128
  5511   00262C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5512   00262E  0E00               	movlw	0
  5513   002630  1A2C               	xorwf	___flge@ff2^0,f,c
  5514   002632  0E00               	movlw	0
  5515   002634  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5516   002636  0E00               	movlw	0
  5517   002638  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5518   00263A  0E80               	movlw	128
  5519   00263C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5520   00263E  502C               	movf	___flge@ff2^0,w,c
  5521   002640  5C28               	subwf	___flge@ff1^0,w,c
  5522   002642  502D               	movf	(___flge@ff2+1)^0,w,c
  5523   002644  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5524   002646  502E               	movf	(___flge@ff2+2)^0,w,c
  5525   002648  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5526   00264A  502F               	movf	(___flge@ff2+3)^0,w,c
  5527   00264C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5528   00264E  B0D8               	btfsc	status,0,c
  5529   002650  EF2C  F013         	goto	u4751
  5530   002654  EF2E  F013         	goto	u4750
  5531   002658                     u4751:
  5532   002658  EF31  F013         	goto	l4011
  5533   00265C                     u4750:
  5534   00265C  90D8               	bcf	status,0,c
  5535   00265E  EF32  F013         	goto	l396
  5536   002662                     l4011:
  5537   002662  80D8               	bsf	status,0,c
  5538   002664                     l396:
  5539   002664  0012               	return		;funcret
  5540   002666                     __end_of___flge:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function ___fleq *****************
  5544 ;; Defined at:
  5545 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  ff1             4    0[COMRAM] unsigned char 
  5548 ;;  ff2             4    4[COMRAM] unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5560 ;;      Params:         8       0       0       0       0       0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0
  5562 ;;      Temps:          4       0       0       0       0       0       0
  5563 ;;      Totals:        12       0       0       0       0       0       0
  5564 ;;Total ram usage:       12 bytes
  5565 ;; Hardware stack levels used: 1
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_efgtoa
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text24
  5574   0029C6                     __ptext24:
  5575                           	callstack 0
  5576   0029C6                     ___fleq:
  5577                           	callstack 25
  5578   0029C6  0E00               	movlw	0
  5579   0029C8  1401               	andwf	___fleq@ff1^0,w,c
  5580   0029CA  6E09               	movwf	??___fleq^0,c
  5581   0029CC  0E00               	movlw	0
  5582   0029CE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5583   0029D0  6E0A               	movwf	(??___fleq+1)^0,c
  5584   0029D2  0E80               	movlw	128
  5585   0029D4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5586   0029D6  6E0B               	movwf	(??___fleq+2)^0,c
  5587   0029D8  0E7F               	movlw	127
  5588   0029DA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5589   0029DC  6E0C               	movwf	(??___fleq+3)^0,c
  5590   0029DE  5009               	movf	??___fleq^0,w,c
  5591   0029E0  100A               	iorwf	(??___fleq+1)^0,w,c
  5592   0029E2  100B               	iorwf	(??___fleq+2)^0,w,c
  5593   0029E4  100C               	iorwf	(??___fleq+3)^0,w,c
  5594   0029E6  A4D8               	btfss	status,2,c
  5595   0029E8  EFF8  F014         	goto	u4681
  5596   0029EC  EFFA  F014         	goto	u4680
  5597   0029F0                     u4681:
  5598   0029F0  EF02  F015         	goto	l3981
  5599   0029F4                     u4680:
  5600   0029F4  0E00               	movlw	0
  5601   0029F6  6E01               	movwf	___fleq@ff1^0,c
  5602   0029F8  0E00               	movlw	0
  5603   0029FA  6E02               	movwf	(___fleq@ff1+1)^0,c
  5604   0029FC  0E00               	movlw	0
  5605   0029FE  6E03               	movwf	(___fleq@ff1+2)^0,c
  5606   002A00  0E00               	movlw	0
  5607   002A02  6E04               	movwf	(___fleq@ff1+3)^0,c
  5608   002A04                     l3981:
  5609   002A04  0E00               	movlw	0
  5610   002A06  1405               	andwf	___fleq@ff2^0,w,c
  5611   002A08  6E09               	movwf	??___fleq^0,c
  5612   002A0A  0E00               	movlw	0
  5613   002A0C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5614   002A0E  6E0A               	movwf	(??___fleq+1)^0,c
  5615   002A10  0E80               	movlw	128
  5616   002A12  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5617   002A14  6E0B               	movwf	(??___fleq+2)^0,c
  5618   002A16  0E7F               	movlw	127
  5619   002A18  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5620   002A1A  6E0C               	movwf	(??___fleq+3)^0,c
  5621   002A1C  5009               	movf	??___fleq^0,w,c
  5622   002A1E  100A               	iorwf	(??___fleq+1)^0,w,c
  5623   002A20  100B               	iorwf	(??___fleq+2)^0,w,c
  5624   002A22  100C               	iorwf	(??___fleq+3)^0,w,c
  5625   002A24  A4D8               	btfss	status,2,c
  5626   002A26  EF17  F015         	goto	u4691
  5627   002A2A  EF19  F015         	goto	u4690
  5628   002A2E                     u4691:
  5629   002A2E  EF21  F015         	goto	l3985
  5630   002A32                     u4690:
  5631   002A32  0E00               	movlw	0
  5632   002A34  6E05               	movwf	___fleq@ff2^0,c
  5633   002A36  0E00               	movlw	0
  5634   002A38  6E06               	movwf	(___fleq@ff2+1)^0,c
  5635   002A3A  0E00               	movlw	0
  5636   002A3C  6E07               	movwf	(___fleq@ff2+2)^0,c
  5637   002A3E  0E00               	movlw	0
  5638   002A40  6E08               	movwf	(___fleq@ff2+3)^0,c
  5639   002A42                     l3985:
  5640   002A42  5005               	movf	___fleq@ff2^0,w,c
  5641   002A44  1801               	xorwf	___fleq@ff1^0,w,c
  5642   002A46  E10F               	bnz	u4700
  5643   002A48  5006               	movf	(___fleq@ff2+1)^0,w,c
  5644   002A4A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5645   002A4C  E10C               	bnz	u4700
  5646   002A4E  5007               	movf	(___fleq@ff2+2)^0,w,c
  5647   002A50  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5648   002A52  E109               	bnz	u4700
  5649   002A54  5008               	movf	(___fleq@ff2+3)^0,w,c
  5650   002A56  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5651   002A58  B4D8               	btfsc	status,2,c
  5652   002A5A  EF31  F015         	goto	u4701
  5653   002A5E  EF33  F015         	goto	u4700
  5654   002A62                     u4701:
  5655   002A62  EF36  F015         	goto	l3989
  5656   002A66                     u4700:
  5657   002A66  90D8               	bcf	status,0,c
  5658   002A68  EF37  F015         	goto	l385
  5659   002A6C                     l3989:
  5660   002A6C  80D8               	bsf	status,0,c
  5661   002A6E                     l385:
  5662   002A6E  0012               	return		;funcret
  5663   002A70                     __end_of___fleq:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _lcd_write *****************
  5667 ;; Defined at:
  5668 ;;		line 83 in file "LCD4b_EXSTO.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  lin             1    wreg     unsigned char 
  5671 ;;  col             1    6[COMRAM] unsigned char 
  5672 ;;  str             2    7[COMRAM] PTR unsigned char 
  5673 ;;		 -> STR_4(16), STR_3(16), BufferLCD_Voltage(16), BufferLCD_Press(16), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  lin             1   10[COMRAM] unsigned char 
  5676 ;;  end             1    9[COMRAM] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         3       0       0       0       0       0       0
  5687 ;;      Locals:         2       0       0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0
  5689 ;;      Totals:         5       0       0       0       0       0       0
  5690 ;;Total ram usage:        5 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 3
  5693 ;; This function calls:
  5694 ;;		_lcd_send_byte
  5695 ;; This function is called by:
  5696 ;;		_lcd_SENSOR
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text25
  5701   002B16                     __ptext25:
  5702                           	callstack 0
  5703   002B16                     _lcd_write:
  5704                           	callstack 26
  5705                           
  5706                           ;incstack = 0
  5707                           ;lcd_write@lin stored from wreg
  5708   002B16  6E0B               	movwf	lcd_write@lin^0,c
  5709   002B18                     
  5710                           ;LCD4b_EXSTO.c: 83: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 84: {;L
      +                          CD4b_EXSTO.c: 85:     char end;;LCD4b_EXSTO.c: 87:     if(lin == 1)
  5711   002B18  040B               	decf	lcd_write@lin^0,w,c
  5712   002B1A  A4D8               	btfss	status,2,c
  5713   002B1C  EF92  F015         	goto	u3601
  5714   002B20  EF94  F015         	goto	u3600
  5715   002B24                     u3601:
  5716   002B24  EF99  F015         	goto	l3297
  5717   002B28                     u3600:
  5718   002B28                     
  5719                           ;LCD4b_EXSTO.c: 88:     {;LCD4b_EXSTO.c: 89:         end = col + 0X80 - 1;
  5720   002B28  5007               	movf	lcd_write@col^0,w,c
  5721   002B2A  0F7F               	addlw	127
  5722   002B2C  6E0A               	movwf	lcd_write@end^0,c
  5723                           
  5724                           ;LCD4b_EXSTO.c: 90:     }
  5725   002B2E  EFA5  F015         	goto	l3301
  5726   002B32                     l3297:
  5727   002B32  0E02               	movlw	2
  5728   002B34  180B               	xorwf	lcd_write@lin^0,w,c
  5729   002B36  A4D8               	btfss	status,2,c
  5730   002B38  EFA0  F015         	goto	u3611
  5731   002B3C  EFA2  F015         	goto	u3610
  5732   002B40                     u3611:
  5733   002B40  EFA5  F015         	goto	l3301
  5734   002B44                     u3610:
  5735   002B44                     
  5736                           ;LCD4b_EXSTO.c: 92:     {;LCD4b_EXSTO.c: 93:         end = col + 0xC0 - 1;
  5737   002B44  5007               	movf	lcd_write@col^0,w,c
  5738   002B46  0FBF               	addlw	191
  5739   002B48  6E0A               	movwf	lcd_write@end^0,c
  5740   002B4A                     l3301:
  5741                           
  5742                           ;LCD4b_EXSTO.c: 95:     lcd_send_byte(0,end);
  5743   002B4A  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  5744   002B4E  0E00               	movlw	0
  5745   002B50  EC14  F018         	call	_lcd_send_byte
  5746                           
  5747                           ;LCD4b_EXSTO.c: 97:     while(*str)
  5748   002B54  EFC2  F015         	goto	l3307
  5749   002B58                     l3303:
  5750                           
  5751                           ;LCD4b_EXSTO.c: 98:     {;LCD4b_EXSTO.c: 99:         lcd_send_byte(1,*str);
  5752   002B58  C008  FFF6         	movff	lcd_write@str,tblptrl
  5753   002B5C  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  5754   002B60  6AF8               	clrf	tblptru,c
  5755   002B62  0E05               	movlw	(high __ramtop+-1)
  5756   002B64  64F7               	cpfsgt	tblptrh,c
  5757   002B66  D003               	bra	u3627
  5758   002B68  0008               	tblrd		*
  5759   002B6A  50F5               	movf	tablat,w,c
  5760   002B6C  D005               	bra	u3620
  5761   002B6E                     u3627:
  5762   002B6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5763   002B72  CFF7 FFE2          	movff	tblptrh,fsr1h
  5764   002B76  50E7               	movf	indf1,w,c
  5765   002B78                     u3620:
  5766   002B78  6E05               	movwf	lcd_send_byte@data^0,c
  5767   002B7A  0E01               	movlw	1
  5768   002B7C  EC14  F018         	call	_lcd_send_byte
  5769   002B80                     
  5770                           ;LCD4b_EXSTO.c: 100:         str++;
  5771   002B80  4A08               	infsnz	lcd_write@str^0,f,c
  5772   002B82  2A09               	incf	(lcd_write@str+1)^0,f,c
  5773   002B84                     l3307:
  5774                           
  5775                           ;LCD4b_EXSTO.c: 97:     while(*str)
  5776   002B84  C008  FFF6         	movff	lcd_write@str,tblptrl
  5777   002B88  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  5778   002B8C  6AF8               	clrf	tblptru,c
  5779   002B8E  0E05               	movlw	(high __ramtop+-1)
  5780   002B90  64F7               	cpfsgt	tblptrh,c
  5781   002B92  D003               	bra	u3637
  5782   002B94  0008               	tblrd		*
  5783   002B96  50F5               	movf	tablat,w,c
  5784   002B98  D005               	bra	u3630
  5785   002B9A                     u3637:
  5786   002B9A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5787   002B9E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5788   002BA2  50E7               	movf	indf1,w,c
  5789   002BA4                     u3630:
  5790   002BA4  0900               	iorlw	0
  5791   002BA6  A4D8               	btfss	status,2,c
  5792   002BA8  EFD8  F015         	goto	u3641
  5793   002BAC  EFDA  F015         	goto	u3640
  5794   002BB0                     u3641:
  5795   002BB0  EFAC  F015         	goto	l3303
  5796   002BB4                     u3640:
  5797   002BB4  0012               	return		;funcret
  5798   002BB6                     __end_of_lcd_write:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _lcd_send_byte *****************
  5802 ;; Defined at:
  5803 ;;		line 63 in file "LCD4b_EXSTO.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  level           1    wreg     unsigned char 
  5806 ;;  data            1    4[COMRAM] unsigned char 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  level           1    5[COMRAM] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5818 ;;      Params:         1       0       0       0       0       0       0
  5819 ;;      Locals:         1       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0
  5821 ;;      Totals:         2       0       0       0       0       0       0
  5822 ;;Total ram usage:        2 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 2
  5825 ;; This function calls:
  5826 ;;		_lcd_cmd
  5827 ;; This function is called by:
  5828 ;;		_lcd_write
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text26
  5833   003028                     __ptext26:
  5834                           	callstack 0
  5835   003028                     _lcd_send_byte:
  5836                           	callstack 26
  5837                           
  5838                           ;incstack = 0
  5839                           ;lcd_send_byte@level stored from wreg
  5840   003028  6E06               	movwf	lcd_send_byte@level^0,c
  5841   00302A                     
  5842                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  5843   00302A  B006               	btfsc	lcd_send_byte@level^0,0,c
  5844   00302C  D002               	bra	u3585
  5845   00302E  9084               	bcf	132,0,c	;volatile
  5846   003030  D001               	bra	u3586
  5847   003032                     u3585:
  5848   003032  8084               	bsf	132,0,c	;volatile
  5849   003034                     u3586:
  5850   003034                     
  5851                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  5852   003034  0E42               	movlw	66
  5853   003036                     u5617:
  5854   003036  2EE8               	decfsz	wreg,f,c
  5855   003038  D7FE               	bra	u5617
  5856   00303A  D000               	nop2	
  5857   00303C                     
  5858                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  5859   00303C  9484               	bcf	132,2,c	;volatile
  5860   00303E                     
  5861                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  5862   00303E  5005               	movf	lcd_send_byte@data^0,w,c
  5863   003040  ECB2  F013         	call	_lcd_cmd
  5864   003044  0012               	return		;funcret
  5865   003046                     __end_of_lcd_send_byte:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _lcd_cmd *****************
  5869 ;; Defined at:
  5870 ;;		line 42 in file "LCD4b_EXSTO.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  cmd             1    wreg     unsigned char 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  cmd             1    3[COMRAM] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5884 ;;      Params:         0       0       0       0       0       0       0
  5885 ;;      Locals:         1       0       0       0       0       0       0
  5886 ;;      Temps:          1       0       0       0       0       0       0
  5887 ;;      Totals:         2       0       0       0       0       0       0
  5888 ;;Total ram usage:        2 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 1
  5891 ;; This function calls:
  5892 ;;		_set_bit
  5893 ;; This function is called by:
  5894 ;;		_lcd_init
  5895 ;;		_lcd_send_byte
  5896 ;;		_lcd_clear
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text27
  5901   002764                     __ptext27:
  5902                           	callstack 0
  5903   002764                     _lcd_cmd:
  5904                           	callstack 28
  5905                           
  5906                           ;incstack = 0
  5907                           ;lcd_cmd@cmd stored from wreg
  5908   002764  6E04               	movwf	lcd_cmd@cmd^0,c
  5909   002766                     
  5910                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  5911   002766  0E10               	movlw	16
  5912   002768  6E01               	movwf	set_bit@comp^0,c
  5913   00276A  5004               	movf	lcd_cmd@cmd^0,w,c
  5914   00276C  EC04  F018         	call	_set_bit
  5915   002770  6E03               	movwf	??_lcd_cmd^0,c
  5916   002772  3A03               	swapf	??_lcd_cmd^0,f,c
  5917   002774  5083               	movf	131,w,c	;volatile
  5918   002776  1803               	xorwf	??_lcd_cmd^0,w,c
  5919   002778  0BEF               	andlw	-17
  5920   00277A  1803               	xorwf	??_lcd_cmd^0,w,c
  5921   00277C  6E83               	movwf	131,c	;volatile
  5922                           
  5923                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  5924   00277E  0E20               	movlw	32
  5925   002780  6E01               	movwf	set_bit@comp^0,c
  5926   002782  5004               	movf	lcd_cmd@cmd^0,w,c
  5927   002784  EC04  F018         	call	_set_bit
  5928   002788  6E03               	movwf	??_lcd_cmd^0,c
  5929   00278A  3A03               	swapf	??_lcd_cmd^0,f,c
  5930   00278C  4603               	rlncf	??_lcd_cmd^0,f,c
  5931   00278E  5083               	movf	131,w,c	;volatile
  5932   002790  1803               	xorwf	??_lcd_cmd^0,w,c
  5933   002792  0BDF               	andlw	-33
  5934   002794  1803               	xorwf	??_lcd_cmd^0,w,c
  5935   002796  6E83               	movwf	131,c	;volatile
  5936                           
  5937                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  5938   002798  0E40               	movlw	64
  5939   00279A  6E01               	movwf	set_bit@comp^0,c
  5940   00279C  5004               	movf	lcd_cmd@cmd^0,w,c
  5941   00279E  EC04  F018         	call	_set_bit
  5942   0027A2  6E03               	movwf	??_lcd_cmd^0,c
  5943   0027A4  3A03               	swapf	??_lcd_cmd^0,f,c
  5944   0027A6  4603               	rlncf	??_lcd_cmd^0,f,c
  5945   0027A8  4603               	rlncf	??_lcd_cmd^0,f,c
  5946   0027AA  5083               	movf	131,w,c	;volatile
  5947   0027AC  1803               	xorwf	??_lcd_cmd^0,w,c
  5948   0027AE  0BBF               	andlw	-65
  5949   0027B0  1803               	xorwf	??_lcd_cmd^0,w,c
  5950   0027B2  6E83               	movwf	131,c	;volatile
  5951                           
  5952                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  5953   0027B4  0E80               	movlw	128
  5954   0027B6  6E01               	movwf	set_bit@comp^0,c
  5955   0027B8  5004               	movf	lcd_cmd@cmd^0,w,c
  5956   0027BA  EC04  F018         	call	_set_bit
  5957   0027BE  6E03               	movwf	??_lcd_cmd^0,c
  5958   0027C0  3203               	rrcf	??_lcd_cmd^0,f,c
  5959   0027C2  3203               	rrcf	??_lcd_cmd^0,f,c
  5960   0027C4  5083               	movf	131,w,c	;volatile
  5961   0027C6  1803               	xorwf	??_lcd_cmd^0,w,c
  5962   0027C8  0B7F               	andlw	-129
  5963   0027CA  1803               	xorwf	??_lcd_cmd^0,w,c
  5964   0027CC  6E83               	movwf	131,c	;volatile
  5965   0027CE                     
  5966                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  5967   0027CE  8484               	bsf	132,2,c	;volatile
  5968   0027D0                     
  5969                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  5970   0027D0  9484               	bcf	132,2,c	;volatile
  5971   0027D2                     
  5972                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  5973   0027D2  0E42               	movlw	66
  5974   0027D4                     u5627:
  5975   0027D4  2EE8               	decfsz	wreg,f,c
  5976   0027D6  D7FE               	bra	u5627
  5977   0027D8  D000               	nop2	
  5978   0027DA                     
  5979                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  5980   0027DA  0E01               	movlw	1
  5981   0027DC  6E01               	movwf	set_bit@comp^0,c
  5982   0027DE  5004               	movf	lcd_cmd@cmd^0,w,c
  5983   0027E0  EC04  F018         	call	_set_bit
  5984   0027E4  6E03               	movwf	??_lcd_cmd^0,c
  5985   0027E6  3A03               	swapf	??_lcd_cmd^0,f,c
  5986   0027E8  5083               	movf	131,w,c	;volatile
  5987   0027EA  1803               	xorwf	??_lcd_cmd^0,w,c
  5988   0027EC  0BEF               	andlw	-17
  5989   0027EE  1803               	xorwf	??_lcd_cmd^0,w,c
  5990   0027F0  6E83               	movwf	131,c	;volatile
  5991   0027F2                     
  5992                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  5993   0027F2  0E02               	movlw	2
  5994   0027F4  6E01               	movwf	set_bit@comp^0,c
  5995   0027F6  5004               	movf	lcd_cmd@cmd^0,w,c
  5996   0027F8  EC04  F018         	call	_set_bit
  5997   0027FC  6E03               	movwf	??_lcd_cmd^0,c
  5998   0027FE  3A03               	swapf	??_lcd_cmd^0,f,c
  5999   002800  4603               	rlncf	??_lcd_cmd^0,f,c
  6000   002802  5083               	movf	131,w,c	;volatile
  6001   002804  1803               	xorwf	??_lcd_cmd^0,w,c
  6002   002806  0BDF               	andlw	-33
  6003   002808  1803               	xorwf	??_lcd_cmd^0,w,c
  6004   00280A  6E83               	movwf	131,c	;volatile
  6005   00280C                     
  6006                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  6007   00280C  0E04               	movlw	4
  6008   00280E  6E01               	movwf	set_bit@comp^0,c
  6009   002810  5004               	movf	lcd_cmd@cmd^0,w,c
  6010   002812  EC04  F018         	call	_set_bit
  6011   002816  6E03               	movwf	??_lcd_cmd^0,c
  6012   002818  3A03               	swapf	??_lcd_cmd^0,f,c
  6013   00281A  4603               	rlncf	??_lcd_cmd^0,f,c
  6014   00281C  4603               	rlncf	??_lcd_cmd^0,f,c
  6015   00281E  5083               	movf	131,w,c	;volatile
  6016   002820  1803               	xorwf	??_lcd_cmd^0,w,c
  6017   002822  0BBF               	andlw	-65
  6018   002824  1803               	xorwf	??_lcd_cmd^0,w,c
  6019   002826  6E83               	movwf	131,c	;volatile
  6020   002828                     
  6021                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  6022   002828  0E08               	movlw	8
  6023   00282A  6E01               	movwf	set_bit@comp^0,c
  6024   00282C  5004               	movf	lcd_cmd@cmd^0,w,c
  6025   00282E  EC04  F018         	call	_set_bit
  6026   002832  6E03               	movwf	??_lcd_cmd^0,c
  6027   002834  3203               	rrcf	??_lcd_cmd^0,f,c
  6028   002836  3203               	rrcf	??_lcd_cmd^0,f,c
  6029   002838  5083               	movf	131,w,c	;volatile
  6030   00283A  1803               	xorwf	??_lcd_cmd^0,w,c
  6031   00283C  0B7F               	andlw	-129
  6032   00283E  1803               	xorwf	??_lcd_cmd^0,w,c
  6033   002840  6E83               	movwf	131,c	;volatile
  6034   002842                     
  6035                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  6036   002842  8484               	bsf	132,2,c	;volatile
  6037   002844                     
  6038                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  6039   002844  9484               	bcf	132,2,c	;volatile
  6040   002846  0012               	return		;funcret
  6041   002848                     __end_of_lcd_cmd:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _set_bit *****************
  6045 ;; Defined at:
  6046 ;;		line 36 in file "LCD4b_EXSTO.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  cmd             1    wreg     unsigned char 
  6049 ;;  comp            1    0[COMRAM] unsigned char 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  cmd             1    1[COMRAM] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      unsigned char 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6061 ;;      Params:         1       0       0       0       0       0       0
  6062 ;;      Locals:         1       0       0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0
  6064 ;;      Totals:         2       0       0       0       0       0       0
  6065 ;;Total ram usage:        2 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_lcd_cmd
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text28
  6075   003008                     __ptext28:
  6076                           	callstack 0
  6077   003008                     _set_bit:
  6078                           	callstack 28
  6079                           
  6080                           ;incstack = 0
  6081                           ;set_bit@cmd stored from wreg
  6082   003008  6E02               	movwf	set_bit@cmd^0,c
  6083   00300A                     
  6084                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  6085   00300A  5002               	movf	set_bit@cmd^0,w,c
  6086   00300C  1401               	andwf	set_bit@comp^0,w,c
  6087   00300E  0900               	iorlw	0
  6088   003010  B4D8               	btfsc	status,2,c
  6089   003012  EF0D  F018         	goto	u3161
  6090   003016  EF0F  F018         	goto	u3160
  6091   00301A                     u3161:
  6092   00301A  EF12  F018         	goto	l2931
  6093   00301E                     u3160:
  6094   00301E  0E01               	movlw	1
  6095   003020  EF13  F018         	goto	l23
  6096   003024                     l2931:
  6097   003024  0E00               	movlw	0
  6098   003026                     l23:
  6099   003026  0012               	return		;funcret
  6100   003028                     __end_of_set_bit:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function _equation_SENSOR *****************
  6104 ;; Defined at:
  6105 ;;		line 111 in file "Main_program.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6119 ;;      Params:         0       0       0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0
  6122 ;;      Totals:         0       0       0       0       0       0       0
  6123 ;;Total ram usage:        0 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 1
  6126 ;; This function calls:
  6127 ;;		___fldiv
  6128 ;;		___flmul
  6129 ;;		___xxtofl
  6130 ;; This function is called by:
  6131 ;;		_main
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text29
  6136   002848                     __ptext29:
  6137                           	callstack 0
  6138   002848                     _equation_SENSOR:
  6139                           	callstack 29
  6140   002848                     
  6141                           ;Main_program.c: 113:     VoltageSensor = 0.0048875855 * VdigADC_AN0;
  6142   002848  C072  F001         	movff	_VdigADC_AN0,___xxtofl@val
  6143   00284C  C073  F002         	movff	_VdigADC_AN0+1,___xxtofl@val+1
  6144   002850  6A03               	clrf	(___xxtofl@val+2)^0,c
  6145   002852  6A04               	clrf	(___xxtofl@val+3)^0,c
  6146   002854  0E00               	movlw	0
  6147   002856  ECA5  F010         	call	___xxtofl
  6148   00285A  C001  F00F         	movff	?___xxtofl,___flmul@b
  6149   00285E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6150   002862  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6151   002866  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6152   00286A  0E0A               	movlw	10
  6153   00286C  6E13               	movwf	___flmul@a^0,c
  6154   00286E  0E28               	movlw	40
  6155   002870  6E14               	movwf	(___flmul@a+1)^0,c
  6156   002872  0EA0               	movlw	160
  6157   002874  6E15               	movwf	(___flmul@a+2)^0,c
  6158   002876  0E3B               	movlw	59
  6159   002878  6E16               	movwf	(___flmul@a+3)^0,c
  6160   00287A  ECAD  F00A         	call	___flmul	;wreg free
  6161   00287E  C00F  F0CE         	movff	?___flmul,_VoltageSensor
  6162   002882  C010  F0CF         	movff	?___flmul+1,_VoltageSensor+1
  6163   002886  C011  F0D0         	movff	?___flmul+2,_VoltageSensor+2
  6164   00288A  C012  F0D1         	movff	?___flmul+3,_VoltageSensor+3
  6165   00288E                     
  6166                           ;Main_program.c: 114:     PressSensor = VoltageSensor / 0.0769230769;
  6167   00288E  C0CE  F028         	movff	_VoltageSensor,___fldiv@b
  6168   002892  C0CF  F029         	movff	_VoltageSensor+1,___fldiv@b+1
  6169   002896  C0D0  F02A         	movff	_VoltageSensor+2,___fldiv@b+2
  6170   00289A  C0D1  F02B         	movff	_VoltageSensor+3,___fldiv@b+3
  6171   00289E  0ED9               	movlw	217
  6172   0028A0  6E2C               	movwf	___fldiv@a^0,c
  6173   0028A2  0E89               	movlw	137
  6174   0028A4  6E2D               	movwf	(___fldiv@a+1)^0,c
  6175   0028A6  0E9D               	movlw	157
  6176   0028A8  6E2E               	movwf	(___fldiv@a+2)^0,c
  6177   0028AA  0E3D               	movlw	61
  6178   0028AC  6E2F               	movwf	(___fldiv@a+3)^0,c
  6179   0028AE  ECC2  F00C         	call	___fldiv	;wreg free
  6180   0028B2  C028  F069         	movff	?___fldiv,_PressSensor
  6181   0028B6  C029  F06A         	movff	?___fldiv+1,_PressSensor+1
  6182   0028BA  C02A  F06B         	movff	?___fldiv+2,_PressSensor+2
  6183   0028BE  C02B  F06C         	movff	?___fldiv+3,_PressSensor+3
  6184   0028C2                     
  6185                           ;Main_program.c: 115:     PressPercent = (PressSensor * 100) / 65;
  6186   0028C2  0E00               	movlw	0
  6187   0028C4  6E13               	movwf	___flmul@a^0,c
  6188   0028C6  0E00               	movlw	0
  6189   0028C8  6E14               	movwf	(___flmul@a+1)^0,c
  6190   0028CA  0EC8               	movlw	200
  6191   0028CC  6E15               	movwf	(___flmul@a+2)^0,c
  6192   0028CE  0E42               	movlw	66
  6193   0028D0  6E16               	movwf	(___flmul@a+3)^0,c
  6194   0028D2  C069  F00F         	movff	_PressSensor,___flmul@b
  6195   0028D6  C06A  F010         	movff	_PressSensor+1,___flmul@b+1
  6196   0028DA  C06B  F011         	movff	_PressSensor+2,___flmul@b+2
  6197   0028DE  C06C  F012         	movff	_PressSensor+3,___flmul@b+3
  6198   0028E2  ECAD  F00A         	call	___flmul	;wreg free
  6199   0028E6  C00F  F028         	movff	?___flmul,___fldiv@b
  6200   0028EA  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6201   0028EE  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6202   0028F2  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6203   0028F6  0E00               	movlw	0
  6204   0028F8  6E2C               	movwf	___fldiv@a^0,c
  6205   0028FA  0E00               	movlw	0
  6206   0028FC  6E2D               	movwf	(___fldiv@a+1)^0,c
  6207   0028FE  0E82               	movlw	130
  6208   002900  6E2E               	movwf	(___fldiv@a+2)^0,c
  6209   002902  0E42               	movlw	66
  6210   002904  6E2F               	movwf	(___fldiv@a+3)^0,c
  6211   002906  ECC2  F00C         	call	___fldiv	;wreg free
  6212   00290A  C028  F0CA         	movff	?___fldiv,_PressPercent
  6213   00290E  C029  F0CB         	movff	?___fldiv+1,_PressPercent+1
  6214   002912  C02A  F0CC         	movff	?___fldiv+2,_PressPercent+2
  6215   002916  C02B  F0CD         	movff	?___fldiv+3,_PressPercent+3
  6216   00291A  0012               	return		;funcret
  6217   00291C                     __end_of_equation_SENSOR:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function ___xxtofl *****************
  6221 ;; Defined at:
  6222 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  sign            1    wreg     unsigned char 
  6225 ;;  val             4    0[COMRAM] long 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  sign            1    8[COMRAM] unsigned char 
  6228 ;;  arg             4   10[COMRAM] unsigned long 
  6229 ;;  exp             1    9[COMRAM] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  4    0[COMRAM] unsigned char 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6239 ;;      Params:         4       0       0       0       0       0       0
  6240 ;;      Locals:         6       0       0       0       0       0       0
  6241 ;;      Temps:          4       0       0       0       0       0       0
  6242 ;;      Totals:        14       0       0       0       0       0       0
  6243 ;;Total ram usage:       14 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_equation_SENSOR
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text30
  6253   00214A                     __ptext30:
  6254                           	callstack 0
  6255   00214A                     ___xxtofl:
  6256                           	callstack 29
  6257                           
  6258                           ;incstack = 0
  6259                           ;___xxtofl@sign stored from wreg
  6260   00214A  6E09               	movwf	___xxtofl@sign^0,c
  6261   00214C  5009               	movf	___xxtofl@sign^0,w,c
  6262   00214E  B4D8               	btfsc	status,2,c
  6263   002150  EFAC  F010         	goto	u3651
  6264   002154  EFAE  F010         	goto	u3650
  6265   002158                     u3651:
  6266   002158  EFD0  F010         	goto	l781
  6267   00215C                     u3650:
  6268   00215C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6269   00215E  EFB5  F010         	goto	u3660
  6270   002162  EFB3  F010         	goto	u3661
  6271   002166                     u3661:
  6272   002166  EFD0  F010         	goto	l781
  6273   00216A                     u3660:
  6274   00216A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6275   00216E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6276   002172  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6277   002176  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6278   00217A  1E05               	comf	??___xxtofl^0,f,c
  6279   00217C  1E06               	comf	(??___xxtofl+1)^0,f,c
  6280   00217E  1E07               	comf	(??___xxtofl+2)^0,f,c
  6281   002180  1E08               	comf	(??___xxtofl+3)^0,f,c
  6282   002182  2A05               	incf	??___xxtofl^0,f,c
  6283   002184  0E00               	movlw	0
  6284   002186  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6285   002188  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6286   00218A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6287   00218C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6288   002190  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6289   002194  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6290   002198  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6291   00219C  EFD8  F010         	goto	l3327
  6292   0021A0                     l781:
  6293   0021A0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6294   0021A4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6295   0021A8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6296   0021AC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6297   0021B0                     l3327:
  6298   0021B0  5001               	movf	___xxtofl@val^0,w,c
  6299   0021B2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6300   0021B4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6301   0021B6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6302   0021B8  A4D8               	btfss	status,2,c
  6303   0021BA  EFE1  F010         	goto	u3671
  6304   0021BE  EFE3  F010         	goto	u3670
  6305   0021C2                     u3671:
  6306   0021C2  EFED  F010         	goto	l3333
  6307   0021C6                     u3670:
  6308   0021C6  0E00               	movlw	0
  6309   0021C8  6E01               	movwf	?___xxtofl^0,c
  6310   0021CA  0E00               	movlw	0
  6311   0021CC  6E02               	movwf	(?___xxtofl+1)^0,c
  6312   0021CE  0E00               	movlw	0
  6313   0021D0  6E03               	movwf	(?___xxtofl+2)^0,c
  6314   0021D2  0E00               	movlw	0
  6315   0021D4  6E04               	movwf	(?___xxtofl+3)^0,c
  6316   0021D6  EF7E  F011         	goto	l784
  6317   0021DA                     l3333:
  6318   0021DA  0E96               	movlw	150
  6319   0021DC  6E0A               	movwf	___xxtofl@exp^0,c
  6320   0021DE  EFF7  F010         	goto	l3337
  6321   0021E2                     l3335:
  6322   0021E2  2A0A               	incf	___xxtofl@exp^0,f,c
  6323   0021E4  90D8               	bcf	status,0,c
  6324   0021E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6325   0021E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6326   0021EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6327   0021EC  320B               	rrcf	___xxtofl@arg^0,f,c
  6328   0021EE                     l3337:
  6329   0021EE  0E00               	movlw	0
  6330   0021F0  140B               	andwf	___xxtofl@arg^0,w,c
  6331   0021F2  6E05               	movwf	??___xxtofl^0,c
  6332   0021F4  0E00               	movlw	0
  6333   0021F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6334   0021F8  6E06               	movwf	(??___xxtofl+1)^0,c
  6335   0021FA  0E00               	movlw	0
  6336   0021FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6337   0021FE  6E07               	movwf	(??___xxtofl+2)^0,c
  6338   002200  0EFE               	movlw	254
  6339   002202  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6340   002204  6E08               	movwf	(??___xxtofl+3)^0,c
  6341   002206  5005               	movf	??___xxtofl^0,w,c
  6342   002208  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6343   00220A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6344   00220C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6345   00220E  A4D8               	btfss	status,2,c
  6346   002210  EF0C  F011         	goto	u3681
  6347   002214  EF0E  F011         	goto	u3680
  6348   002218                     u3681:
  6349   002218  EFF1  F010         	goto	l3335
  6350   00221C                     u3680:
  6351   00221C  EF1C  F011         	goto	l788
  6352   002220                     l3339:
  6353   002220  2A0A               	incf	___xxtofl@exp^0,f,c
  6354   002222  0E01               	movlw	1
  6355   002224  260B               	addwf	___xxtofl@arg^0,f,c
  6356   002226  0E00               	movlw	0
  6357   002228  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6358   00222A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6359   00222C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6360   00222E  90D8               	bcf	status,0,c
  6361   002230  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6362   002232  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6363   002234  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6364   002236  320B               	rrcf	___xxtofl@arg^0,f,c
  6365   002238                     l788:
  6366   002238  0E00               	movlw	0
  6367   00223A  140B               	andwf	___xxtofl@arg^0,w,c
  6368   00223C  6E05               	movwf	??___xxtofl^0,c
  6369   00223E  0E00               	movlw	0
  6370   002240  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6371   002242  6E06               	movwf	(??___xxtofl+1)^0,c
  6372   002244  0E00               	movlw	0
  6373   002246  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6374   002248  6E07               	movwf	(??___xxtofl+2)^0,c
  6375   00224A  0EFF               	movlw	255
  6376   00224C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6377   00224E  6E08               	movwf	(??___xxtofl+3)^0,c
  6378   002250  5005               	movf	??___xxtofl^0,w,c
  6379   002252  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6380   002254  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6381   002256  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6382   002258  A4D8               	btfss	status,2,c
  6383   00225A  EF31  F011         	goto	u3691
  6384   00225E  EF33  F011         	goto	u3690
  6385   002262                     u3691:
  6386   002262  EF10  F011         	goto	l3339
  6387   002266                     u3690:
  6388   002266  EF3B  F011         	goto	l3347
  6389   00226A                     l3345:
  6390   00226A  060A               	decf	___xxtofl@exp^0,f,c
  6391   00226C  90D8               	bcf	status,0,c
  6392   00226E  360B               	rlcf	___xxtofl@arg^0,f,c
  6393   002270  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6394   002272  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6395   002274  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6396   002276                     l3347:
  6397   002276  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6398   002278  EF40  F011         	goto	u3701
  6399   00227C  EF42  F011         	goto	u3700
  6400   002280                     u3701:
  6401   002280  EF4A  F011         	goto	l795
  6402   002284                     u3700:
  6403   002284  0E02               	movlw	2
  6404   002286  600A               	cpfslt	___xxtofl@exp^0,c
  6405   002288  EF48  F011         	goto	u3711
  6406   00228C  EF4A  F011         	goto	u3710
  6407   002290                     u3711:
  6408   002290  EF35  F011         	goto	l3345
  6409   002294                     u3710:
  6410   002294                     l795:
  6411   002294  B00A               	btfsc	___xxtofl@exp^0,0,c
  6412   002296  EF4F  F011         	goto	u3721
  6413   00229A  EF51  F011         	goto	u3720
  6414   00229E                     u3721:
  6415   00229E  EF52  F011         	goto	l3353
  6416   0022A2                     u3720:
  6417   0022A2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6418   0022A4                     l3353:
  6419   0022A4  90D8               	bcf	status,0,c
  6420   0022A6  320A               	rrcf	___xxtofl@exp^0,f,c
  6421   0022A8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6422   0022AC  6A06               	clrf	(??___xxtofl+1)^0,c
  6423   0022AE  6A07               	clrf	(??___xxtofl+2)^0,c
  6424   0022B0  6A08               	clrf	(??___xxtofl+3)^0,c
  6425   0022B2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6426   0022B6  6A07               	clrf	(??___xxtofl+2)^0,c
  6427   0022B8  6A06               	clrf	(??___xxtofl+1)^0,c
  6428   0022BA  6A05               	clrf	??___xxtofl^0,c
  6429   0022BC  5005               	movf	??___xxtofl^0,w,c
  6430   0022BE  120B               	iorwf	___xxtofl@arg^0,f,c
  6431   0022C0  5006               	movf	(??___xxtofl+1)^0,w,c
  6432   0022C2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6433   0022C4  5007               	movf	(??___xxtofl+2)^0,w,c
  6434   0022C6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6435   0022C8  5008               	movf	(??___xxtofl+3)^0,w,c
  6436   0022CA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6437   0022CC  5009               	movf	___xxtofl@sign^0,w,c
  6438   0022CE  B4D8               	btfsc	status,2,c
  6439   0022D0  EF6C  F011         	goto	u3731
  6440   0022D4  EF6E  F011         	goto	u3730
  6441   0022D8                     u3731:
  6442   0022D8  EF76  F011         	goto	l3363
  6443   0022DC                     u3730:
  6444   0022DC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6445   0022DE  EF75  F011         	goto	u3740
  6446   0022E2  EF73  F011         	goto	u3741
  6447   0022E6                     u3741:
  6448   0022E6  EF76  F011         	goto	l3363
  6449   0022EA                     u3740:
  6450   0022EA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6451   0022EC                     l3363:
  6452   0022EC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6453   0022F0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6454   0022F4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6455   0022F8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6456   0022FC                     l784:
  6457   0022FC  0012               	return		;funcret
  6458   0022FE                     __end_of___xxtofl:
  6459                           	callstack 0
  6460                           
  6461 ;; *************** function ___flmul *****************
  6462 ;; Defined at:
  6463 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  b               4   14[COMRAM] unsigned char 
  6466 ;;  a               4   18[COMRAM] unsigned char 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  prod            4   33[COMRAM] struct .
  6469 ;;  grs             4   28[COMRAM] unsigned long 
  6470 ;;  temp            2   37[COMRAM] struct .
  6471 ;;  bexp            1   32[COMRAM] unsigned char 
  6472 ;;  aexp            1   27[COMRAM] unsigned char 
  6473 ;;  sign            1   26[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   14[COMRAM] unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, prodl, prodh
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         8       0       0       0       0       0       0
  6484 ;;      Locals:        13       0       0       0       0       0       0
  6485 ;;      Temps:          4       0       0       0       0       0       0
  6486 ;;      Totals:        25       0       0       0       0       0       0
  6487 ;;Total ram usage:       25 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_equation_SENSOR
  6493 ;;		_efgtoa
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text31
  6498   00155A                     __ptext31:
  6499                           	callstack 0
  6500   00155A                     ___flmul:
  6501                           	callstack 25
  6502   00155A  5012               	movf	(___flmul@b+3)^0,w,c
  6503   00155C  0B80               	andlw	128
  6504   00155E  6E1B               	movwf	___flmul@sign^0,c
  6505   001560  5012               	movf	(___flmul@b+3)^0,w,c
  6506   001562  2412               	addwf	(___flmul@b+3)^0,w,c
  6507   001564  6E21               	movwf	___flmul@bexp^0,c
  6508   001566  AE11               	btfss	(___flmul@b+2)^0,7,c
  6509   001568  EFB8  F00A         	goto	u4491
  6510   00156C  EFBA  F00A         	goto	u4490
  6511   001570                     u4491:
  6512   001570  EFBB  F00A         	goto	l3847
  6513   001574                     u4490:
  6514   001574  8021               	bsf	___flmul@bexp^0,0,c
  6515   001576                     l3847:
  6516   001576  5021               	movf	___flmul@bexp^0,w,c
  6517   001578  B4D8               	btfsc	status,2,c
  6518   00157A  EFC1  F00A         	goto	u4501
  6519   00157E  EFC3  F00A         	goto	u4500
  6520   001582                     u4501:
  6521   001582  EFD6  F00A         	goto	l3855
  6522   001586                     u4500:
  6523   001586  2821               	incf	___flmul@bexp^0,w,c
  6524   001588  A4D8               	btfss	status,2,c
  6525   00158A  EFC9  F00A         	goto	u4511
  6526   00158E  EFCB  F00A         	goto	u4510
  6527   001592                     u4511:
  6528   001592  EFD3  F00A         	goto	l3853
  6529   001596                     u4510:
  6530   001596  0E00               	movlw	0
  6531   001598  6E0F               	movwf	___flmul@b^0,c
  6532   00159A  0E00               	movlw	0
  6533   00159C  6E10               	movwf	(___flmul@b+1)^0,c
  6534   00159E  0E00               	movlw	0
  6535   0015A0  6E11               	movwf	(___flmul@b+2)^0,c
  6536   0015A2  0E00               	movlw	0
  6537   0015A4  6E12               	movwf	(___flmul@b+3)^0,c
  6538   0015A6                     l3853:
  6539   0015A6  8E11               	bsf	(___flmul@b+2)^0,7,c
  6540   0015A8  EFDE  F00A         	goto	l3857
  6541   0015AC                     l3855:
  6542   0015AC  0E00               	movlw	0
  6543   0015AE  6E0F               	movwf	___flmul@b^0,c
  6544   0015B0  0E00               	movlw	0
  6545   0015B2  6E10               	movwf	(___flmul@b+1)^0,c
  6546   0015B4  0E00               	movlw	0
  6547   0015B6  6E11               	movwf	(___flmul@b+2)^0,c
  6548   0015B8  0E00               	movlw	0
  6549   0015BA  6E12               	movwf	(___flmul@b+3)^0,c
  6550   0015BC                     l3857:
  6551   0015BC  5016               	movf	(___flmul@a+3)^0,w,c
  6552   0015BE  0B80               	andlw	128
  6553   0015C0  1A1B               	xorwf	___flmul@sign^0,f,c
  6554   0015C2  5016               	movf	(___flmul@a+3)^0,w,c
  6555   0015C4  2416               	addwf	(___flmul@a+3)^0,w,c
  6556   0015C6  6E1C               	movwf	___flmul@aexp^0,c
  6557   0015C8  AE15               	btfss	(___flmul@a+2)^0,7,c
  6558   0015CA  EFE9  F00A         	goto	u4521
  6559   0015CE  EFEB  F00A         	goto	u4520
  6560   0015D2                     u4521:
  6561   0015D2  EFEC  F00A         	goto	l3865
  6562   0015D6                     u4520:
  6563   0015D6  801C               	bsf	___flmul@aexp^0,0,c
  6564   0015D8                     l3865:
  6565   0015D8  501C               	movf	___flmul@aexp^0,w,c
  6566   0015DA  B4D8               	btfsc	status,2,c
  6567   0015DC  EFF2  F00A         	goto	u4531
  6568   0015E0  EFF4  F00A         	goto	u4530
  6569   0015E4                     u4531:
  6570   0015E4  EF07  F00B         	goto	l3873
  6571   0015E8                     u4530:
  6572   0015E8  281C               	incf	___flmul@aexp^0,w,c
  6573   0015EA  A4D8               	btfss	status,2,c
  6574   0015EC  EFFA  F00A         	goto	u4541
  6575   0015F0  EFFC  F00A         	goto	u4540
  6576   0015F4                     u4541:
  6577   0015F4  EF04  F00B         	goto	l3871
  6578   0015F8                     u4540:
  6579   0015F8  0E00               	movlw	0
  6580   0015FA  6E13               	movwf	___flmul@a^0,c
  6581   0015FC  0E00               	movlw	0
  6582   0015FE  6E14               	movwf	(___flmul@a+1)^0,c
  6583   001600  0E00               	movlw	0
  6584   001602  6E15               	movwf	(___flmul@a+2)^0,c
  6585   001604  0E00               	movlw	0
  6586   001606  6E16               	movwf	(___flmul@a+3)^0,c
  6587   001608                     l3871:
  6588   001608  8E15               	bsf	(___flmul@a+2)^0,7,c
  6589   00160A  EF0F  F00B         	goto	l740
  6590   00160E                     l3873:
  6591   00160E  0E00               	movlw	0
  6592   001610  6E13               	movwf	___flmul@a^0,c
  6593   001612  0E00               	movlw	0
  6594   001614  6E14               	movwf	(___flmul@a+1)^0,c
  6595   001616  0E00               	movlw	0
  6596   001618  6E15               	movwf	(___flmul@a+2)^0,c
  6597   00161A  0E00               	movlw	0
  6598   00161C  6E16               	movwf	(___flmul@a+3)^0,c
  6599   00161E                     l740:
  6600   00161E  501C               	movf	___flmul@aexp^0,w,c
  6601   001620  B4D8               	btfsc	status,2,c
  6602   001622  EF15  F00B         	goto	u4551
  6603   001626  EF17  F00B         	goto	u4550
  6604   00162A                     u4551:
  6605   00162A  EF1F  F00B         	goto	l3877
  6606   00162E                     u4550:
  6607   00162E  5021               	movf	___flmul@bexp^0,w,c
  6608   001630  A4D8               	btfss	status,2,c
  6609   001632  EF1D  F00B         	goto	u4561
  6610   001636  EF1F  F00B         	goto	u4560
  6611   00163A                     u4561:
  6612   00163A  EF29  F00B         	goto	l3881
  6613   00163E                     u4560:
  6614   00163E                     l3877:
  6615   00163E  0E00               	movlw	0
  6616   001640  6E0F               	movwf	?___flmul^0,c
  6617   001642  0E00               	movlw	0
  6618   001644  6E10               	movwf	(?___flmul+1)^0,c
  6619   001646  0E00               	movlw	0
  6620   001648  6E11               	movwf	(?___flmul+2)^0,c
  6621   00164A  0E00               	movlw	0
  6622   00164C  6E12               	movwf	(?___flmul+3)^0,c
  6623   00164E  EFC1  F00C         	goto	l744
  6624   001652                     l3881:
  6625   001652  5015               	movf	(___flmul@a+2)^0,w,c
  6626   001654  020F               	mulwf	___flmul@b^0,c
  6627   001656  CFF3 F026          	movff	prodl,___flmul@temp
  6628   00165A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6629   00165E  5026               	movf	___flmul@temp^0,w,c
  6630   001660  6E1D               	movwf	___flmul@grs^0,c
  6631   001662  6A1E               	clrf	(___flmul@grs+1)^0,c
  6632   001664  6A1F               	clrf	(___flmul@grs+2)^0,c
  6633   001666  6A20               	clrf	(___flmul@grs+3)^0,c
  6634   001668  5027               	movf	(___flmul@temp+1)^0,w,c
  6635   00166A  6E22               	movwf	___flmul@prod^0,c
  6636   00166C  6A23               	clrf	(___flmul@prod+1)^0,c
  6637   00166E  6A24               	clrf	(___flmul@prod+2)^0,c
  6638   001670  6A25               	clrf	(___flmul@prod+3)^0,c
  6639   001672  5014               	movf	(___flmul@a+1)^0,w,c
  6640   001674  0210               	mulwf	(___flmul@b+1)^0,c
  6641   001676  CFF3 F026          	movff	prodl,___flmul@temp
  6642   00167A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6643   00167E  5026               	movf	___flmul@temp^0,w,c
  6644   001680  261D               	addwf	___flmul@grs^0,f,c
  6645   001682  0E00               	movlw	0
  6646   001684  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6647   001686  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6648   001688  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6649   00168A  5027               	movf	(___flmul@temp+1)^0,w,c
  6650   00168C  2622               	addwf	___flmul@prod^0,f,c
  6651   00168E  0E00               	movlw	0
  6652   001690  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6653   001692  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6654   001694  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6655   001696  5013               	movf	___flmul@a^0,w,c
  6656   001698  0211               	mulwf	(___flmul@b+2)^0,c
  6657   00169A  CFF3 F026          	movff	prodl,___flmul@temp
  6658   00169E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6659   0016A2  5026               	movf	___flmul@temp^0,w,c
  6660   0016A4  261D               	addwf	___flmul@grs^0,f,c
  6661   0016A6  0E00               	movlw	0
  6662   0016A8  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6663   0016AA  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6664   0016AC  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6665   0016AE  5027               	movf	(___flmul@temp+1)^0,w,c
  6666   0016B0  2622               	addwf	___flmul@prod^0,f,c
  6667   0016B2  0E00               	movlw	0
  6668   0016B4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6669   0016B6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6670   0016B8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6671   0016BA  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6672   0016BE  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6673   0016C2  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6674   0016C6  6A1D               	clrf	___flmul@grs^0,c
  6675   0016C8  5013               	movf	___flmul@a^0,w,c
  6676   0016CA  0210               	mulwf	(___flmul@b+1)^0,c
  6677   0016CC  CFF3 F026          	movff	prodl,___flmul@temp
  6678   0016D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6679   0016D4  5026               	movf	___flmul@temp^0,w,c
  6680   0016D6  261D               	addwf	___flmul@grs^0,f,c
  6681   0016D8  5027               	movf	(___flmul@temp+1)^0,w,c
  6682   0016DA  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6683   0016DC  0E00               	movlw	0
  6684   0016DE  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6685   0016E0  0E00               	movlw	0
  6686   0016E2  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6687   0016E4  5014               	movf	(___flmul@a+1)^0,w,c
  6688   0016E6  020F               	mulwf	___flmul@b^0,c
  6689   0016E8  CFF3 F026          	movff	prodl,___flmul@temp
  6690   0016EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  6691   0016F0  5026               	movf	___flmul@temp^0,w,c
  6692   0016F2  261D               	addwf	___flmul@grs^0,f,c
  6693   0016F4  5027               	movf	(___flmul@temp+1)^0,w,c
  6694   0016F6  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6695   0016F8  0E00               	movlw	0
  6696   0016FA  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6697   0016FC  0E00               	movlw	0
  6698   0016FE  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6699   001700  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6700   001704  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6701   001708  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6702   00170C  6A1D               	clrf	___flmul@grs^0,c
  6703   00170E  5013               	movf	___flmul@a^0,w,c
  6704   001710  020F               	mulwf	___flmul@b^0,c
  6705   001712  CFF3 F026          	movff	prodl,___flmul@temp
  6706   001716  CFF4 F027          	movff	prodh,___flmul@temp+1
  6707   00171A  5026               	movf	___flmul@temp^0,w,c
  6708   00171C  261D               	addwf	___flmul@grs^0,f,c
  6709   00171E  5027               	movf	(___flmul@temp+1)^0,w,c
  6710   001720  221E               	addwfc	(___flmul@grs+1)^0,f,c
  6711   001722  0E00               	movlw	0
  6712   001724  221F               	addwfc	(___flmul@grs+2)^0,f,c
  6713   001726  0E00               	movlw	0
  6714   001728  2220               	addwfc	(___flmul@grs+3)^0,f,c
  6715   00172A  5015               	movf	(___flmul@a+2)^0,w,c
  6716   00172C  0210               	mulwf	(___flmul@b+1)^0,c
  6717   00172E  CFF3 F026          	movff	prodl,___flmul@temp
  6718   001732  CFF4 F027          	movff	prodh,___flmul@temp+1
  6719   001736  5026               	movf	___flmul@temp^0,w,c
  6720   001738  2622               	addwf	___flmul@prod^0,f,c
  6721   00173A  5027               	movf	(___flmul@temp+1)^0,w,c
  6722   00173C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6723   00173E  0E00               	movlw	0
  6724   001740  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6725   001742  0E00               	movlw	0
  6726   001744  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6727   001746  5014               	movf	(___flmul@a+1)^0,w,c
  6728   001748  0211               	mulwf	(___flmul@b+2)^0,c
  6729   00174A  CFF3 F026          	movff	prodl,___flmul@temp
  6730   00174E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6731   001752  5026               	movf	___flmul@temp^0,w,c
  6732   001754  2622               	addwf	___flmul@prod^0,f,c
  6733   001756  5027               	movf	(___flmul@temp+1)^0,w,c
  6734   001758  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6735   00175A  0E00               	movlw	0
  6736   00175C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6737   00175E  0E00               	movlw	0
  6738   001760  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6739   001762  5015               	movf	(___flmul@a+2)^0,w,c
  6740   001764  0211               	mulwf	(___flmul@b+2)^0,c
  6741   001766  CFF3 F026          	movff	prodl,___flmul@temp
  6742   00176A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6743   00176E  5026               	movf	___flmul@temp^0,w,c
  6744   001770  6E17               	movwf	??___flmul^0,c
  6745   001772  5027               	movf	(___flmul@temp+1)^0,w,c
  6746   001774  6E18               	movwf	(??___flmul+1)^0,c
  6747   001776  6A19               	clrf	(??___flmul+2)^0,c
  6748   001778  6A1A               	clrf	(??___flmul+3)^0,c
  6749   00177A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6750   00177E  C018  F019         	movff	??___flmul+1,??___flmul+2
  6751   001782  C017  F018         	movff	??___flmul,??___flmul+1
  6752   001786  6A17               	clrf	??___flmul^0,c
  6753   001788  5017               	movf	??___flmul^0,w,c
  6754   00178A  2622               	addwf	___flmul@prod^0,f,c
  6755   00178C  5018               	movf	(??___flmul+1)^0,w,c
  6756   00178E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6757   001790  5019               	movf	(??___flmul+2)^0,w,c
  6758   001792  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6759   001794  501A               	movf	(??___flmul+3)^0,w,c
  6760   001796  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6761   001798  C01D  F017         	movff	___flmul@grs,??___flmul
  6762   00179C  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
  6763   0017A0  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
  6764   0017A4  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
  6765   0017A8  0E19               	movlw	25
  6766   0017AA  EFDC  F00B         	goto	u4570
  6767   0017AE                     u4575:
  6768   0017AE  90D8               	bcf	status,0,c
  6769   0017B0  321A               	rrcf	(??___flmul+3)^0,f,c
  6770   0017B2  3219               	rrcf	(??___flmul+2)^0,f,c
  6771   0017B4  3218               	rrcf	(??___flmul+1)^0,f,c
  6772   0017B6  3217               	rrcf	??___flmul^0,f,c
  6773   0017B8                     u4570:
  6774   0017B8  2EE8               	decfsz	wreg,f,c
  6775   0017BA  EFD7  F00B         	goto	u4575
  6776   0017BE  5017               	movf	??___flmul^0,w,c
  6777   0017C0  2622               	addwf	___flmul@prod^0,f,c
  6778   0017C2  5018               	movf	(??___flmul+1)^0,w,c
  6779   0017C4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6780   0017C6  5019               	movf	(??___flmul+2)^0,w,c
  6781   0017C8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6782   0017CA  501A               	movf	(??___flmul+3)^0,w,c
  6783   0017CC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6784   0017CE  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  6785   0017D2  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  6786   0017D6  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  6787   0017DA  6A1D               	clrf	___flmul@grs^0,c
  6788   0017DC  501C               	movf	___flmul@aexp^0,w,c
  6789   0017DE  C021  F017         	movff	___flmul@bexp,??___flmul
  6790   0017E2  6A18               	clrf	(??___flmul+1)^0,c
  6791   0017E4  2617               	addwf	??___flmul^0,f,c
  6792   0017E6  0E00               	movlw	0
  6793   0017E8  2218               	addwfc	(??___flmul+1)^0,f,c
  6794   0017EA  0E82               	movlw	130
  6795   0017EC  2417               	addwf	??___flmul^0,w,c
  6796   0017EE  6E26               	movwf	___flmul@temp^0,c
  6797   0017F0  0EFF               	movlw	255
  6798   0017F2  2018               	addwfc	(??___flmul+1)^0,w,c
  6799   0017F4  6E27               	movwf	(___flmul@temp+1)^0,c
  6800   0017F6  EF12  F00C         	goto	l3929
  6801   0017FA                     l3923:
  6802   0017FA  90D8               	bcf	status,0,c
  6803   0017FC  3622               	rlcf	___flmul@prod^0,f,c
  6804   0017FE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6805   001800  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6806   001802  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6807   001804  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6808   001806  EF07  F00C         	goto	u4581
  6809   00180A  EF09  F00C         	goto	u4580
  6810   00180E                     u4581:
  6811   00180E  EF0A  F00C         	goto	l747
  6812   001812                     u4580:
  6813   001812  8022               	bsf	___flmul@prod^0,0,c
  6814   001814                     l747:
  6815   001814  90D8               	bcf	status,0,c
  6816   001816  361D               	rlcf	___flmul@grs^0,f,c
  6817   001818  361E               	rlcf	(___flmul@grs+1)^0,f,c
  6818   00181A  361F               	rlcf	(___flmul@grs+2)^0,f,c
  6819   00181C  3620               	rlcf	(___flmul@grs+3)^0,f,c
  6820   00181E  0626               	decf	___flmul@temp^0,f,c
  6821   001820  A0D8               	btfss	status,0,c
  6822   001822  0627               	decf	(___flmul@temp+1)^0,f,c
  6823   001824                     l3929:
  6824   001824  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6825   001826  EF17  F00C         	goto	u4591
  6826   00182A  EF19  F00C         	goto	u4590
  6827   00182E                     u4591:
  6828   00182E  EFFD  F00B         	goto	l3923
  6829   001832                     u4590:
  6830   001832  0E00               	movlw	0
  6831   001834  6E1C               	movwf	___flmul@aexp^0,c
  6832   001836  AE20               	btfss	(___flmul@grs+3)^0,7,c
  6833   001838  EF20  F00C         	goto	u4601
  6834   00183C  EF22  F00C         	goto	u4600
  6835   001840                     u4601:
  6836   001840  EF46  F00C         	goto	l749
  6837   001844                     u4600:
  6838   001844  0EFF               	movlw	255
  6839   001846  141D               	andwf	___flmul@grs^0,w,c
  6840   001848  6E17               	movwf	??___flmul^0,c
  6841   00184A  0EFF               	movlw	255
  6842   00184C  141E               	andwf	(___flmul@grs+1)^0,w,c
  6843   00184E  6E18               	movwf	(??___flmul+1)^0,c
  6844   001850  0EFF               	movlw	255
  6845   001852  141F               	andwf	(___flmul@grs+2)^0,w,c
  6846   001854  6E19               	movwf	(??___flmul+2)^0,c
  6847   001856  0E7F               	movlw	127
  6848   001858  1420               	andwf	(___flmul@grs+3)^0,w,c
  6849   00185A  6E1A               	movwf	(??___flmul+3)^0,c
  6850   00185C  5017               	movf	??___flmul^0,w,c
  6851   00185E  1018               	iorwf	(??___flmul+1)^0,w,c
  6852   001860  1019               	iorwf	(??___flmul+2)^0,w,c
  6853   001862  101A               	iorwf	(??___flmul+3)^0,w,c
  6854   001864  B4D8               	btfsc	status,2,c
  6855   001866  EF37  F00C         	goto	u4611
  6856   00186A  EF39  F00C         	goto	u4610
  6857   00186E                     u4611:
  6858   00186E  EF3D  F00C         	goto	l750
  6859   001872                     u4610:
  6860   001872                     l3937:
  6861   001872  0E01               	movlw	1
  6862   001874  6E1C               	movwf	___flmul@aexp^0,c
  6863   001876  EF46  F00C         	goto	l749
  6864   00187A                     l750:
  6865   00187A  A022               	btfss	___flmul@prod^0,0,c
  6866   00187C  EF42  F00C         	goto	u4621
  6867   001880  EF44  F00C         	goto	u4620
  6868   001884                     u4621:
  6869   001884  EF46  F00C         	goto	l749
  6870   001888                     u4620:
  6871   001888  EF39  F00C         	goto	l3937
  6872   00188C                     l749:
  6873   00188C  501C               	movf	___flmul@aexp^0,w,c
  6874   00188E  B4D8               	btfsc	status,2,c
  6875   001890  EF4C  F00C         	goto	u4631
  6876   001894  EF4E  F00C         	goto	u4630
  6877   001898                     u4631:
  6878   001898  EF72  F00C         	goto	l3949
  6879   00189C                     u4630:
  6880   00189C  0E01               	movlw	1
  6881   00189E  2622               	addwf	___flmul@prod^0,f,c
  6882   0018A0  0E00               	movlw	0
  6883   0018A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6884   0018A4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6885   0018A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6886   0018A8  A025               	btfss	(___flmul@prod+3)^0,0,c
  6887   0018AA  EF59  F00C         	goto	u4641
  6888   0018AE  EF5B  F00C         	goto	u4640
  6889   0018B2                     u4641:
  6890   0018B2  EF72  F00C         	goto	l3949
  6891   0018B6                     u4640:
  6892   0018B6  C022  F017         	movff	___flmul@prod,??___flmul
  6893   0018BA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6894   0018BE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6895   0018C2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6896   0018C6  341A               	rlcf	(??___flmul+3)^0,w,c
  6897   0018C8  321A               	rrcf	(??___flmul+3)^0,f,c
  6898   0018CA  3219               	rrcf	(??___flmul+2)^0,f,c
  6899   0018CC  3218               	rrcf	(??___flmul+1)^0,f,c
  6900   0018CE  3217               	rrcf	??___flmul^0,f,c
  6901   0018D0  C017  F022         	movff	??___flmul,___flmul@prod
  6902   0018D4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6903   0018D8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6904   0018DC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6905   0018E0  4A26               	infsnz	___flmul@temp^0,f,c
  6906   0018E2  2A27               	incf	(___flmul@temp+1)^0,f,c
  6907   0018E4                     l3949:
  6908   0018E4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6909   0018E6  EF7D  F00C         	goto	u4651
  6910   0018EA  5027               	movf	(___flmul@temp+1)^0,w,c
  6911   0018EC  E108               	bnz	u4650
  6912   0018EE  2826               	incf	___flmul@temp^0,w,c
  6913   0018F0  A0D8               	btfss	status,0,c
  6914   0018F2  EF7D  F00C         	goto	u4651
  6915   0018F6  EF7F  F00C         	goto	u4650
  6916   0018FA                     u4651:
  6917   0018FA  EF89  F00C         	goto	l3953
  6918   0018FE                     u4650:
  6919   0018FE  0E00               	movlw	0
  6920   001900  6E22               	movwf	___flmul@prod^0,c
  6921   001902  0E00               	movlw	0
  6922   001904  6E23               	movwf	(___flmul@prod+1)^0,c
  6923   001906  0E80               	movlw	128
  6924   001908  6E24               	movwf	(___flmul@prod+2)^0,c
  6925   00190A  0E7F               	movlw	127
  6926   00190C  6E25               	movwf	(___flmul@prod+3)^0,c
  6927   00190E  EFB7  F00C         	goto	l3965
  6928   001912                     l3953:
  6929   001912  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6930   001914  EF96  F00C         	goto	u4660
  6931   001918  5027               	movf	(___flmul@temp+1)^0,w,c
  6932   00191A  E106               	bnz	u4661
  6933   00191C  0426               	decf	___flmul@temp^0,w,c
  6934   00191E  B0D8               	btfsc	status,0,c
  6935   001920  EF94  F00C         	goto	u4661
  6936   001924  EF96  F00C         	goto	u4660
  6937   001928                     u4661:
  6938   001928  EFA2  F00C         	goto	l757
  6939   00192C                     u4660:
  6940   00192C  0E00               	movlw	0
  6941   00192E  6E22               	movwf	___flmul@prod^0,c
  6942   001930  0E00               	movlw	0
  6943   001932  6E23               	movwf	(___flmul@prod+1)^0,c
  6944   001934  0E00               	movlw	0
  6945   001936  6E24               	movwf	(___flmul@prod+2)^0,c
  6946   001938  0E00               	movlw	0
  6947   00193A  6E25               	movwf	(___flmul@prod+3)^0,c
  6948   00193C  0E00               	movlw	0
  6949   00193E  6E1B               	movwf	___flmul@sign^0,c
  6950   001940  EFB7  F00C         	goto	l3965
  6951   001944                     l757:
  6952   001944  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6953   001948  0EFF               	movlw	255
  6954   00194A  1622               	andwf	___flmul@prod^0,f,c
  6955   00194C  0EFF               	movlw	255
  6956   00194E  1623               	andwf	(___flmul@prod+1)^0,f,c
  6957   001950  0E7F               	movlw	127
  6958   001952  1624               	andwf	(___flmul@prod+2)^0,f,c
  6959   001954  0E00               	movlw	0
  6960   001956  1625               	andwf	(___flmul@prod+3)^0,f,c
  6961   001958  A021               	btfss	___flmul@bexp^0,0,c
  6962   00195A  EFB1  F00C         	goto	u4671
  6963   00195E  EFB3  F00C         	goto	u4670
  6964   001962                     u4671:
  6965   001962  EFB4  F00C         	goto	l3963
  6966   001966                     u4670:
  6967   001966  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6968   001968                     l3963:
  6969   001968  90D8               	bcf	status,0,c
  6970   00196A  3021               	rrcf	___flmul@bexp^0,w,c
  6971   00196C  6E25               	movwf	(___flmul@prod+3)^0,c
  6972   00196E                     l3965:
  6973   00196E  501B               	movf	___flmul@sign^0,w,c
  6974   001970  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6975   001972  C022  F00F         	movff	___flmul@prod,?___flmul
  6976   001976  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6977   00197A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6978   00197E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6979   001982                     l744:
  6980   001982  0012               	return		;funcret
  6981   001984                     __end_of___flmul:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function ___fldiv *****************
  6985 ;; Defined at:
  6986 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  b               4   39[COMRAM] unsigned char 
  6989 ;;  a               4   43[COMRAM] unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  grs             4   58[COMRAM] unsigned long 
  6992 ;;  rem             4   51[COMRAM] unsigned long 
  6993 ;;  new_exp         2   56[COMRAM] short 
  6994 ;;  aexp            1   63[COMRAM] unsigned char 
  6995 ;;  bexp            1   62[COMRAM] unsigned char 
  6996 ;;  sign            1   55[COMRAM] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  4   39[COMRAM] unsigned char 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7006 ;;      Params:         8       0       0       0       0       0       0
  7007 ;;      Locals:        13       0       0       0       0       0       0
  7008 ;;      Temps:          4       0       0       0       0       0       0
  7009 ;;      Totals:        25       0       0       0       0       0       0
  7010 ;;Total ram usage:       25 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_equation_SENSOR
  7016 ;;		_efgtoa
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text32
  7021   001984                     __ptext32:
  7022                           	callstack 0
  7023   001984                     ___fldiv:
  7024                           	callstack 25
  7025   001984  502B               	movf	(___fldiv@b+3)^0,w,c
  7026   001986  0B80               	andlw	128
  7027   001988  6E38               	movwf	___fldiv@sign^0,c
  7028   00198A  502B               	movf	(___fldiv@b+3)^0,w,c
  7029   00198C  242B               	addwf	(___fldiv@b+3)^0,w,c
  7030   00198E  6E3F               	movwf	___fldiv@bexp^0,c
  7031   001990  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7032   001992  EFCD  F00C         	goto	u4261
  7033   001996  EFCF  F00C         	goto	u4260
  7034   00199A                     u4261:
  7035   00199A  EFD0  F00C         	goto	l3709
  7036   00199E                     u4260:
  7037   00199E  803F               	bsf	___fldiv@bexp^0,0,c
  7038   0019A0                     l3709:
  7039   0019A0  503F               	movf	___fldiv@bexp^0,w,c
  7040   0019A2  B4D8               	btfsc	status,2,c
  7041   0019A4  EFD6  F00C         	goto	u4271
  7042   0019A8  EFD8  F00C         	goto	u4270
  7043   0019AC                     u4271:
  7044   0019AC  EFED  F00C         	goto	l3719
  7045   0019B0                     u4270:
  7046   0019B0  283F               	incf	___fldiv@bexp^0,w,c
  7047   0019B2  A4D8               	btfss	status,2,c
  7048   0019B4  EFDE  F00C         	goto	u4281
  7049   0019B8  EFE0  F00C         	goto	u4280
  7050   0019BC                     u4281:
  7051   0019BC  EFE8  F00C         	goto	l3715
  7052   0019C0                     u4280:
  7053   0019C0  0E00               	movlw	0
  7054   0019C2  6E28               	movwf	___fldiv@b^0,c
  7055   0019C4  0E00               	movlw	0
  7056   0019C6  6E29               	movwf	(___fldiv@b+1)^0,c
  7057   0019C8  0E00               	movlw	0
  7058   0019CA  6E2A               	movwf	(___fldiv@b+2)^0,c
  7059   0019CC  0E00               	movlw	0
  7060   0019CE  6E2B               	movwf	(___fldiv@b+3)^0,c
  7061   0019D0                     l3715:
  7062   0019D0  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7063   0019D2  0E00               	movlw	0
  7064   0019D4  6E2B               	movwf	(___fldiv@b+3)^0,c
  7065   0019D6  EFF5  F00C         	goto	l3721
  7066   0019DA                     l3719:
  7067   0019DA  0E00               	movlw	0
  7068   0019DC  6E28               	movwf	___fldiv@b^0,c
  7069   0019DE  0E00               	movlw	0
  7070   0019E0  6E29               	movwf	(___fldiv@b+1)^0,c
  7071   0019E2  0E00               	movlw	0
  7072   0019E4  6E2A               	movwf	(___fldiv@b+2)^0,c
  7073   0019E6  0E00               	movlw	0
  7074   0019E8  6E2B               	movwf	(___fldiv@b+3)^0,c
  7075   0019EA                     l3721:
  7076   0019EA  502F               	movf	(___fldiv@a+3)^0,w,c
  7077   0019EC  0B80               	andlw	128
  7078   0019EE  1A38               	xorwf	___fldiv@sign^0,f,c
  7079   0019F0  502F               	movf	(___fldiv@a+3)^0,w,c
  7080   0019F2  242F               	addwf	(___fldiv@a+3)^0,w,c
  7081   0019F4  6E40               	movwf	___fldiv@aexp^0,c
  7082   0019F6  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7083   0019F8  EF00  F00D         	goto	u4291
  7084   0019FC  EF02  F00D         	goto	u4290
  7085   001A00                     u4291:
  7086   001A00  EF03  F00D         	goto	l3729
  7087   001A04                     u4290:
  7088   001A04  8040               	bsf	___fldiv@aexp^0,0,c
  7089   001A06                     l3729:
  7090   001A06  5040               	movf	___fldiv@aexp^0,w,c
  7091   001A08  B4D8               	btfsc	status,2,c
  7092   001A0A  EF09  F00D         	goto	u4301
  7093   001A0E  EF0B  F00D         	goto	u4300
  7094   001A12                     u4301:
  7095   001A12  EF20  F00D         	goto	l3739
  7096   001A16                     u4300:
  7097   001A16  2840               	incf	___fldiv@aexp^0,w,c
  7098   001A18  A4D8               	btfss	status,2,c
  7099   001A1A  EF11  F00D         	goto	u4311
  7100   001A1E  EF13  F00D         	goto	u4310
  7101   001A22                     u4311:
  7102   001A22  EF1B  F00D         	goto	l3735
  7103   001A26                     u4310:
  7104   001A26  0E00               	movlw	0
  7105   001A28  6E2C               	movwf	___fldiv@a^0,c
  7106   001A2A  0E00               	movlw	0
  7107   001A2C  6E2D               	movwf	(___fldiv@a+1)^0,c
  7108   001A2E  0E00               	movlw	0
  7109   001A30  6E2E               	movwf	(___fldiv@a+2)^0,c
  7110   001A32  0E00               	movlw	0
  7111   001A34  6E2F               	movwf	(___fldiv@a+3)^0,c
  7112   001A36                     l3735:
  7113   001A36  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7114   001A38  0E00               	movlw	0
  7115   001A3A  6E2F               	movwf	(___fldiv@a+3)^0,c
  7116   001A3C  EF28  F00D         	goto	l3741
  7117   001A40                     l3739:
  7118   001A40  0E00               	movlw	0
  7119   001A42  6E2C               	movwf	___fldiv@a^0,c
  7120   001A44  0E00               	movlw	0
  7121   001A46  6E2D               	movwf	(___fldiv@a+1)^0,c
  7122   001A48  0E00               	movlw	0
  7123   001A4A  6E2E               	movwf	(___fldiv@a+2)^0,c
  7124   001A4C  0E00               	movlw	0
  7125   001A4E  6E2F               	movwf	(___fldiv@a+3)^0,c
  7126   001A50                     l3741:
  7127   001A50  502C               	movf	___fldiv@a^0,w,c
  7128   001A52  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7129   001A54  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7130   001A56  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7131   001A58  A4D8               	btfss	status,2,c
  7132   001A5A  EF31  F00D         	goto	u4321
  7133   001A5E  EF33  F00D         	goto	u4320
  7134   001A62                     u4321:
  7135   001A62  EF4B  F00D         	goto	l3753
  7136   001A66                     u4320:
  7137   001A66  0E00               	movlw	0
  7138   001A68  6E28               	movwf	___fldiv@b^0,c
  7139   001A6A  0E00               	movlw	0
  7140   001A6C  6E29               	movwf	(___fldiv@b+1)^0,c
  7141   001A6E  0E00               	movlw	0
  7142   001A70  6E2A               	movwf	(___fldiv@b+2)^0,c
  7143   001A72  0E00               	movlw	0
  7144   001A74  6E2B               	movwf	(___fldiv@b+3)^0,c
  7145   001A76  0E80               	movlw	128
  7146   001A78  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7147   001A7A  0E7F               	movlw	127
  7148   001A7C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7149   001A7E                     l3747:
  7150   001A7E  5038               	movf	___fldiv@sign^0,w,c
  7151   001A80  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7152   001A82  C028  F028         	movff	___fldiv@b,?___fldiv
  7153   001A86  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7154   001A8A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7155   001A8E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7156   001A92  EF8E  F00E         	goto	l708
  7157   001A96                     l3753:
  7158   001A96  503F               	movf	___fldiv@bexp^0,w,c
  7159   001A98  A4D8               	btfss	status,2,c
  7160   001A9A  EF51  F00D         	goto	u4331
  7161   001A9E  EF53  F00D         	goto	u4330
  7162   001AA2                     u4331:
  7163   001AA2  EF5D  F00D         	goto	l3761
  7164   001AA6                     u4330:
  7165   001AA6  0E00               	movlw	0
  7166   001AA8  6E28               	movwf	?___fldiv^0,c
  7167   001AAA  0E00               	movlw	0
  7168   001AAC  6E29               	movwf	(?___fldiv+1)^0,c
  7169   001AAE  0E00               	movlw	0
  7170   001AB0  6E2A               	movwf	(?___fldiv+2)^0,c
  7171   001AB2  0E00               	movlw	0
  7172   001AB4  6E2B               	movwf	(?___fldiv+3)^0,c
  7173   001AB6  EF8E  F00E         	goto	l708
  7174   001ABA                     l3761:
  7175   001ABA  5040               	movf	___fldiv@aexp^0,w,c
  7176   001ABC  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7177   001AC0  6A31               	clrf	(??___fldiv+1)^0,c
  7178   001AC2  5E30               	subwf	??___fldiv^0,f,c
  7179   001AC4  0E00               	movlw	0
  7180   001AC6  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7181   001AC8  0E7F               	movlw	127
  7182   001ACA  2430               	addwf	??___fldiv^0,w,c
  7183   001ACC  6E39               	movwf	___fldiv@new_exp^0,c
  7184   001ACE  0E00               	movlw	0
  7185   001AD0  2031               	addwfc	(??___fldiv+1)^0,w,c
  7186   001AD2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7187   001AD4  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7188   001AD8  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7189   001ADC  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7190   001AE0  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7191   001AE4  0E00               	movlw	0
  7192   001AE6  6E28               	movwf	___fldiv@b^0,c
  7193   001AE8  0E00               	movlw	0
  7194   001AEA  6E29               	movwf	(___fldiv@b+1)^0,c
  7195   001AEC  0E00               	movlw	0
  7196   001AEE  6E2A               	movwf	(___fldiv@b+2)^0,c
  7197   001AF0  0E00               	movlw	0
  7198   001AF2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7199   001AF4  0E00               	movlw	0
  7200   001AF6  6E3B               	movwf	___fldiv@grs^0,c
  7201   001AF8  0E00               	movlw	0
  7202   001AFA  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7203   001AFC  0E00               	movlw	0
  7204   001AFE  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7205   001B00  0E00               	movlw	0
  7206   001B02  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7207   001B04  0E00               	movlw	0
  7208   001B06  6E40               	movwf	___fldiv@aexp^0,c
  7209   001B08  EFBE  F00D         	goto	l710
  7210   001B0C                     l3771:
  7211   001B0C  5040               	movf	___fldiv@aexp^0,w,c
  7212   001B0E  B4D8               	btfsc	status,2,c
  7213   001B10  EF8C  F00D         	goto	u4341
  7214   001B14  EF8E  F00D         	goto	u4340
  7215   001B18                     u4341:
  7216   001B18  EFA5  F00D         	goto	l3779
  7217   001B1C                     u4340:
  7218   001B1C  90D8               	bcf	status,0,c
  7219   001B1E  3634               	rlcf	___fldiv@rem^0,f,c
  7220   001B20  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7221   001B22  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7222   001B24  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7223   001B26  90D8               	bcf	status,0,c
  7224   001B28  3628               	rlcf	___fldiv@b^0,f,c
  7225   001B2A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7226   001B2C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7227   001B2E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7228   001B30  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7229   001B32  EF9D  F00D         	goto	u4351
  7230   001B36  EF9F  F00D         	goto	u4350
  7231   001B3A                     u4351:
  7232   001B3A  EFA0  F00D         	goto	l713
  7233   001B3E                     u4350:
  7234   001B3E  8028               	bsf	___fldiv@b^0,0,c
  7235   001B40                     l713:
  7236   001B40  90D8               	bcf	status,0,c
  7237   001B42  363B               	rlcf	___fldiv@grs^0,f,c
  7238   001B44  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7239   001B46  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7240   001B48  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7241   001B4A                     l3779:
  7242   001B4A  502C               	movf	___fldiv@a^0,w,c
  7243   001B4C  5C34               	subwf	___fldiv@rem^0,w,c
  7244   001B4E  502D               	movf	(___fldiv@a+1)^0,w,c
  7245   001B50  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7246   001B52  502E               	movf	(___fldiv@a+2)^0,w,c
  7247   001B54  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7248   001B56  502F               	movf	(___fldiv@a+3)^0,w,c
  7249   001B58  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7250   001B5A  A0D8               	btfss	status,0,c
  7251   001B5C  EFB2  F00D         	goto	u4361
  7252   001B60  EFB4  F00D         	goto	u4360
  7253   001B64                     u4361:
  7254   001B64  EFBD  F00D         	goto	l3785
  7255   001B68                     u4360:
  7256   001B68  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7257   001B6A  502C               	movf	___fldiv@a^0,w,c
  7258   001B6C  5E34               	subwf	___fldiv@rem^0,f,c
  7259   001B6E  502D               	movf	(___fldiv@a+1)^0,w,c
  7260   001B70  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7261   001B72  502E               	movf	(___fldiv@a+2)^0,w,c
  7262   001B74  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7263   001B76  502F               	movf	(___fldiv@a+3)^0,w,c
  7264   001B78  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7265   001B7A                     l3785:
  7266   001B7A  2A40               	incf	___fldiv@aexp^0,f,c
  7267   001B7C                     l710:
  7268   001B7C  0E19               	movlw	25
  7269   001B7E  6440               	cpfsgt	___fldiv@aexp^0,c
  7270   001B80  EFC4  F00D         	goto	u4371
  7271   001B84  EFC6  F00D         	goto	u4370
  7272   001B88                     u4371:
  7273   001B88  EF86  F00D         	goto	l3771
  7274   001B8C                     u4370:
  7275   001B8C  5034               	movf	___fldiv@rem^0,w,c
  7276   001B8E  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7277   001B90  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7278   001B92  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7279   001B94  B4D8               	btfsc	status,2,c
  7280   001B96  EFCF  F00D         	goto	u4381
  7281   001B9A  EFD1  F00D         	goto	u4380
  7282   001B9E                     u4381:
  7283   001B9E  EFE9  F00D         	goto	l3797
  7284   001BA2                     u4380:
  7285   001BA2  803B               	bsf	___fldiv@grs^0,0,c
  7286   001BA4  EFE9  F00D         	goto	l3797
  7287   001BA8                     l3791:
  7288   001BA8  90D8               	bcf	status,0,c
  7289   001BAA  3628               	rlcf	___fldiv@b^0,f,c
  7290   001BAC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7291   001BAE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7292   001BB0  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7293   001BB2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7294   001BB4  EFDE  F00D         	goto	u4391
  7295   001BB8  EFE0  F00D         	goto	u4390
  7296   001BBC                     u4391:
  7297   001BBC  EFE1  F00D         	goto	l719
  7298   001BC0                     u4390:
  7299   001BC0  8028               	bsf	___fldiv@b^0,0,c
  7300   001BC2                     l719:
  7301   001BC2  90D8               	bcf	status,0,c
  7302   001BC4  363B               	rlcf	___fldiv@grs^0,f,c
  7303   001BC6  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7304   001BC8  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7305   001BCA  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7306   001BCC  0639               	decf	___fldiv@new_exp^0,f,c
  7307   001BCE  A0D8               	btfss	status,0,c
  7308   001BD0  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7309   001BD2                     l3797:
  7310   001BD2  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7311   001BD4  EFEE  F00D         	goto	u4401
  7312   001BD8  EFF0  F00D         	goto	u4400
  7313   001BDC                     u4401:
  7314   001BDC  EFD4  F00D         	goto	l3791
  7315   001BE0                     u4400:
  7316   001BE0  0E00               	movlw	0
  7317   001BE2  6E40               	movwf	___fldiv@aexp^0,c
  7318   001BE4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7319   001BE6  EFF7  F00D         	goto	u4411
  7320   001BEA  EFF9  F00D         	goto	u4410
  7321   001BEE                     u4411:
  7322   001BEE  EF1D  F00E         	goto	l721
  7323   001BF2                     u4410:
  7324   001BF2  0EFF               	movlw	255
  7325   001BF4  143B               	andwf	___fldiv@grs^0,w,c
  7326   001BF6  6E30               	movwf	??___fldiv^0,c
  7327   001BF8  0EFF               	movlw	255
  7328   001BFA  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7329   001BFC  6E31               	movwf	(??___fldiv+1)^0,c
  7330   001BFE  0EFF               	movlw	255
  7331   001C00  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7332   001C02  6E32               	movwf	(??___fldiv+2)^0,c
  7333   001C04  0E7F               	movlw	127
  7334   001C06  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7335   001C08  6E33               	movwf	(??___fldiv+3)^0,c
  7336   001C0A  5030               	movf	??___fldiv^0,w,c
  7337   001C0C  1031               	iorwf	(??___fldiv+1)^0,w,c
  7338   001C0E  1032               	iorwf	(??___fldiv+2)^0,w,c
  7339   001C10  1033               	iorwf	(??___fldiv+3)^0,w,c
  7340   001C12  B4D8               	btfsc	status,2,c
  7341   001C14  EF0E  F00E         	goto	u4421
  7342   001C18  EF10  F00E         	goto	u4420
  7343   001C1C                     u4421:
  7344   001C1C  EF14  F00E         	goto	l722
  7345   001C20                     u4420:
  7346   001C20                     l3805:
  7347   001C20  0E01               	movlw	1
  7348   001C22  6E40               	movwf	___fldiv@aexp^0,c
  7349   001C24  EF1D  F00E         	goto	l721
  7350   001C28                     l722:
  7351   001C28  A028               	btfss	___fldiv@b^0,0,c
  7352   001C2A  EF19  F00E         	goto	u4431
  7353   001C2E  EF1B  F00E         	goto	u4430
  7354   001C32                     u4431:
  7355   001C32  EF1D  F00E         	goto	l721
  7356   001C36                     u4430:
  7357   001C36  EF10  F00E         	goto	l3805
  7358   001C3A                     l721:
  7359   001C3A  5040               	movf	___fldiv@aexp^0,w,c
  7360   001C3C  B4D8               	btfsc	status,2,c
  7361   001C3E  EF23  F00E         	goto	u4441
  7362   001C42  EF25  F00E         	goto	u4440
  7363   001C46                     u4441:
  7364   001C46  EF49  F00E         	goto	l3817
  7365   001C4A                     u4440:
  7366   001C4A  0E01               	movlw	1
  7367   001C4C  2628               	addwf	___fldiv@b^0,f,c
  7368   001C4E  0E00               	movlw	0
  7369   001C50  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7370   001C52  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7371   001C54  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7372   001C56  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7373   001C58  EF30  F00E         	goto	u4451
  7374   001C5C  EF32  F00E         	goto	u4450
  7375   001C60                     u4451:
  7376   001C60  EF49  F00E         	goto	l3817
  7377   001C64                     u4450:
  7378   001C64  C028  F030         	movff	___fldiv@b,??___fldiv
  7379   001C68  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7380   001C6C  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7381   001C70  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7382   001C74  3433               	rlcf	(??___fldiv+3)^0,w,c
  7383   001C76  3233               	rrcf	(??___fldiv+3)^0,f,c
  7384   001C78  3232               	rrcf	(??___fldiv+2)^0,f,c
  7385   001C7A  3231               	rrcf	(??___fldiv+1)^0,f,c
  7386   001C7C  3230               	rrcf	??___fldiv^0,f,c
  7387   001C7E  C030  F028         	movff	??___fldiv,___fldiv@b
  7388   001C82  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7389   001C86  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7390   001C8A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7391   001C8E  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7392   001C90  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7393   001C92                     l3817:
  7394   001C92  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7395   001C94  EF54  F00E         	goto	u4461
  7396   001C98  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7397   001C9A  E108               	bnz	u4460
  7398   001C9C  2839               	incf	___fldiv@new_exp^0,w,c
  7399   001C9E  A0D8               	btfss	status,0,c
  7400   001CA0  EF54  F00E         	goto	u4461
  7401   001CA4  EF56  F00E         	goto	u4460
  7402   001CA8                     u4461:
  7403   001CA8  EF61  F00E         	goto	l3821
  7404   001CAC                     u4460:
  7405   001CAC  0E00               	movlw	0
  7406   001CAE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7407   001CB0  6839               	setf	___fldiv@new_exp^0,c
  7408   001CB2  0E00               	movlw	0
  7409   001CB4  6E28               	movwf	___fldiv@b^0,c
  7410   001CB6  0E00               	movlw	0
  7411   001CB8  6E29               	movwf	(___fldiv@b+1)^0,c
  7412   001CBA  0E00               	movlw	0
  7413   001CBC  6E2A               	movwf	(___fldiv@b+2)^0,c
  7414   001CBE  0E00               	movlw	0
  7415   001CC0  6E2B               	movwf	(___fldiv@b+3)^0,c
  7416   001CC2                     l3821:
  7417   001CC2  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7418   001CC4  EF6E  F00E         	goto	u4470
  7419   001CC8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7420   001CCA  E106               	bnz	u4471
  7421   001CCC  0439               	decf	___fldiv@new_exp^0,w,c
  7422   001CCE  B0D8               	btfsc	status,0,c
  7423   001CD0  EF6C  F00E         	goto	u4471
  7424   001CD4  EF6E  F00E         	goto	u4470
  7425   001CD8                     u4471:
  7426   001CD8  EF7C  F00E         	goto	l3825
  7427   001CDC                     u4470:
  7428   001CDC  0E00               	movlw	0
  7429   001CDE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7430   001CE0  0E00               	movlw	0
  7431   001CE2  6E39               	movwf	___fldiv@new_exp^0,c
  7432   001CE4  0E00               	movlw	0
  7433   001CE6  6E28               	movwf	___fldiv@b^0,c
  7434   001CE8  0E00               	movlw	0
  7435   001CEA  6E29               	movwf	(___fldiv@b+1)^0,c
  7436   001CEC  0E00               	movlw	0
  7437   001CEE  6E2A               	movwf	(___fldiv@b+2)^0,c
  7438   001CF0  0E00               	movlw	0
  7439   001CF2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7440   001CF4  0E00               	movlw	0
  7441   001CF6  6E38               	movwf	___fldiv@sign^0,c
  7442   001CF8                     l3825:
  7443   001CF8  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7444   001CFC  A03F               	btfss	___fldiv@bexp^0,0,c
  7445   001CFE  EF83  F00E         	goto	u4481
  7446   001D02  EF85  F00E         	goto	u4480
  7447   001D06                     u4481:
  7448   001D06  EF88  F00E         	goto	l3831
  7449   001D0A                     u4480:
  7450   001D0A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7451   001D0C  EF89  F00E         	goto	l3833
  7452   001D10                     l3831:
  7453   001D10  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7454   001D12                     l3833:
  7455   001D12  90D8               	bcf	status,0,c
  7456   001D14  303F               	rrcf	___fldiv@bexp^0,w,c
  7457   001D16  6E2B               	movwf	(___fldiv@b+3)^0,c
  7458   001D18  EF3F  F00D         	goto	l3747
  7459   001D1C                     l708:
  7460   001D1C  0012               	return		;funcret
  7461   001D1E                     __end_of___fldiv:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function _conv_AN0 *****************
  7465 ;; Defined at:
  7466 ;;		line 102 in file "Main_program.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7480 ;;      Params:         0       0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0
  7482 ;;      Temps:          2       0       0       0       0       0       0
  7483 ;;      Totals:         2       0       0       0       0       0       0
  7484 ;;Total ram usage:        2 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text33
  7494   002F5A                     __ptext33:
  7495                           	callstack 0
  7496   002F5A                     _conv_AN0:
  7497                           	callstack 30
  7498   002F5A                     
  7499                           ;Main_program.c: 104:     _delay((unsigned long)((50)*(8000000/4000.0)));
  7500   002F5A  0E82               	movlw	130
  7501   002F5C  6E01               	movwf	??_conv_AN0^0,c
  7502   002F5E  0EDE               	movlw	222
  7503   002F60                     u5637:
  7504   002F60  2EE8               	decfsz	wreg,f,c
  7505   002F62  D7FE               	bra	u5637
  7506   002F64  2E01               	decfsz	??_conv_AN0^0,f,c
  7507   002F66  D7FC               	bra	u5637
  7508   002F68                     
  7509                           ;Main_program.c: 105:     ADCON0bits.GO = 1;
  7510   002F68  82C2               	bsf	194,1,c	;volatile
  7511   002F6A                     l96:
  7512   002F6A  B2C2               	btfsc	194,1,c	;volatile
  7513   002F6C  EFBA  F017         	goto	u1851
  7514   002F70  EFBC  F017         	goto	u1850
  7515   002F74                     u1851:
  7516   002F74  EFB5  F017         	goto	l96
  7517   002F78                     u1850:
  7518   002F78                     
  7519                           ;Main_program.c: 107:     VdigADC_AN0 = ADRESH;
  7520   002F78  CFC4 F072          	movff	4036,_VdigADC_AN0	;volatile
  7521   002F7C  6A73               	clrf	(_VdigADC_AN0+1)^0,c
  7522   002F7E                     
  7523                           ;Main_program.c: 108:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
  7524   002F7E  5072               	movf	_VdigADC_AN0^0,w,c
  7525   002F80  6E01               	movwf	??_conv_AN0^0,c
  7526   002F82  50C3               	movf	195,w,c	;volatile
  7527   002F84  6E72               	movwf	_VdigADC_AN0^0,c
  7528   002F86  C001  F073         	movff	??_conv_AN0,_VdigADC_AN0+1
  7529   002F8A  0012               	return		;funcret
  7530   002F8C                     __end_of_conv_AN0:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _config_IO *****************
  7534 ;; Defined at:
  7535 ;;		line 89 in file "Main_program.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7549 ;;      Params:         0       0       0       0       0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0
  7552 ;;      Totals:         0       0       0       0       0       0       0
  7553 ;;Total ram usage:        0 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_main
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text34
  7563   003054                     __ptext34:
  7564                           	callstack 0
  7565   003054                     _config_IO:
  7566                           	callstack 30
  7567   003054                     
  7568                           ;Main_program.c: 91:     TRISC = 0X00;
  7569   003054  0E00               	movlw	0
  7570   003056  6E94               	movwf	148,c	;volatile
  7571                           
  7572                           ;Main_program.c: 92:     PORTC = 0X00;
  7573   003058  0E00               	movlw	0
  7574   00305A  6E82               	movwf	130,c	;volatile
  7575   00305C  0012               	return		;funcret
  7576   00305E                     __end_of_config_IO:
  7577                           	callstack 0
  7578                           
  7579 ;; *************** function _config_FOSC *****************
  7580 ;; Defined at:
  7581 ;;		line 83 in file "Main_program.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7595 ;;      Params:         0       0       0       0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0
  7598 ;;      Totals:         0       0       0       0       0       0       0
  7599 ;;Total ram usage:        0 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_main
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text35
  7609   00305E                     __ptext35:
  7610                           	callstack 0
  7611   00305E                     _config_FOSC:
  7612                           	callstack 30
  7613   00305E                     
  7614                           ;Main_program.c: 85:     OSCCON = 0X00;
  7615   00305E  0E00               	movlw	0
  7616   003060  6ED3               	movwf	211,c	;volatile
  7617                           
  7618                           ;Main_program.c: 86:     OSCTUNE = 0X00;
  7619   003062  0E00               	movlw	0
  7620   003064  6E9B               	movwf	155,c	;volatile
  7621   003066  0012               	return		;funcret
  7622   003068                     __end_of_config_FOSC:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _config_ADC *****************
  7626 ;; Defined at:
  7627 ;;		line 95 in file "Main_program.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7641 ;;      Params:         0       0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_main
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text36
  7655   003046                     __ptext36:
  7656                           	callstack 0
  7657   003046                     _config_ADC:
  7658                           	callstack 30
  7659   003046                     
  7660                           ;Main_program.c: 97:     ADCON0 = 0X01;
  7661   003046  0E01               	movlw	1
  7662   003048  6EC2               	movwf	194,c	;volatile
  7663                           
  7664                           ;Main_program.c: 98:     ADCON1 = 0X0E;
  7665   00304A  0E0E               	movlw	14
  7666   00304C  6EC1               	movwf	193,c	;volatile
  7667                           
  7668                           ;Main_program.c: 99:     ADCON2 = 0X80;
  7669   00304E  0E80               	movlw	128
  7670   003050  6EC0               	movwf	192,c	;volatile
  7671   003052  0012               	return		;funcret
  7672   003054                     __end_of_config_ADC:
  7673                           	callstack 0
  7674                           
  7675                           	psect	rparam
  7676   000000                     
  7677                           	psect	config
  7678                           
  7679                           ; Padding undefined space
  7680   300000                     	org	3145728
  7681   300000  FF                 	db	255
  7682                           
  7683                           ;Config register CONFIG1H @ 0x300001
  7684                           ;	Oscillator Selection bits
  7685                           ;	OSC = HS, HS oscillator
  7686                           ;	Fail-Safe Clock Monitor Enable bit
  7687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7688                           ;	Internal/External Oscillator Switchover bit
  7689                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7690   300001                     	org	3145729
  7691   300001  02                 	db	2
  7692                           
  7693                           ;Config register CONFIG2L @ 0x300002
  7694                           ;	Power-up Timer Enable bit
  7695                           ;	PWRT = OFF, PWRT disabled
  7696                           ;	Brown-out Reset Enable bits
  7697                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7698                           ;	Brown Out Reset Voltage bits
  7699                           ;	BORV = 3, Minimum setting
  7700   300002                     	org	3145730
  7701   300002  19                 	db	25
  7702                           
  7703                           ;Config register CONFIG2H @ 0x300003
  7704                           ;	Watchdog Timer Enable bit
  7705                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7706                           ;	Watchdog Timer Postscale Select bits
  7707                           ;	WDTPS = 32768, 1:32768
  7708   300003                     	org	3145731
  7709   300003  1E                 	db	30
  7710                           
  7711                           ; Padding undefined space
  7712   300004                     	org	3145732
  7713   300004  FF                 	db	255
  7714                           
  7715                           ;Config register CONFIG3H @ 0x300005
  7716                           ;	CCP2 MUX bit
  7717                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7718                           ;	PORTB A/D Enable bit
  7719                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7720                           ;	Low-Power Timer1 Oscillator Enable bit
  7721                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7722                           ;	MCLR Pin Enable bit
  7723                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7724   300005                     	org	3145733
  7725   300005  81                 	db	129
  7726                           
  7727                           ;Config register CONFIG4L @ 0x300006
  7728                           ;	Stack Full/Underflow Reset Enable bit
  7729                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7730                           ;	Single-Supply ICSP Enable bit
  7731                           ;	LVP = OFF, Single-Supply ICSP disabled
  7732                           ;	Extended Instruction Set Enable bit
  7733                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7734                           ;	Background Debugger Enable bit
  7735                           ;	DEBUG = 0x1, unprogrammed default
  7736   300006                     	org	3145734
  7737   300006  81                 	db	129
  7738                           
  7739                           ; Padding undefined space
  7740   300007                     	org	3145735
  7741   300007  FF                 	db	255
  7742                           
  7743                           ;Config register CONFIG5L @ 0x300008
  7744                           ;	Code Protection bit
  7745                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7746                           ;	Code Protection bit
  7747                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7748                           ;	Code Protection bit
  7749                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7750                           ;	Code Protection bit
  7751                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7752   300008                     	org	3145736
  7753   300008  0F                 	db	15
  7754                           
  7755                           ;Config register CONFIG5H @ 0x300009
  7756                           ;	Boot Block Code Protection bit
  7757                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7758                           ;	Data EEPROM Code Protection bit
  7759                           ;	CPD = OFF, Data EEPROM not code-protected
  7760   300009                     	org	3145737
  7761   300009  C0                 	db	192
  7762                           
  7763                           ;Config register CONFIG6L @ 0x30000A
  7764                           ;	Write Protection bit
  7765                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7766                           ;	Write Protection bit
  7767                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7768                           ;	Write Protection bit
  7769                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7770                           ;	Write Protection bit
  7771                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7772   30000A                     	org	3145738
  7773   30000A  0F                 	db	15
  7774                           
  7775                           ;Config register CONFIG6H @ 0x30000B
  7776                           ;	Configuration Register Write Protection bit
  7777                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7778                           ;	Boot Block Write Protection bit
  7779                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7780                           ;	Data EEPROM Write Protection bit
  7781                           ;	WRTD = OFF, Data EEPROM not write-protected
  7782   30000B                     	org	3145739
  7783   30000B  E0                 	db	224
  7784                           
  7785                           ;Config register CONFIG7L @ 0x30000C
  7786                           ;	Table Read Protection bit
  7787                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7788                           ;	Table Read Protection bit
  7789                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7790                           ;	Table Read Protection bit
  7791                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7792                           ;	Table Read Protection bit
  7793                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7794   30000C                     	org	3145740
  7795   30000C  0F                 	db	15
  7796                           
  7797                           ;Config register CONFIG7H @ 0x30000D
  7798                           ;	Boot Block Table Read Protection bit
  7799                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7800   30000D                     	org	3145741
  7801   30000D  40                 	db	64
  7802                           tosu	equ	0xFFF
  7803                           tosh	equ	0xFFE
  7804                           tosl	equ	0xFFD
  7805                           stkptr	equ	0xFFC
  7806                           pclatu	equ	0xFFB
  7807                           pclath	equ	0xFFA
  7808                           pcl	equ	0xFF9
  7809                           tblptru	equ	0xFF8
  7810                           tblptrh	equ	0xFF7
  7811                           tblptrl	equ	0xFF6
  7812                           tablat	equ	0xFF5
  7813                           prodh	equ	0xFF4
  7814                           prodl	equ	0xFF3
  7815                           indf0	equ	0xFEF
  7816                           postinc0	equ	0xFEE
  7817                           postdec0	equ	0xFED
  7818                           preinc0	equ	0xFEC
  7819                           plusw0	equ	0xFEB
  7820                           fsr0h	equ	0xFEA
  7821                           fsr0l	equ	0xFE9
  7822                           wreg	equ	0xFE8
  7823                           indf1	equ	0xFE7
  7824                           postinc1	equ	0xFE6
  7825                           postdec1	equ	0xFE5
  7826                           preinc1	equ	0xFE4
  7827                           plusw1	equ	0xFE3
  7828                           fsr1h	equ	0xFE2
  7829                           fsr1l	equ	0xFE1
  7830                           bsr	equ	0xFE0
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           preinc2	equ	0xFDC
  7835                           plusw2	equ	0xFDB
  7836                           fsr2h	equ	0xFDA
  7837                           fsr2l	equ	0xFD9
  7838                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        0
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    104     115
    BANK0           128     66     114
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_write@str	PTR unsigned char  size(2) Largest target is 16
		 -> BufferLCD_Press(BANK0[16]), BufferLCD_Voltage(BANK0[16]), STR_3(CODE[16]), STR_4(CODE[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S905$buffer	PTR unsigned char  size(2) Largest target is 0

    S905$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> BufferLCD_Press(BANK0[16]), BufferLCD_Voltage(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _logic_CONTROL->___flge
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    _equation_SENSOR->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _lcd_SENSOR->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42942
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                    _equation_SENSOR
                         _lcd_SENSOR
                           _lcd_init
                      _logic_CONTROL
 ---------------------------------------------------------------------------------
 (1) _logic_CONTROL                                        0     0      0    2066
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_SENSOR                                           0     0      0   32748
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   30959
                                             47 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   30281
                                            103 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   29784
                                             92 COMRAM    11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   26972
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3039
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2066
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    1789
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _equation_SENSOR                                      0     0      0    7254
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3083
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
   _equation_SENSOR
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _lcd_SENSOR
     _lcd_write
       _lcd_send_byte
         _lcd_cmd
           _set_bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _lcd_init
     _lcd_cmd
   _logic_CONTROL
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     42      72       5       89.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     68      73       1       90.6%
BITBIGSFRhh         2C      0       0      16        0.0%
BITBIGSFRhlhl       24      0       0      18        0.0%
BITBIGSFRlh          F      0       0      20        0.0%
BITBIGSFRhlhhh       E      0       0      17        0.0%
BITBIGSFRhll         4      0       0      19        0.0%
BITBIGSFRll          2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      22        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 28 13:51:05 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l30 3044                          l23 3026                          l42 2BB4  
                        l27 2846                          l19 2C52                          l90 305C  
                        l93 3052                          l87 3066                          l96 2F6A  
                        l98 2F78                          l99 2F8A              ?_lcd_send_byte 0005  
       ___wmul@multiplicand 0003                         l102 291A                         l111 245A  
                       l105 2CDC                         l115 245A                         l126 3006  
                       l400 2F58                         l423 2560                         l710 1B7C  
                       l391 261E                         l721 1C3A                         l713 1B40  
                       l385 2A6E                         l722 1C28                         l708 1D1C  
                       l740 161E                         l396 2664                         l804 2F20  
                       l901 2B14                         l750 187A                         l654 1288  
                       l719 1BC2                         l671 13A2                         l663 1558  
                       l655 1276                         l831 2CF4                         l744 1982  
                       l680 1472                         l656 123C                         l681 1460  
                       l747 1814                         l835 2D42                         l851 0812  
                       l757 1944                         l749 188C                         l781 21A0  
                       l846 1098                         l935 2E6E                         l784 22FC  
                       l696 2E2E                         l952 2148                         l928 1F36  
                       l945 2762                         l849 09CC                         l795 2294  
                       l955 208C                         l788 2238                         l972 2DE8  
                       l966 2D98                         l879 0E16                         l984 29C4  
                       l992 2EAE                         l897 2B0C                         l995 3068  
                       _pad 2CDE                         wreg 0FE8                ___flmul@aexp 001C  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                ___fltol@exp1 000A                        l1001 2EE8  
                      l3201 2844                        l4001 25DE                        l2171 3054  
                      l4011 2662                        l4003 25EC                        l2173 3046  
                      l3301 2B4A                        l4005 25FE                        l4101 2EB0  
                      l2175 2F5A                        l3303 2B58                        l4007 260C  
                      l4015 2F22                        l4031 24B0                        l4023 245C  
                      l4103 2EB8                        l2169 305E                        l2177 2F68  
                      l3321 214C                        l3305 2B80                        l4009 265C  
                      l4017 2F38                        l4033 24B2                        l4025 2472  
                      l4121 1FD0                        l4113 1F38                        l4105 2D44  
                      l4201 079C                        l3401 2C12                        l2179 2F7E  
                      l3323 215C                        l3307 2B84                        l4019 2F48  
                      l4035 24C2                        l4131 20EC                        l4115 1F58  
                      l4107 2D52                        l4203 07A2                        l3403 2C20  
                      l3341 2222                        l3333 21DA                        l3325 216A  
                      l3501 10E8                        l4061 2540                        l4045 24EC  
                      l4037 24C6                        l4029 2486                        l4133 2100  
                      l4125 2040                        l4117 1FAE                        l4109 2D66  
                      l4141 2D9A                        l4301 0D42                        l4221 0828  
                      l4205 07AA                        l4213 07C2                        l3405 2C26  
                      l3351 22A2                        l3343 222E                        l3335 21E2  
                      l3327 21B0                        l3191 27DA                        l3183 2766  
                      l3511 111A                        l3503 10F0                        l4063 2550  
                      l4055 2514                        l4047 24F6                        l4039 24D4  
                      l4135 2128                        l4127 207C                        l4119 1FC2  
                      l4143 2DAE                        l4151 2DCE                        l4071 2D00  
                      l4311 0D74                        l4303 0D52                        l4231 091E  
                      l4223 085C                        l4215 07DC                        l3407 2C3C  
                      l3361 22EA                        l3353 22A4                        l3345 226A  
                      l3337 21EE                        l3329 21C6                        l3193 27F2  
                      l3185 27CE                        l3281 303E                        l3601 12F2  
                      l3521 1150                        l3513 1120                        l3505 1100  
                      l4057 2520                        l4049 2500                        l4081 2686  
                      l4137 2138                        l4129 20B0                        l4145 2DBA  
                      l4073 2D10                        l4321 0E46                        l4313 0DEC  
                      l4305 0D5A                        l4241 09D4                        l4233 0952  
                      l4225 089A                        l4161 066E                        l4153 0646  
                      l4401 1D1E                        l3409 2C44                        l3363 22EC  
                      l3355 22A8                        l3347 2276                        l3339 2220  
                      l3195 280C                        l3187 27D0                        l3275 302A  
                      l3603 12F6                        l3611 1316                        l3531 118C  
                      l3523 1160                        l3515 112E                        l3507 1106  
                      l4059 2530                        l4083 26C4                        l4091 2704  
                      l4147 2DBE                        l4075 2D14                        l4067 2CDE  
                      l4331 0E6C                        l4323 0E4A                        l4315 0E0C  
                      l4307 0D60                        l4251 0A06                        l4243 09E2  
                      l4235 095A                        l4227 08CC                        l4219 0822  
                      l4171 06C4                        l4163 0692                        l4155 064C  
                      l4411 1D60                        l4403 1D40                        l3371 2BBC  
                      l3357 22CC                        l3349 2284                        l3197 2828  
                      l3189 27D2                        l3277 3034                        l3293 2B18  
                      l3613 133C                        l3621 1392                        l3605 1304  
                      l3541 11AA                        l3533 119A                        l3525 1162  
                      l3517 1130                        l3509 1118                        l4093 2716  
                      l4085 26EC                        l4149 2DCA                        l4077 2D32  
                      l4069 2CEC                        l4341 0EA0                        l4333 0E72  
                      l4325 0E50                        l4317 0E28                        l4309 0D68  
                      l4253 0A18                        l4261 0A58                        l4245 09EE  
                      l4229 090A                        l4181 0714                        l4173 06D0  
                      l4165 069C                        l4157 065C                        l4413 1D62  
                      l4421 1D94                        l4405 1D48                        l4501 2C54  
                      l3381 2BCA                        l3373 2BBE                        l3711 19B0  
                      l3703 1984                        l3359 22DC                        l3199 2842  
                      l3279 303C                        l3295 2B28                        l3631 13E6  
                      l3623 13B8                        l3615 1370                        l3607 1306  
                      l3551 11BE                        l3543 11AE                        l3535 119E  
                      l3519 1140                        l3527 116A                        l4087 26F8  
                      l4079 2666                        l4343 0EA6                        l4327 0E58  
                      l4319 0E36                        l4335 0E78                        l4351 0F3E  
                      l4271 0B40                        l4263 0A60                        l4255 0A26  
                      l4247 09F8                        l4239 099A                        l4191 0744  
                      l4183 0718                        l4175 06D8                        l4167 06A4  
                      l4159 066A                        l4431 1DEC                        l4423 1DA4  
                      l4415 1D6E                        l4407 1D54                        l4503 2C90  
                      l3391 2BE4                        l3383 2BDA                        l3375 2BC4  
                      l3367 2BB6                        l4511 22FE                        l3801 1BE4  
                      l3721 19EA                        l3713 19C0                        l3705 1990  
                      l3297 2B32                        l3641 1410                        l3633 13F4  
                      l3625 13C8                        l3617 1372                        l3609 1310  
                      l3561 11D2                        l3553 11C2                        l3545 11B2  
                      l3537 11A2                        l3529 117A                        l4097 275A  
                      l3481 2962                        l3473 291C                        l4361 0FBE  
                      l4353 0F5C                        l4345 0EFE                        l4337 0E8A  
                      l4329 0E68                        l4281 0BFE                        l4273 0B74  
                      l4265 0A70                        l4257 0A3E                        l4249 0A00  
                      l4185 071E                        l4169 06B4                        l4177 06DC  
                      l4433 1DFE                        l4441 1E14                        l4425 1DC6  
                      l4409 1D58                        l4505 2CA6                        l3393 2BF2  
                      l3377 2BC6                        l3369 2BBA                        l4521 23AC  
                      l4513 2330                        l3811 1C56                        l3803 1BF2  
                      l3731 1A16                        l3723 19F0                        l3715 19D0  
                      l3707 199E                        l2931 3024                        l2923 300A  
                      l3299 2B44                        l3651 1442                        l3643 1420  
                      l3635 13F6                        l3619 1382                        l3571 1224  
                      l3563 11D6                        l3555 11C6                        l3547 11B6  
                      l3539 11A6                        l3491 10B4                        l3483 2994  
                      l3475 292C                        l4371 100C                        l4363 0FCC  
                      l4355 0F78                        l4347 0F32                        l4339 0E9C  
                      l4291 0C9A                        l4283 0C14                        l4267 0A84  
                      l4275 0B7A                        l4259 0A50                        l4187 0726  
                      l4179 0702                        l4195 0760                        l4451 1EA2  
                      l4435 1E04                        l4443 1E32                        l4427 1DCE  
                      l4419 1D76                        l4507 2CB6                        l3395 2BF4  
                      l3379 2BC8                        l4523 23DE                        l4515 233C  
                      l4531 2FBA                        l3821 1CC2                        l3813 1C64  
                      l3805 1C20                        l3741 1A50                        l3733 1A26  
                      l3725 19F6                        l3717 19D2                        l3709 19A0  
                      l3901 16E4                        l2925 301E                        l3661 149C  
                      l3653 1458                        l3637 1404                        l3629 13DC  
                      l3645 1422                        l3581 1268                        l3573 1234  
                      l3557 11CA                        l3549 11BA                        l3565 11DA  
                      l3493 10B6                        l3477 293C                        l4381 1074  
                      l4373 1012                        l4365 0FE4                        l4357 0F80  
                      l4349 0F3A                        l4293 0CF0                        l4285 0C46  
                      l4277 0B98                        l4269 0AE8                        l4197 0786  
                      l4189 073A                        l4461 1EF0                        l4453 1EB8  
                      l4445 1E52                        l4437 1E0C                        l4429 1DE2  
                      l4509 2CCC                        l3397 2C04                        l3389 2BDE  
                      l4525 2410                        l4517 236E                        l4541 2FD6  
                      l4533 2FC6                        ?_pad 000F                        l3831 1D10  
                      l3823 1CDC                        l3815 1C8E                        l3743 1A66  
                      l3735 1A36                        l3727 1A04                        l3719 19DA  
                      l3911 1746                        l3903 16F0                        l3671 1518  
                      l3663 14D6                        l3639 140C                        l3647 1430  
                      l3583 126A                        l3575 124A                        l3567 11DE  
                      l3559 11CE                        l3495 10C6                        l3487 109A  
                      l3479 2946                        l4383 107C                        l4375 1030  
                      l4359 0F8E                        l4295 0CF6                        l4287 0C56  
                      l4279 0BCC                        l4199 0798                        l4391 2A9A  
                      l4455 1EC6                        l4447 1E7A                        l4463 1F08  
                      l3399 2C0A                        l4527 241C                        l4519 23A0  
                      l4535 2FCA                        l3833 1D12                        l3825 1CF8  
                      l3809 1C4A                        l3817 1C92                        l3761 1ABA  
                      l3745 1A76                        l3753 1A96                        l3737 1A38  
                      l3729 1A06                        l3921 17DC                        l3913 1752  
                      l3905 1700                        l3841 155A                        l3681 1538  
                      l3673 151C                        l3657 1482                        l3665 14D8  
                      l3649 1434                        l3593 12BA                        l3585 1274  
                      l3577 1256                        l3569 1208                        l3497 10D6  
                      l3489 10A6                        l4369 0FF6                        l4377 104E  
                      l4297 0D2A                        l4289 0C66                        l4393 2AA2  
                      l4473 2E30                        l4529 244E                        l4537 2FCE  
                      l3827 1CFC                        l3819 1CAC                        l3771 1B0C  
                      l3763 1AD4                        l3755 1AA6                        l3747 1A7E  
                      l3739 1A40                        l3931 1832                        l3923 17FA  
                      l3915 176E                        l3907 171A                        l3851 1596  
                      l3843 1566                        l3683 1546                        l3675 152A  
                      l3667 14E8                        l3659 148E                        l3595 12CA  
                      l3587 1296                        l3579 125A                        l3499 10E6  
                      l3691 2E7C                        l4379 105E                        l4299 0D3E  
                      l4395 2ABE                        l4387 2A70                        l4467 1F14  
                      l4475 2E38                        l4491 2F14                        l4483 2EEA  
                      l4539 2FD2                        l3829 1D0A                        l3781 1B68  
                      l3773 1B1C                        l3765 1AE4                        l3757 1AA6  
                      l3749 1A82                        l3941 189C                        l3933 1836  
                      l3925 1804                        l3917 1798                        l3909 172A  
                      l3861 15C8                        l3853 15A6                        l3845 1574  
                      l3685 1548                        l3677 1530                        l3669 14F8  
                      l3597 12D8                        l3589 12A6                        l3693 2E8A  
                      l4397 2ADE                        l4389 2A78                        l4477 2E48  
                      l4485 2EF4                        l3791 1BA8                        l3783 1B6A  
                      l3775 1B30                        l3767 1AF4                        l3951 18FE  
                      l3943 18A8                        l3935 1844                        l3927 1812  
                      l3919 17CE                        l3871 1608                        l3863 15D6  
                      l3855 15AC                        l3847 1576                        l4495 2848  
                      l3679 1532                        l3599 12E6                        l3695 2E8E  
                      l4399 2AE6                        l4479 2E64                        l4487 2EFC  
                      l3793 1BB2                        l3785 1B7A                        l3777 1B3E  
                      l3769 1B04                        l3961 1966                        l3953 1912  
                      l3945 18B6                        l3937 1872                        l3929 1824  
                      l3881 1652                        l3873 160E                        l3865 15D8  
                      l3857 15BC                        l3849 1586                        l4497 288E  
                      l3689 2E70                        l3697 2FE2                        l4489 2F04  
                      l3795 1BC0                        l3787 1B8C                        l3779 1B4A  
                      l3963 1968                        l3955 192C                        l3947 18E0  
                      l3891 16A2                        l3883 165E                        l3875 162E  
                      l3867 15E8                        l3859 15C2                        l4499 28C2  
                      l3971 2DEA                        l3699 2FFE                        l3789 1BA2  
                      l3797 1BD2                        l3957 1948                        l3965 196E  
                      l3949 18E4                        l3893 16AE                        l3885 1668  
                      l3877 163E                        l3869 15F8                        l3981 2A04  
                      l3973 2DFA                        l3799 1BE0                        l3967 1972  
                      l3959 1958                        l3895 16BA                        l3887 167E  
                      l3983 2A32                        l3897 16C8                        l3889 168A  
                      l3985 2A42                        l3977 29C6                        l3993 2562  
                      l3899 16D4                        l3987 2A66                        l3979 29F4  
                      l3995 2590                        l3989 2A6C                        l3997 25A0  
                      l3999 25CE                        STR_1 0621                        STR_2 0630  
                      STR_3 0601                        STR_4 0611                        STR_5 063C  
                      STR_8 0640                        u4000 1288                        u4001 1284  
                      u4010 1296                        u4011 1292                        u4100 13F4  
                      u4020 12A6                        u4101 13F0                        u4021 12A2  
                      u4110 1404                        u4030 12D8                        u4111 1400  
                      u4031 12D4                        u3160 301E                        u4200 14E8  
                      u4120 1420                        u4040 12E6                        u5000 2060  
                      u3161 301A                        u4201 14E4                        u4121 141C  
                      u4041 12E2                        u4210 14F8                        u4130 1430  
                      u4050 1304                        u5010 207C                        u4211 14F4  
                      u4131 142C                        u4051 1300                        u5011 2078  
                      u4300 1A16                        u4220 1518                        u4140 1442  
                      u4060 133C                        u5020 20D0                        u5100 0714  
                      u4301 1A12                        u4221 1514                        u4141 143E  
                      u4061 1338                        u5005 2056                        u5101 0710  
                      u4310 1A26                        u4230 152A                        u4150 1458  
                      u4070 1382                        u5030 20EC                        u5110 0786  
                      u4311 1A22                        u4231 1526                        u4151 1454  
                      u4071 137E                        u5031 20E8                        u5111 0782  
                      u4400 1BE0                        u4320 1A66                        u3600 2B28  
                      u4240 1546                        u4160 146E                        u4080 13B8  
                      u5040 2128                        u5200 0A18                        u5120 0798  
                      u4401 1BDC                        u4321 1A62                        u3601 2B24  
                      u4241 1542                        u4161 146A                        u4081 13B4  
                      u5041 2124                        u5025 20C6                        u5201 0A14  
                      u5121 0794                        u1850 2F78                        u4410 1BF2  
                      u4330 1AA6                        u3610 2B44                        u4170 1482  
                      u4090 13C8                        u5050 2DE8                        u4250 2EAE  
                      u5210 0A26                        u5130 080E                        u1851 2F74  
                      u4411 1BEE                        u4331 1AA2                        u3611 2B40  
                      u4171 147E                        u4091 13C4                        u5051 2DE4  
                      u4251 2EAA                        u5211 0A22                        u5131 080A  
                      u4420 1C20                        u4340 1B1C                        u4260 199E  
                      u4500 1586                        u3700 2284                        u3620 2B78  
                      u4180 149C                        u5300 0E28                        u5220 0A50  
                      u5140 089A                        u5060 066A                        u4421 1C1C  
                      u4341 1B18                        u4261 199A                        u4501 1582  
                      u3701 2280                        u4181 1498                        u5301 0E24  
                      u5221 0A4C                        u5141 0896                        u5061 0666  
                      u4430 1C36                        u4350 1B3E                        u4270 19B0  
                      u4510 1596                        u3710 2294                        u3630 2BA4  
                      u4190 14D6                        u5310 0E36                        u5230 0B98  
                      u5150 08CC                        u5070 06B4                        u4431 1C32  
                      u4351 1B3A                        u4271 19AC                        u4511 1592  
                      u3711 2290                        u4191 14D2                        u5311 0E32  
                      u5231 0B94                        u5151 08C8                        u5071 06B0  
                      u4440 1C4A                        u4360 1B68                        u4280 19C0  
                      u4600 1844                        u4520 15D6                        u3720 22A2  
                      u3640 2BB4                        u5400 105E                        u5320 0E8A  
                      u5240 0BFE                        u5160 090A                        u5080 06C4  
                      u4441 1C46                        u4361 1B64                        u4281 19BC  
                      u4601 1840                        u4521 15D2                        u3721 229E  
                      u3641 2BB0                        u5401 105A                        u5321 0E86  
                      u5241 0BFA                        u5161 0906                        u5081 06C0  
                      u4450 1C64                        u4370 1B8C                        u4290 1A04  
                      u4610 1872                        u4530 15E8                        u3730 22DC  
                      u3650 215C                        u5330 0F5C                        u5250 0C46  
                      u5170 0996                        u5090 0702                        u5410 2A9A  
                      u4451 1C60                        u4371 1B88                        u4291 1A00  
                      u4611 186E                        u4531 15E4                        u3731 22D8  
                      u3651 2158                        u3627 2B6E                        u5331 0F58  
                      u5251 0C42                        u5171 0992                        u5091 06FE  
                      u5411 2A96                        u4460 1CAC                        u4380 1BA2  
                      u4620 1888                        u4540 15F8                        u3740 22EA  
                      u3660 216A                        u4700 2A66                        u3900 112E  
                      u3820 292C                        u5340 0F78                        u5260 0C56  
                      u5180 09CC                        u5420 2B0C                        u5500 23A0  
                      u4461 1CA8                        u4381 1B9E                        u4621 1884  
                      u4541 15F4                        u3741 22E6                        u3661 2166  
                      u3637 2B9A                        u4701 2A62                        u3901 112A  
                      u3821 2928                        u5341 0F74                        u5261 0C52  
                      u5181 09C8                        u5421 2B08                        u5501 239C  
                      u4470 1CDC                        u4390 1BC0                        u4630 189C  
                      u4550 162E                        u3670 21C6                        u4710 2590  
                      u3910 1140                        u3830 293C                        u5350 0FDE  
                      u5270 0CF0                        u5190 09E2                        u5430 1D40  
                      u3750 2C04                        u5510 23DE                        u4471 1CD8  
                      u4391 1BBC                        u4631 1898                        u4551 162A  
                      u3671 21C2                        u4711 258C                        u3911 113C  
                      u3831 2938                        u5351 0FD8                        u5271 0CEC  
                      u5191 09DE                        u5431 1D3C                        u3751 2C00  
                      u5511 23DA                        u4480 1D0A                        u4640 18B6  
                      u4560 163E                        u3680 221C                        u4720 25CE  
                      u3920 1150                        u4800 24E8                        u3840 2962  
                      u5360 0FE0                        u5280 0D3E                        u5440 1DA4  
                      u5520 2410                        u4481 1D06                        u4641 18B2  
                      u4561 163A                        u3681 2218                        u3585 3032  
                      u4721 25CA                        u3921 114C                        u4801 24E4  
                      u3841 295E                        u5281 0D3A                        u5441 1DA0  
                      u5521 240C                        u4650 18FE                        u4570 17B8  
                      u4490 1574                        u3690 2266                        u3586 3034  
                      u4730 25EC                        u3930 118C                        u4810 2510  
                      u3850 2994                        u5370 0FF2                        u5290 0DEC  
                      u5450 1DC6                        u5530 244E                        u4651 18FA  
                      u4491 1570                        u3691 2262                        u4731 25E8  
                      u3931 1188                        u4811 250C                        u3851 2990  
                      u5371 0FEE                        u5291 0DE8                        u5451 1DC2  
                      u5531 244A                        u4660 192C                        u4580 1812  
                      u4740 260C                        u3940 119A                        u3860 10B4  
                      u4820 2530                        u5380 1030                        u5460 1E4E  
                      u4661 1928                        u4581 180E                        u4741 2608  
                      u3941 1196                        u3861 10B0                        u4821 252C  
                      u5381 102C                        u5461 1E4A                        u4670 1966  
                      u4590 1832                        u4750 265C                        u3950 1208  
                      u3870 10C6                        u4830 2540                        u4910 2750  
                      u5390 104E                        u5470 2E64                        u4671 1962  
                      u4591 182E                        u4575 17AE                        u4751 2658  
                      u3951 1204                        u3871 10C2                        u4831 253C  
                      u4911 274A                        u5391 104A                        u5471 2E60  
                      u5607 2C4C                        u4680 29F4                        u4760 2F38  
                      u3960 1220                        u3880 10D6                        u4920 2752  
                      u4840 2CEC                        u5480 2330                        u5617 3036  
                      u4681 29F0                        u4761 2F34                        u3961 121A  
                      u3881 10D2                        u4905 2728                        u4841 2CE8  
                      u5481 232C                        u4690 2A32                        u3970 1222  
                      u3890 1118                        u4770 2472                        u4850 2D32  
                      u4930 2EE8                        u5490 236E                        u5627 27D4  
                      u4691 2A2E                        u3891 1114                        u4771 246E  
                      u4851 2D2E                        u4931 2EE4                        u5547 2BD0  
                      u5491 236A                        u3980 124A                        u4780 24A6  
                      u4860 26A6                        u4940 2D52                        u5637 2F60  
                      u3981 1246                        u4941 2D4E                        u5557 2BEA  
                      u3990 1268                        u4790 24D4                        u4870 26C4  
                      u4950 1F80                        u3991 1264                        u4791 24D0  
                      u4871 26C0                        u5567 2C0C                        u4880 26EC  
                      u4960 1FAE                        u4785 249C                        u4881 26E8  
                      u4865 269C                        u4961 1FAA                        u5577 2C1A  
                      u4890 2716                        u4970 1FD0                        u4891 2712  
                      u4971 1FCC                        u4955 1F76                        u5587 2C2C  
                      u5597 2C3E                        u4990 203C                        u4991 2038  
                      u4985 1FE4                        u4986 1FEE                        u4987 1FFE  
                      _dbuf 0100                        _labs 2D44                        _main 2FBA  
                      _prec 006F                        pad@i 0015                        pad@p 0012  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
             ___fpclassifyf 2666                        prodh 0FF4                        prodl 0FF3  
                      start 0000             ___fldiv@new_exp 0039             _equation_SENSOR 2848  
              ___param_bank 0000                       ??_pad 0014               ___fltol@sign1 0009  
                     ?_labs 0001             __end_of___fladd 155A                       ?_main 0001  
           __end_of___fldiv 1D1E             __end_of___flneg 2F5A             __end_of___flmul 1984  
           __end_of___flsub 2E30             __end_of___fltol 2562               _VoltageSensor 00CE  
              vfpfcnvrt@fmt 005E                       _PORTC 0F82                       _PORTD 0F83  
                     _TRISC 0F94                       _TRISD 0F95             __end_of_lcd_cmd 2848  
                     _flags 0071         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 291C                       _fputs 2E70                       labs@a 0001  
                     pad@fp 000F                       _width 006D                       _putch 3068  
           __end_of_set_bit 3028                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 2F22              ?___fpclassifyf 0001                lcd_write@end 000A  
              lcd_write@col 0007                lcd_write@lin 000B                lcd_write@str 0008  
           __initialization 2F8C                __end_of_labs 2D9A                __end_of_main 2FE2  
           ??_lcd_send_byte 0006                      ??_labs 0005                      ??_main 0069  
             __activetblptr 0002  __end_of_read_prec_or_width 2B16                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    ?_putch 0001     __end_of_equation_SENSOR 291C                      _OSCCON 0FD3  
             vfpfcnvrt@done 0065            __end_of___xxtofl 22FE            __end_of_conv_AN0 2F8C  
              vfprintf@cfmt 0068            __end_of_lcd_init 2C54                      ___flge 2562  
                    ___fleq 29C6                   ??___fladd 0009                      ___wmul 2FE2  
                 ??___fldiv 0030                   ??___flneg 0005                   ??___flmul 0017  
                 ??___flsub 0030                   ??___fltol 0005                      _efgtoa 0646  
                    _floorf 1F38                      _memcpy 2D9A        read_prec_or_width@ap 0008  
                    clear_0 2F92                      clear_1 2F9E                      clear_2 2FAA  
                    isa$std 0001                      pad@buf 0010                   ??_lcd_cmd 0003  
                    _strcpy 2EB0                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_set_bit 0002                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 2E70  
                 ??_sprintf 0069                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0080     __end_of__initialization 2FB0                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 29C6               __end_of_fputs 2EB0               __end_of_putch 306A  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00C2                  __pbssBANK1 0100            ?_equation_SENSOR 0001  
               _VdigADC_AN0 0072                     ?___flge 0028                     ?___fleq 0001  
                _lcd_SENSOR 2C54                     ?___wmul 0001                     ?_efgtoa 0055  
             _logic_CONTROL 22FE                     ?_floorf 0041                     ?_memcpy 0001  
                   ?_strcpy 0001                  _config_ADC 3046                   ?___xxtofl 0001  
        lcd_send_byte@level 0006                     _OSCTUNE 0F9B                   ?_conv_AN0 0001  
                 ?_lcd_init 0001                     __Hparam 0000                     __Lparam 0000  
         __end_of_config_IO 305E           _BufferLCD_Voltage 00E2                     ___fladd 109A  
            ?_logic_CONTROL 0001                     ___fldiv 1984                     ___flneg 2F22  
                   ___flmul 155A                     ___flsub 2DEA                     ___fltol 245C  
         __end_of_lcd_write 2BB6                   ?_vfprintf 00AC                 set_bit@comp 0001  
              __psmallconst 0600                     __pcinit 2F8C                     __ramtop 0600  
                   __ptext0 2FBA                     __ptext1 22FE                     __ptext2 2BB6  
                   __ptext3 2C54                     __ptext4 2EEA                     __ptext5 2E30  
                   __ptext6 1D1E                     __ptext7 2A70                     __ptext8 2FE2  
                   __ptext9 0646                     _lcd_cmd 2764       read_prec_or_width@fmt 0007  
               _PressSensor 0069                  ??___xxtofl 0005                     _set_bit 3008  
                   efgtoa@c 005A                     efgtoa@d 008B                     efgtoa@e 008F  
                   efgtoa@f 0056                     efgtoa@g 00A2                     efgtoa@h 0097  
                   efgtoa@i 009F                     efgtoa@l 009B                     efgtoa@m 008D  
                   efgtoa@n 00A6                     efgtoa@p 0082                     efgtoa@t 0084  
                   efgtoa@u 00A8                     efgtoa@w 0095                  ??_conv_AN0 0001  
                   _sprintf 2EEA                  ??_lcd_init 0005        end_of_initialization 2FB0  
                   floorf@e 004F                     floorf@m 004B                     floorf@u 0051  
                   floorf@x 0041                     memcpy@d 0008                     memcpy@n 0005  
                   memcpy@s 000A                     fputc@fp 0003               __Lmediumconst 0000  
                   fputs@fp 000B          _read_prec_or_width 2A70           __end_of_vfpfcnvrt 1F38  
                efgtoa@mode 0089                  efgtoa@sign 00A1                 ?_lcd_SENSOR 0001  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0061  
                ??_vfprintf 0068       __end_of_lcd_send_byte 3046                     strcpy@d 0005  
                 _PORTCbits 0F82                   _PORTDbits 0F83                   _PORTEbits 0F84  
               ___fladd@grs 0010                 ?_config_ADC 0001               ___xxtofl@sign 0009  
                 _TRISEbits 0F96                  lcd_cmd@cmd 0004        ??_read_prec_or_width 0009  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                 ___flmul@grs 001D  
             ??_config_FOSC 0001             ??_logic_CONTROL 0034              __end_of___flge 2666  
            __end_of___fleq 2A70                 vfpfcnvrt@ap 005F                 vfpfcnvrt@cp 0067  
               vfpfcnvrt@fp 005D              __end_of___wmul 3008              __end_of_efgtoa 109A  
            __end_of_floorf 214A              __end_of_memcpy 2DEA                  floorf@F521 00C2  
            __end_of_strcpy 2EEA         start_initialization 2F8C                 __end_of_pad 2D44  
     __end_of___fpclassifyf 2764                 vfprintf@fmt 00AD                    ??___flge 0030  
                  ??___fleq 0009         __end_of_config_FOSC 3068                    ??___wmul 0005  
                  ??_efgtoa 005B                    ??_floorf 0045                    ??_memcpy 0007  
                  ??_strcpy 0004                   ___fladd@a 0005                   ___fladd@b 0001  
                 ___fldiv@a 002C                   ___fldiv@b 0028                   ___flmul@a 0013  
                 ___flmul@b 000F                 __pbssCOMRAM 0069                   ___flsub@a 002C  
                 ___flsub@b 0028               __pcstackBANK0 0080                 _efgtoa$1030 0086  
                  ?___fladd 0001                    ?___fldiv 0028                    ?___flneg 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0001  
                 _config_IO 3054           lcd_send_byte@data 0005                    ?_lcd_cmd 0001  
                 _lcd_write 2B16                 __smallconst 0600                    ?_set_bit 0001  
                set_bit@cmd 0002                    ?_sprintf 00AF              ___wmul@product 0005  
               _config_FOSC 305E                ??_lcd_SENSOR 0069                   _vfpfcnvrt 1D1E  
                ?_config_IO 0001                  _ADCON0bits 0FC2                  ?_lcd_write 0007  
         ___wmul@multiplier 0001                   lcd_init@i 0006                ??_config_ADC 0001  
                vfpfcnvrt@c 0066          __end_of_lcd_SENSOR 2CDE                    __Hrparam 0000  
                 memcpy@tmp 0007                  vfprintf@ap 00AE                    __Lrparam 0000  
                vfprintf@fp 00AC          __end_of_config_ADC 3054                  ?_vfpfcnvrt 005D  
         ??_equation_SENSOR 0041          ___fpclassifyf@F465 00C6                  sprintf@fmt 00B0  
                  ___xxtofl 214A                    __ptext10 2EB0                    __ptext11 2CDE  
                  __ptext20 2DEA                    __ptext12 2E70                    __ptext21 109A  
                  __ptext13 291C                    __ptext30 214A                    __ptext22 2F22  
                  __ptext14 3068                    __ptext31 155A                    __ptext23 2562  
                  __ptext15 2D9A                    __ptext32 1984                    __ptext24 29C6  
                  __ptext16 2D44                    __ptext33 2F5A                    __ptext25 2B16  
                  __ptext17 1F38                    __ptext34 3054                    __ptext26 3028  
                  __ptext18 2666                    __ptext35 305E                    __ptext27 2764  
                  __ptext19 245C                    __ptext36 3046                    __ptext28 3008  
                  __ptext29 2848                    _conv_AN0 2F5A                    _lcd_init 2BB6  
                strcpy@dest 0001             _BufferLCD_Press 00D2                _PressPercent 00CA  
                  efgtoa@fp 0055                    efgtoa@ne 0080                    efgtoa@pp 0088  
                  efgtoa@ou 0091                    isa$xinst 0000       __end_of_logic_CONTROL 245C  
                  _vfprintf 2E30                 ??_config_IO 0001                 ??_lcd_write 000A  
                  memcpy@d1 0001                    memcpy@s1 0003                   sprintf@ap 00B5  
                 strcpy@src 0003                 efgtoa@nmode 008A                 ??_vfpfcnvrt 0060  
             _lcd_send_byte 3028                    sprintf@f 00B6                    sprintf@s 00AF  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
              ?_config_FOSC 0001  
